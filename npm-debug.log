0 info it worked if it ends with ok
1 verbose cli [ 'node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'grunt-cli',
1 verbose cli   'uglify-js' ]
2 info using npm@1.2.2
3 info using node@v0.8.18
4 verbose read json /usr/local/lib/package.json
5 verbose read json /usr/local/lib/package.json
6 verbose cache add [ 'grunt-cli', null ]
7 verbose cache add name=undefined spec="grunt-cli" args=["grunt-cli",null]
8 verbose parsed url { pathname: 'grunt-cli', path: 'grunt-cli', href: 'grunt-cli' }
9 verbose cache add [ 'uglify-js', null ]
10 verbose cache add name=undefined spec="uglify-js" args=["uglify-js",null]
11 verbose parsed url { pathname: 'uglify-js', path: 'uglify-js', href: 'uglify-js' }
12 silly lockFile 671ef8ac-grunt-cli grunt-cli
13 verbose lock grunt-cli /Users/Connor/.npm/671ef8ac-grunt-cli.lock
14 silly lockFile d31cae06-uglify-js uglify-js
15 verbose lock uglify-js /Users/Connor/.npm/d31cae06-uglify-js.lock
16 silly lockFile 671ef8ac-grunt-cli grunt-cli
17 silly lockFile d31cae06-uglify-js uglify-js
18 verbose addNamed [ 'grunt-cli', '' ]
19 verbose addNamed [ null, '' ]
20 silly lockFile d63f3d0b-grunt-cli grunt-cli@
21 verbose lock grunt-cli@ /Users/Connor/.npm/d63f3d0b-grunt-cli.lock
22 verbose addNamed [ 'uglify-js', '' ]
23 verbose addNamed [ null, '' ]
24 silly lockFile 679a1028-uglify-js uglify-js@
25 verbose lock uglify-js@ /Users/Connor/.npm/679a1028-uglify-js.lock
26 silly addNameRange { name: 'grunt-cli', range: '', hasData: false }
27 silly addNameRange { name: 'uglify-js', range: '', hasData: false }
28 verbose url raw grunt-cli
29 verbose url resolving [ 'https://registry.npmjs.org/', './grunt-cli' ]
30 verbose url resolved https://registry.npmjs.org/grunt-cli
31 info trying registry request attempt 1 at 13:37:23
32 verbose etag "E6PIX77XSSUZ8GGMDYC0R3OVA"
33 http GET https://registry.npmjs.org/grunt-cli
34 verbose url raw uglify-js
35 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
36 verbose url resolved https://registry.npmjs.org/uglify-js
37 info trying registry request attempt 1 at 13:37:23
38 verbose etag "2D8N48FOOWKOR2H5YZAT0TOWP"
39 http GET https://registry.npmjs.org/uglify-js
40 http 304 https://registry.npmjs.org/uglify-js
41 silly registry.get cb [ 304,
41 silly registry.get   { date: 'Sat, 23 Jan 2016 18:37:23 GMT',
41 silly registry.get     via: '1.1 varnish',
41 silly registry.get     'cache-control': 'max-age=300',
41 silly registry.get     etag: '"2D8N48FOOWKOR2H5YZAT0TOWP"',
41 silly registry.get     age: '88',
41 silly registry.get     connection: 'keep-alive',
41 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
41 silly registry.get     'x-cache': 'HIT',
41 silly registry.get     'x-cache-hits': '3',
41 silly registry.get     'x-timer': 'S1453574243.616148,VS0,VE0',
41 silly registry.get     vary: 'Accept' } ]
42 verbose etag uglify-js from cache
43 http 304 https://registry.npmjs.org/grunt-cli
44 silly registry.get cb [ 304,
44 silly registry.get   { date: 'Sat, 23 Jan 2016 18:37:23 GMT',
44 silly registry.get     via: '1.1 varnish',
44 silly registry.get     'cache-control': 'max-age=300',
44 silly registry.get     etag: '"E6PIX77XSSUZ8GGMDYC0R3OVA"',
44 silly registry.get     age: '219',
44 silly registry.get     connection: 'keep-alive',
44 silly registry.get     'x-served-by': 'cache-jfk1024-JFK',
44 silly registry.get     'x-cache': 'HIT',
44 silly registry.get     'x-cache-hits': '7',
44 silly registry.get     'x-timer': 'S1453574243.619137,VS0,VE0',
44 silly registry.get     vary: 'Accept' } ]
45 verbose etag grunt-cli from cache
46 silly addNameRange number 2 { name: 'uglify-js', range: '', hasData: true }
47 silly addNameRange versions [ 'uglify-js',
47 silly addNameRange   [ '0.0.1',
47 silly addNameRange     '0.0.2',
47 silly addNameRange     '0.0.3',
47 silly addNameRange     '0.0.4',
47 silly addNameRange     '0.0.5',
47 silly addNameRange     '1.0.1',
47 silly addNameRange     '1.0.2',
47 silly addNameRange     '1.0.3',
47 silly addNameRange     '1.0.4',
47 silly addNameRange     '1.0.5',
47 silly addNameRange     '1.0.6',
47 silly addNameRange     '1.0.7',
47 silly addNameRange     '1.1.0',
47 silly addNameRange     '1.1.1',
47 silly addNameRange     '1.2.0',
47 silly addNameRange     '1.2.1',
47 silly addNameRange     '1.2.2',
47 silly addNameRange     '1.2.3',
47 silly addNameRange     '1.2.4',
47 silly addNameRange     '1.2.5',
47 silly addNameRange     '1.2.6',
47 silly addNameRange     '1.3.0',
47 silly addNameRange     '1.3.1',
47 silly addNameRange     '1.3.2',
47 silly addNameRange     '1.3.3',
47 silly addNameRange     '1.3.4',
47 silly addNameRange     '2.2.0',
47 silly addNameRange     '2.2.1',
47 silly addNameRange     '2.2.2',
47 silly addNameRange     '2.2.3',
47 silly addNameRange     '2.2.4',
47 silly addNameRange     '2.2.5',
47 silly addNameRange     '2.3.0',
47 silly addNameRange     '2.3.1',
47 silly addNameRange     '2.3.2',
47 silly addNameRange     '2.3.3',
47 silly addNameRange     '2.3.4',
47 silly addNameRange     '2.3.5',
47 silly addNameRange     '2.3.6',
47 silly addNameRange     '1.3.5',
47 silly addNameRange     '2.4.0',
47 silly addNameRange     '2.4.1',
47 silly addNameRange     '2.4.2',
47 silly addNameRange     '2.4.3',
47 silly addNameRange     '2.4.4',
47 silly addNameRange     '2.4.5',
47 silly addNameRange     '2.4.6',
47 silly addNameRange     '2.4.7',
47 silly addNameRange     '2.4.8',
47 silly addNameRange     '2.4.9',
47 silly addNameRange     '2.4.10',
47 silly addNameRange     '2.4.11',
47 silly addNameRange     '2.4.12',
47 silly addNameRange     '2.4.13',
47 silly addNameRange     '2.4.14',
47 silly addNameRange     '2.4.15',
47 silly addNameRange     '2.4.16',
47 silly addNameRange     '2.4.17',
47 silly addNameRange     '2.4.18',
47 silly addNameRange     '2.4.19',
47 silly addNameRange     '2.4.20',
47 silly addNameRange     '2.4.21',
47 silly addNameRange     '2.4.22',
47 silly addNameRange     '2.4.23',
47 silly addNameRange     '2.4.24',
47 silly addNameRange     '2.5.0',
47 silly addNameRange     '2.6.0',
47 silly addNameRange     '2.6.1' ] ]
48 verbose addNamed [ 'uglify-js', '2.6.1' ]
49 verbose addNamed [ '2.6.1', '2.6.1' ]
50 silly lockFile 67278b19-uglify-js-2-6-1 uglify-js@2.6.1
51 verbose lock uglify-js@2.6.1 /Users/Connor/.npm/67278b19-uglify-js-2-6-1.lock
52 silly addNameRange number 2 { name: 'grunt-cli', range: '', hasData: true }
53 silly addNameRange versions [ 'grunt-cli',
53 silly addNameRange   [ '0.1.0',
53 silly addNameRange     '0.1.1',
53 silly addNameRange     '0.1.2',
53 silly addNameRange     '0.1.3',
53 silly addNameRange     '0.1.4',
53 silly addNameRange     '0.1.5',
53 silly addNameRange     '0.1.6',
53 silly addNameRange     '0.1.7',
53 silly addNameRange     '0.1.8',
53 silly addNameRange     '0.1.9',
53 silly addNameRange     '0.1.10',
53 silly addNameRange     '0.1.11',
53 silly addNameRange     '0.1.12',
53 silly addNameRange     '0.1.13' ] ]
54 verbose addNamed [ 'grunt-cli', '0.1.13' ]
55 verbose addNamed [ '0.1.13', '0.1.13' ]
56 silly lockFile 28997503-grunt-cli-0-1-13 grunt-cli@0.1.13
57 verbose lock grunt-cli@0.1.13 /Users/Connor/.npm/28997503-grunt-cli-0-1-13.lock
58 verbose read json /Users/Connor/.npm/uglify-js/2.6.1/package/package.json
59 verbose read json /Users/Connor/.npm/grunt-cli/0.1.13/package/package.json
60 silly lockFile 67278b19-uglify-js-2-6-1 uglify-js@2.6.1
61 silly lockFile 679a1028-uglify-js uglify-js@
62 silly lockFile 28997503-grunt-cli-0-1-13 grunt-cli@0.1.13
63 silly lockFile d63f3d0b-grunt-cli grunt-cli@
64 silly resolved [ { name: 'uglify-js',
64 silly resolved     description: 'JavaScript parser, mangler/compressor and beautifier toolkit',
64 silly resolved     homepage: 'http://lisperator.net/uglifyjs',
64 silly resolved     author:
64 silly resolved      { name: 'Mihai Bazon',
64 silly resolved        email: 'mihai.bazon@gmail.com',
64 silly resolved        url: 'http://lisperator.net/' },
64 silly resolved     license: 'BSD-2-Clause',
64 silly resolved     version: '2.6.1',
64 silly resolved     engines: { node: '>=0.8.0' },
64 silly resolved     maintainers: [ [Object] ],
64 silly resolved     repository: { type: 'git', url: 'https://github.com/mishoo/UglifyJS2.git' },
64 silly resolved     bugs: { url: 'https://github.com/mishoo/UglifyJS2/issues' },
64 silly resolved     main: 'tools/node.js',
64 silly resolved     bin: { uglifyjs: 'bin/uglifyjs' },
64 silly resolved     files: [ 'bin', 'lib', 'tools', 'LICENSE' ],
64 silly resolved     dependencies:
64 silly resolved      { async: '~0.2.6',
64 silly resolved        'source-map': '~0.5.1',
64 silly resolved        'uglify-to-browserify': '~1.0.0',
64 silly resolved        yargs: '~3.10.0' },
64 silly resolved     devDependencies:
64 silly resolved      { acorn: '~0.6.0',
64 silly resolved        escodegen: '~1.3.3',
64 silly resolved        esfuzz: '~0.3.1',
64 silly resolved        estraverse: '~1.5.1' },
64 silly resolved     browserify: { transform: [Object] },
64 silly resolved     scripts:
64 silly resolved      { shrinkwrap: 'rm ./npm-shrinkwrap.json; rm -rf ./node_modules; npm i && npm shrinkwrap && npm outdated',
64 silly resolved        test: 'node test/run-tests.js' },
64 silly resolved     readme: 'UglifyJS 2\n==========\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.svg)](https://travis-ci.org/mishoo/UglifyJS2)\n\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\n\nThis page documents the command line utility.  For\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\nThere\'s also an\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\nChrome and probably Safari).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\nFrom Git:\n\n    git clone git://github.com/mishoo/UglifyJS2.git\n    cd UglifyJS2\n    npm link .\n\nUsage\n-----\n\n    uglifyjs [input files] [options]\n\nUglifyJS2 can take multiple input files.  It\'s recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf you want to read from STDIN instead, pass a single dash instead of input\nfiles.\n\nIf you wish to pass your options before the input files, separate the two with\na double dash to prevent input files being used as option arguments:\n\n    uglifyjs --compress --mangle -- input.js\n\nThe available options are:\n\n```\n  --source-map                  Specify an output file where to generate source\n                                map.\n  --source-map-root             The path to the original source to be included\n                                in the source map.\n  --source-map-url              The path to the source map to be added in //#\n                                sourceMappingURL.  Defaults to the value passed\n                                with --source-map.\n  --source-map-include-sources  Pass this flag if you want to include the\n                                content of source files in the source map as\n                                sourcesContent property.\n  --in-source-map               Input source map, useful if you\'re compressing\n                                JS that was generated from some other original\n                                code.\n  --screw-ie8                   Pass this flag if you don\'t care about full\n                                compliance with Internet Explorer 6-8 quirks\n                                (by default UglifyJS will try to be IE-proof).\n  --expr                        Parse a single expression, rather than a\n                                program (for parsing JSON)\n  -p, --prefix                  Skip prefix for original filenames that appear\n                                in source maps. For example -p 3 will drop 3\n                                directories from file names and ensure they are\n                                relative paths. You can also specify -p\n                                relative, which will make UglifyJS figure out\n                                itself the relative paths between original\n                                sources, the source map and the output file.\n  -o, --output                  Output file (default STDOUT).\n  -b, --beautify                Beautify output/specify output options.\n  -m, --mangle                  Mangle names/pass mangler options.\n  -r, --reserved                Reserved names to exclude from mangling.\n  -c, --compress                Enable compressor/pass compressor options. Pass\n                                options like -c\n                                hoist_vars=false,if_return=false. Use -c with\n                                no argument to use the default compression\n                                options.\n  -d, --define                  Global definitions\n  -e, --enclose                 Embed everything in a big function, with a\n                                configurable parameter/argument list.\n  --comments                    Preserve copyright comments in the output. By\n                                default this works like Google Closure, keeping\n                                JSDoc-style comments that contain "@license" or\n                                "@preserve". You can optionally pass one of the\n                                following arguments to this flag:\n                                - "all" to keep all comments\n                                - a valid JS regexp (needs to start with a\n                                slash) to keep only comments that match.\n                                Note that currently not *all* comments can be\n                                kept when compression is on, because of dead\n                                code removal or cascading statements into\n                                sequences.\n  --preamble                    Preamble to prepend to the output.  You can use\n                                this to insert a comment, for example for\n                                licensing information.  This will not be\n                                parsed, but the source map will adjust for its\n                                presence.\n  --stats                       Display operations run time on STDERR.\n  --acorn                       Use Acorn for parsing.\n  --spidermonkey                Assume input files are SpiderMonkey AST format\n                                (as JSON).\n  --self                        Build itself (UglifyJS2) as a library (implies\n                                --wrap=UglifyJS --export-all)\n  --wrap                        Embed everything in a big function, making the\n                                “exports” and “global” variables available. You\n                                need to pass an argument to this option to\n                                specify the name that your module will take\n                                when included in, say, a browser.\n  --export-all                  Only used when --wrap, this tells UglifyJS to\n                                add code to automatically export all globals.\n  --lint                        Display some scope warnings\n  -v, --verbose                 Verbose\n  -V, --version                 Print version number and exit.\n  --noerr                       Don\'t throw an error for unknown options in -c,\n                                -b or -m.\n  --bare-returns                Allow return outside of functions.  Useful when\n                                minifying CommonJS modules.\n  --keep-fnames                 Do not mangle/drop function names.  Useful for\n                                code relying on Function.prototype.name.\n  --reserved-file               File containing reserved names\n  --reserve-domprops            Make (most?) DOM properties reserved for\n                                --mangle-props\n  --mangle-props                Mangle property names\n  --mangle-regex                Only mangle property names matching the regex\n  --name-cache                  File to hold mangled names mappings\n  --pure-funcs                  List of functions that can be safely removed if\n                                their return value is not used           [array]\n```\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## Source map options\n\nUglifyJS2 can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map output.js.map` (full path to the file where you want the\nsource map dumped).\n\nAdditionally you might need `--source-map-root` to pass the URL where the\noriginal files can be found.  In case you are passing full paths to input\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\ndirectories to drop from the path prefix when declaring files in the source\nmap.\n\nFor example:\n\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\n             /home/doe/work/foo/src/js/file2.js \\\n             -o foo.min.js \\\n             --source-map foo.min.js.map \\\n             --source-map-root http://foo.com/src \\\n             -p 5 -c -m\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you\'re compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won\'t be too helpful.  Instead, you\'d\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature you need to pass `--in-source-map\n/path/to/input/source.map`.  Normally the input source map should also point\nto the file containing the generated JS, so if that\'s correct you can omit\ninput files from the command line.\n\n## Mangler options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `sort` — to assign shorter names to most frequently used variables.  This\n  saves a few hundred bytes on jQuery before gzip, but the output is\n  _bigger_ after gzip (and seems to happen for other libraries I tried it\n  on) therefore it\'s not enabled by default.\n\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\n  default).\n\n- `eval` — mangle names visible in scopes where `eval` or `with` are used\n  (disabled by default).\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m -r \'$,require,exports\'\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n### Mangling property names (`--mangle-props`)\n\n**Note:** this will probably break your code.  Mangling property names is a\nseparate step, different from variable name mangling.  Pass\n`--mangle-props`.  It will mangle all properties that are seen in some\nobject literal, or that are assigned to.  For example:\n\n```js\nvar x = {\n  foo: 1\n};\n\nx.bar = 2;\nx["baz"] = 3;\nx[condition ? "moo" : "boo"] = 4;\nconsole.log(x.something());\n```\n\nIn the above code, `foo`, `bar`, `baz`, `moo` and `boo` will be replaced\nwith single characters, while `something()` will be left as is.\n\nIn order for this to be of any use, we should avoid mangling standard JS\nnames.  For instance, if your code would contain `x.length = 10`, then\n`length` becomes a candidate for mangling and it will be mangled throughout\nthe code, regardless if it\'s being used as part of your own objects or\naccessing an array\'s length.  To avoid that, you can use `--reserved-file`\nto pass a filename that should contain the names to be excluded from\nmangling.  This file can be used both for excluding variable names and\nproperty names.  It could look like this, for example:\n\n```js\n{\n  "vars": [ "define", "require", ... ],\n  "props": [ "length", "prototype", ... ]\n}\n```\n\n`--reserved-file` can be an array of file names (either a single\ncomma-separated argument, or you can pass multiple `--reserved-file`\narguments) — in this case it will exclude names from all those files.\n\nA default exclusion file is provided in `tools/domprops.json` which should\ncover most standard JS and DOM properties defined in various browsers.  Pass\n`--reserve-domprops` to read that in.\n\nYou can also use a regular expression to define which property names should be\nmangled.  For example, `--mangle-regex="/^_/"` will only mangle property names\nthat start with an underscore.\n\nWhen you compress multiple files using this option, in order for them to\nwork together in the end we need to ensure somehow that one property gets\nmangled to the same name in all of them.  For this, pass `--name-cache\nfilename.json` and UglifyJS will maintain these mappings in a file which can\nthen be reused.  It should be initially empty.  Example:\n\n```\nrm -f /tmp/cache.json  # start fresh\nuglifyjs file1.js file2.js --mangle-props --name-cache /tmp/cache.json -o part1.js\nuglifyjs file3.js file4.js --mangle-props --name-cache /tmp/cache.json -o part2.js\n```\n\nNow, `part1.js` and `part2.js` will be consistent with each other in terms\nof mangled property names.\n\nUsing the name cache is not necessary if you compress all your files in a\nsingle call to UglifyJS.\n\n## Compressor options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of options.  Options are in the form\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\nto set `true`; it\'s effectively a shortcut for `foo=true`).\n\n- `sequences` -- join consecutive simple statements using the comma operator\n\n- `properties` -- rewrite property access using the dot notation, for\n  example `foo["bar"] → foo.bar`\n\n- `dead_code` -- remove unreachable code\n\n- `drop_debugger` -- remove `debugger;` statements\n\n- `unsafe` (default: false) -- apply "unsafe" transformations (discussion below)\n\n- `conditionals` -- apply optimizations for `if`-s and conditional\n  expressions\n\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\n\n- `evaluate` -- attempt to evaluate constant expressions\n\n- `booleans` -- various optimizations for boolean context, for example `!!a\n  ? b : c → a ? b : c`\n\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\n  statically determine the condition\n\n- `unused` -- drop unreferenced functions and variables\n\n- `hoist_funs` -- hoist function declarations\n\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n\n- `if_return` -- optimizations for if/return and if/continue\n\n- `join_vars` -- join consecutive `var` statements\n\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\n  and `x = something(), x` into `x = something()`\n\n- `warnings` -- display warnings when dropping unreachable code or unused\n  declarations etc.\n\n- `negate_iife` -- negate "Immediately-Called Function Expressions"\n  where the return value is discarded, to avoid the parens that the\n  code generator would insert.\n\n- `pure_getters` -- the default is `false`.  If you pass `true` for\n  this, UglifyJS will assume that object property access\n  (e.g. `foo.bar` or `foo["bar"]`) doesn\'t have any side effects.\n\n- `pure_funcs` -- default `null`.  You can pass an array of names and\n  UglifyJS will assume that those functions do not produce side\n  effects.  DANGER: will not check if the name is redefined in scope.\n  An example case here, for instance `var q = Math.floor(a/b)`.  If\n  variable `q` is not used elsewhere, UglifyJS will drop it, but will\n  still keep the `Math.floor(a/b)`, not knowing what it does.  You can\n  pass `pure_funcs: [ \'Math.floor\' ]` to let it know that this\n  function won\'t produce any side effect, in which case the whole\n  statement would get discarded.  The current implementation adds some\n  overhead (compression will be slower).\n\n- `drop_console` -- default `false`.  Pass `true` to discard calls to\n  `console.*` functions.\n\n- `keep_fargs` -- default `true`.  Prevents the\n  compressor from discarding unused function arguments.  You need this\n  for code which relies on `Function.length`.\n\n- `keep_fnames` -- default `false`.  Pass `true` to prevent the\n  compressor from mangling/discarding function names.  Useful for code relying on\n  `Function.prototype.name`.\n\n\n### The `unsafe` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here\'s what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[ 1, 2, 3 ]`\n- `new Object()` → `{}`\n- `String(exp)` or `exp.toString()` → `"" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\n- `typeof foo == "undefined"` → `foo === void 0`\n- `void 0` → `undefined` (if there is a variable named "undefined" in\n  scope; we do it because the variable name will be mangled, typically\n  reduced to a single character)\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n\tconsole.log("debug stuff");\n}\n```\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nconst DEBUG = false;\nconst PRODUCTION = true;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The possible downside of this approach is that the build\nwill contain the `const` declarations.\n\n<a name="codegen-options"></a>\n## Beautifier options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n- `indent-level` (default 4)\n- `indent-start` (default 0) -- prefix all lines by that many spaces\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n- `space-colon` (default `true`) -- insert a space after the colon signs\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\n  regexps\n- `inline-script` (default `false`) -- escape the slash in occurrences of\n  `</script` in strings\n- `width` (default 80) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn\'t work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n- `preamble` (default `null`) -- when passed it must be a string and\n  it will be prepended to the output literally.  The source map will\n  adjust for this text.  Can be used to insert a comment containing\n  licensing information, for example.\n- `quote_style` (default `0`) -- preferred quote style for strings (affects\n  quoted property names and directives as well):\n  - `0` -- prefers double quotes, switches to single quotes when there are\n    more double quotes in the string itself.\n  - `1` -- always use single quotes\n  - `2` -- always use double quotes\n  - `3` -- always use the original quotes\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain "@preserve",\n"@license" or "@cc_on" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments\n\'/foo|bar/\'` will keep only comments that contain "foo" or "bar".\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n\t/** @preserve Foo Bar */\n\tfunction g() {\n\t  // this function is never called\n\t}\n\treturn something();\n}\n```\n\nEven though it has "@preserve", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n## Support for the SpiderMonkey AST\n\nUglifyJS2 has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can\'t easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs --spidermonkey -m -c\n\nThe `--spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon\'t use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `--acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require("acorn")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it\'s a bit more than just using UglifyJS\'s own parser.\n\n### Using UglifyJS to transform SpiderMonkey AST\n\nNow you can use UglifyJS as any other intermediate tool for transforming\nJavaScript ASTs in SpiderMonkey format.\n\nExample:\n\n```javascript\nfunction uglify(ast, options, mangle) {\n  // Conversion from SpiderMonkey AST to internal format\n  var uAST = UglifyJS.AST_Node.from_mozilla_ast(ast);\n\n  // Compression\n  uAST.figure_out_scope();\n  uAST = uAST.transform(UglifyJS.Compressor(options));\n\n  // Mangling (optional)\n  if (mangle) {\n    uAST.figure_out_scope();\n    uAST.compute_char_frequency();\n    uAST.mangle_names();\n  }\n\n  // Back-conversion to SpiderMonkey AST\n  return uAST.to_mozilla_ast();\n}\n```\n\nCheck out\n[original blog post](http://rreverser.com/using-mozilla-ast-with-uglifyjs/)\nfor details.\n\nAPI Reference\n-------------\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require("uglify-js");\n```\n\nIt exports a lot of names, but I\'ll discuss here the basics that are needed\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\nparse, (2) compress, (3) mangle, (4) generate output code.\n\n### The simple way\n\nThere\'s a single toplevel function which combines all the steps.  If you\ndon\'t need additional customization, you might want to go with `minify`.\nExample:\n```javascript\nvar result = UglifyJS.minify("/path/to/file.js");\nconsole.log(result.code); // minified output\n// if you need to pass code instead of file name\nvar result = UglifyJS.minify("var b = function () {};", {fromString: true});\n```\n\nYou can also compress multiple files:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ]);\nconsole.log(result.code);\n```\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map"\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);\n```\n\nNote that the source map is not saved in a file, it\'s just returned in\n`result.map`.  The value passed for `outSourceMap` is only used to set the\n`file` attribute in the source map (see [the spec][sm-spec]).\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map",\n\tsourceRoot: "http://example.com/src"\n});\n```\n\nIf you\'re compressing compiled JavaScript and have a source map for it, you\ncan use the `inSourceMap` argument:\n```javascript\nvar result = UglifyJS.minify("compiled.js", {\n\tinSourceMap: "compiled.js.map",\n\toutSourceMap: "minified.js.map"\n});\n// same as before, it returns `code` and `map`\n```\n\nIf your input source map is not in a file, you can pass it in as an object\nusing the `inSourceMap` argument:\n\n```javascript\nvar result = UglifyJS.minify("compiled.js", {\n\tinSourceMap: JSON.parse(my_source_map_string),\n\toutSourceMap: "minified.js.map"\n});\n```\n\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\nno sense otherwise).\n\nOther options:\n\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\n\n- `fromString` (default `false`) — if you pass `true` then you can pass\n  JavaScript source code, rather than file names.\n\n- `mangle` — pass `false` to skip mangling names.\n\n- `output` (default `null`) — pass an object if you wish to specify\n  additional [output options][codegen].  The defaults are optimized\n  for best compression.\n\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compressor options][compressor].\n\nWe could add more options to `UglifyJS.minify` — if you need additional\nfunctionality please suggest!\n\n### The hard way\n\nFollowing there\'s more detailed API info, in case the `minify` function is\ntoo simple for your needs.\n\n#### The parser\n```javascript\nvar toplevel_ast = UglifyJS.parse(code, options);\n```\n\n`options` is optional and if present it must be an object.  The following\nproperties are available:\n\n- `strict` — disable automatic semicolon insertion and support for trailing\n  comma in arrays and objects\n- `filename` — the name of the file where this code is coming from\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\n  `parse`)\n\nThe last two options are useful when you\'d like to minify multiple files and\nget a single file as the output and a proper source map.  Our CLI tool does\nsomething like this:\n```javascript\nvar toplevel = null;\nfiles.forEach(function(file){\n\tvar code = fs.readFileSync(file, "utf8");\n\ttoplevel = UglifyJS.parse(code, {\n\t\tfilename: file,\n\t\ttoplevel: toplevel\n\t});\n});\n```\n\nAfter this, we have in `toplevel` a big AST containing all our files, with\neach token having proper information about where it came from.\n\n#### Scope information\n\nUglifyJS contains a scope analyzer that you need to call manually before\ncompressing or mangling.  Basically it augments various nodes in the AST\nwith information about where is a name defined, how many times is a name\nreferenced, if it is a global or not, if a function is using `eval` or the\n`with` statement etc.  I will discuss this some place else, for now what\'s\nimportant to know is that you need to call the following before doing\nanything with the tree:\n```javascript\ntoplevel.figure_out_scope()\n```\n\n#### Compression\n\nLike this:\n```javascript\nvar compressor = UglifyJS.Compressor(options);\nvar compressed_ast = toplevel.transform(compressor);\n```\n\nThe `options` can be missing.  Available options are discussed above in\n“Compressor options”.  Defaults should lead to best compression in most\nscripts.\n\nThe compressor is destructive, so don\'t rely that `toplevel` remains the\noriginal tree.\n\n#### Mangling\n\nAfter compression it is a good idea to call again `figure_out_scope` (since\nthe compressor might drop unused variables / unreachable code and this might\nchange the number of identifiers or their position).  Optionally, you can\ncall a trick that helps after Gzip (counting character frequency in\nnon-mangleable words).  Example:\n```javascript\ncompressed_ast.figure_out_scope();\ncompressed_ast.compute_char_frequency();\ncompressed_ast.mangle_names();\n```\n\n#### Generating output\n\nAST nodes have a `print` method that takes an output stream.  Essentially,\nto generate code you do this:\n```javascript\nvar stream = UglifyJS.OutputStream(options);\ncompressed_ast.print(stream);\nvar code = stream.toString(); // this is your minified code\n```\n\nor, for a shortcut you can do:\n```javascript\nvar code = compressed_ast.print_to_string(options);\n```\n\nAs usual, `options` is optional.  The output stream accepts a lot of options,\nmost of them documented above in section “Beautifier options”.  The two\nwhich we care about here are `source_map` and `comments`.\n\n#### Keeping comments in the output\n\nIn order to keep certain comments in the output you need to pass the\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\nthose comments whose body matches the regexp will be kept.  Note that body\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\ncalled for every comment in the tree and will receive two arguments: the\nnode that the comment is attached to, and the comment token itself.\n\nThe comment token has these properties:\n\n- `type`: "comment1" for single-line comments or "comment2" for multi-line\n  comments\n- `value`: the comment body\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\n  original code where this comment appears\n- `line` and `col`: the line and column where this comment appears in the\n  original code\n- `file` — the file name of the original file\n- `nlb` — true if there was a newline before this comment in the original\n  code, or if this comment contains a newline.\n\nYour function should return `true` to keep the comment, or a falsy value\notherwise.\n\n#### Generating a source mapping\n\nYou need to pass the `source_map` argument when calling `print`.  It needs\nto be a `SourceMap` object (which is a thin wrapper on top of the\n[source-map][source-map] library).\n\nExample:\n```javascript\nvar source_map = UglifyJS.SourceMap(source_map_options);\nvar stream = UglifyJS.OutputStream({\n\t...\n\tsource_map: source_map\n});\ncompressed_ast.print(stream);\n\nvar code = stream.toString();\nvar map = source_map.toString(); // json output for your source map\n```\n\nThe `source_map_options` (optional) can contain the following properties:\n\n- `file`: the name of the JavaScript output file that this mapping refers to\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\n- `orig`: the "original source map", handy when you compress generated JS\n  and want to map the minified output back to the original code where it\n  came from.  It can be simply a string in JSON, or a JSON object containing\n  the original source map.\n\n  [acorn]: https://github.com/marijnh/acorn\n  [source-map]: https://github.com/mozilla/source-map\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n  [codegen]: http://lisperator.net/uglifyjs/codegen\n  [compressor]: http://lisperator.net/uglifyjs/compress\n',
64 silly resolved     readmeFilename: 'README.md',
64 silly resolved     _id: 'uglify-js@2.6.1',
64 silly resolved     _from: 'uglify-js@' },
64 silly resolved   { name: 'grunt-cli',
64 silly resolved     description: 'The grunt command line interface.',
64 silly resolved     version: '0.1.13',
64 silly resolved     author: { name: 'Grunt Team' },
64 silly resolved     homepage: 'http://gruntjs.com/',
64 silly resolved     repository: { type: 'git', url: 'git://github.com/gruntjs/grunt-cli.git' },
64 silly resolved     bugs: { url: 'http://github.com/gruntjs/grunt-cli/issues' },
64 silly resolved     licenses: [ [Object] ],
64 silly resolved     bin: { grunt: 'bin/grunt' },
64 silly resolved     engines: { node: '>= 0.8.0' },
64 silly resolved     scripts: { test: 'node bin/grunt test' },
64 silly resolved     preferGlobal: true,
64 silly resolved     dependencies: { nopt: '~1.0.10', 'findup-sync': '~0.1.0', resolve: '~0.3.1' },
64 silly resolved     devDependencies: { grunt: '~0.4.0', 'grunt-contrib-jshint': '~0.2.0' },
64 silly resolved     contributors: [ [Object], [Object], [Object], [Object] ],
64 silly resolved     readme: '# grunt-cli [![Build Status](https://secure.travis-ci.org/gruntjs/grunt-cli.png?branch=master)](http://travis-ci.org/gruntjs/grunt-cli)\n> The Grunt command line interface.\n\nInstall this globally and you\'ll have access to the `grunt` command anywhere on your system.\n\n```shell\nnpm install -g grunt-cli\n```\n\n**Note:** The job of the `grunt` command is to load and run the version of Grunt you have installed locally to your project, irrespective of its version.  Starting with Grunt v0.4, you should never install Grunt itself globally.  For more information about why, [please read this](http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation).\n\nSee the [Getting Started](http://gruntjs.com/getting-started) guide for more information.\n\n## Shell tab auto-completion\nTo enable tab auto-completion for Grunt, add one of the following lines to your `~/.bashrc` or `~/.zshrc` file.\n\n```bash\n# Bash, ~/.bashrc\neval "$(grunt --completion=bash)"\n```\n\n```bash\n# Zsh, ~/.zshrc\neval "$(grunt --completion=zsh)"\n```\n\n## Installing grunt-cli locally\nIf you prefer the idiomatic Node.js method to get started with a project (`npm install && npm test`) then install grunt-cli locally with `npm install grunt-cli --save-dev`. Then add a script to your `package.json` to run the associated grunt command: `"scripts": { "test": "grunt test" } `. Now `npm test` will use the locally installed `./node_modules/.bin/grunt` executable to run your Grunt commands.\n\nTo read more about npm scripts, please visit the npm docs: [https://npmjs.org/doc/misc/npm-scripts.html](https://npmjs.org/doc/misc/npm-scripts.html).\n',
64 silly resolved     readmeFilename: 'README.md',
64 silly resolved     _id: 'grunt-cli@0.1.13',
64 silly resolved     _from: 'grunt-cli@' } ]
65 info install uglify-js@2.6.1 into /usr/local/lib
66 info install grunt-cli@0.1.13 into /usr/local/lib
67 info installOne uglify-js@2.6.1
68 info installOne grunt-cli@0.1.13
69 verbose from cache /Users/Connor/.npm/uglify-js/2.6.1/package/package.json
70 verbose from cache /Users/Connor/.npm/grunt-cli/0.1.13/package/package.json
71 info /usr/local/lib/node_modules/uglify-js unbuild
72 verbose read json /usr/local/lib/node_modules/uglify-js/package.json
73 info /usr/local/lib/node_modules/grunt-cli unbuild
74 verbose read json /usr/local/lib/node_modules/grunt-cli/package.json
75 verbose tar unpack /Users/Connor/.npm/uglify-js/2.6.1/package.tgz
76 verbose tar unpack /Users/Connor/.npm/grunt-cli/0.1.13/package.tgz
77 silly lockFile d9101ca4-local-lib-node-modules-uglify-js /usr/local/lib/node_modules/uglify-js
78 verbose lock /usr/local/lib/node_modules/uglify-js /Users/Connor/.npm/d9101ca4-local-lib-node-modules-uglify-js.lock
79 silly lockFile 58f484da-local-lib-node-modules-grunt-cli /usr/local/lib/node_modules/grunt-cli
80 verbose lock /usr/local/lib/node_modules/grunt-cli /Users/Connor/.npm/58f484da-local-lib-node-modules-grunt-cli.lock
81 silly gunzTarPerm modes [ '755', '644' ]
82 silly gunzTarPerm modes [ '755', '644' ]
83 silly gunzTarPerm extractEntry package.json
84 silly gunzTarPerm extractEntry README.md
85 silly gunzTarPerm extractEntry LICENSE
86 silly gunzTarPerm extractEntry bin/extract-props.js
87 silly gunzTarPerm extractEntry bin/uglifyjs
88 silly gunzTarPerm extractEntry lib/ast.js
89 silly gunzTarPerm extractEntry package.json
90 silly gunzTarPerm extractEntry lib/compress.js
91 silly gunzTarPerm extractEntry .npmignore
92 silly gunzTarPerm extractEntry README.md
93 silly gunzTarPerm extractEntry Gruntfile.js
94 silly gunzTarPerm extractEntry .travis.yml
95 silly gunzTarPerm extractEntry AUTHORS
96 silly gunzTarPerm extractEntry bin/grunt
97 silly gunzTarPerm extractEntry completion/bash
98 silly gunzTarPerm extractEntry completion/zsh
99 silly gunzTarPerm extractEntry lib/cli.js
100 silly gunzTarPerm extractEntry lib/completion.js
101 silly gunzTarPerm extractEntry lib/info.js
102 silly gunzTarPerm extractEntry LICENSE-MIT
103 verbose read json /usr/local/lib/node_modules/grunt-cli/package.json
104 silly gunzTarPerm extractEntry lib/mozilla-ast.js
105 silly gunzTarPerm extractEntry lib/output.js
106 silly gunzTarPerm extractEntry lib/parse.js
107 silly lockFile 58f484da-local-lib-node-modules-grunt-cli /usr/local/lib/node_modules/grunt-cli
108 silly gunzTarPerm extractEntry lib/propmangle.js
109 info preinstall grunt-cli@0.1.13
110 verbose from cache /usr/local/lib/node_modules/grunt-cli/package.json
111 verbose readDependencies using package.json deps
112 verbose from cache /usr/local/lib/node_modules/grunt-cli/package.json
113 verbose readDependencies using package.json deps
114 silly gunzTarPerm extractEntry lib/scope.js
115 silly gunzTarPerm extractEntry lib/sourcemap.js
116 silly gunzTarPerm extractEntry lib/transform.js
117 verbose cache add [ 'nopt@~1.0.10', null ]
118 verbose cache add name=undefined spec="nopt@~1.0.10" args=["nopt@~1.0.10",null]
119 verbose parsed url { pathname: 'nopt@~1.0.10',
119 verbose parsed url   path: 'nopt@~1.0.10',
119 verbose parsed url   href: 'nopt@~1.0.10' }
120 verbose cache add name="nopt" spec="~1.0.10" args=["nopt","~1.0.10"]
121 verbose parsed url { pathname: '~1.0.10', path: '~1.0.10', href: '~1.0.10' }
122 verbose addNamed [ 'nopt', '~1.0.10' ]
123 verbose addNamed [ null, '>=1.0.10- <1.1.0-' ]
124 silly lockFile 79f78dba-nopt-1-0-10 nopt@~1.0.10
125 verbose lock nopt@~1.0.10 /Users/Connor/.npm/79f78dba-nopt-1-0-10.lock
126 verbose cache add [ 'findup-sync@~0.1.0', null ]
127 verbose cache add name=undefined spec="findup-sync@~0.1.0" args=["findup-sync@~0.1.0",null]
128 verbose parsed url { pathname: 'findup-sync@~0.1.0',
128 verbose parsed url   path: 'findup-sync@~0.1.0',
128 verbose parsed url   href: 'findup-sync@~0.1.0' }
129 verbose cache add name="findup-sync" spec="~0.1.0" args=["findup-sync","~0.1.0"]
130 verbose parsed url { pathname: '~0.1.0', path: '~0.1.0', href: '~0.1.0' }
131 verbose addNamed [ 'findup-sync', '~0.1.0' ]
132 verbose addNamed [ null, '>=0.1.0- <0.2.0-' ]
133 silly lockFile 625605b9-findup-sync-0-1-0 findup-sync@~0.1.0
134 verbose lock findup-sync@~0.1.0 /Users/Connor/.npm/625605b9-findup-sync-0-1-0.lock
135 silly addNameRange { name: 'nopt', range: '>=1.0.10- <1.1.0-', hasData: false }
136 silly addNameRange { name: 'findup-sync',
136 silly addNameRange   range: '>=0.1.0- <0.2.0-',
136 silly addNameRange   hasData: false }
137 verbose url raw nopt
138 verbose url resolving [ 'https://registry.npmjs.org/', './nopt' ]
139 verbose url resolved https://registry.npmjs.org/nopt
140 info trying registry request attempt 1 at 13:37:33
141 http GET https://registry.npmjs.org/nopt
142 verbose url raw findup-sync
143 verbose url resolving [ 'https://registry.npmjs.org/', './findup-sync' ]
144 verbose url resolved https://registry.npmjs.org/findup-sync
145 info trying registry request attempt 1 at 13:37:33
146 http GET https://registry.npmjs.org/findup-sync
147 verbose cache add [ 'resolve@~0.3.1', null ]
148 verbose cache add name=undefined spec="resolve@~0.3.1" args=["resolve@~0.3.1",null]
149 verbose parsed url { pathname: 'resolve@~0.3.1',
149 verbose parsed url   path: 'resolve@~0.3.1',
149 verbose parsed url   href: 'resolve@~0.3.1' }
150 verbose cache add name="resolve" spec="~0.3.1" args=["resolve","~0.3.1"]
151 verbose parsed url { pathname: '~0.3.1', path: '~0.3.1', href: '~0.3.1' }
152 verbose addNamed [ 'resolve', '~0.3.1' ]
153 verbose addNamed [ null, '>=0.3.1- <0.4.0-' ]
154 silly lockFile 7958d065-resolve-0-3-1 resolve@~0.3.1
155 verbose lock resolve@~0.3.1 /Users/Connor/.npm/7958d065-resolve-0-3-1.lock
156 silly gunzTarPerm extractEntry lib/utils.js
157 silly addNameRange { name: 'resolve', range: '>=0.3.1- <0.4.0-', hasData: false }
158 verbose url raw resolve
159 verbose url resolving [ 'https://registry.npmjs.org/', './resolve' ]
160 verbose url resolved https://registry.npmjs.org/resolve
161 info trying registry request attempt 1 at 13:37:33
162 http GET https://registry.npmjs.org/resolve
163 silly gunzTarPerm extractEntry tools/exports.js
164 silly gunzTarPerm extractEntry tools/node.js
165 silly gunzTarPerm extractEntry tools/domprops.json
166 silly gunzTarPerm extractEntry tools/props.html
167 http 200 https://registry.npmjs.org/findup-sync
168 silly registry.get cb [ 200,
168 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
168 silly registry.get     etag: '"4T2YM1183BMIEH25O8P2RBD4U"',
168 silly registry.get     'content-type': 'application/json',
168 silly registry.get     'cache-control': 'max-age=300',
168 silly registry.get     'content-length': '11309',
168 silly registry.get     'accept-ranges': 'bytes',
168 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:33 GMT',
168 silly registry.get     via: '1.1 varnish',
168 silly registry.get     age: '42',
168 silly registry.get     connection: 'keep-alive',
168 silly registry.get     'x-served-by': 'cache-jfk1039-JFK',
168 silly registry.get     'x-cache': 'HIT',
168 silly registry.get     'x-cache-hits': '2',
168 silly registry.get     'x-timer': 'S1453574253.971086,VS0,VE0',
168 silly registry.get     vary: 'Accept' } ]
169 silly addNameRange number 2 { name: 'findup-sync', range: '>=0.1.0- <0.2.0-', hasData: true }
170 silly addNameRange versions [ 'findup-sync',
170 silly addNameRange   [ '0.1.0', '0.1.1', '0.1.2', '0.1.3', '0.2.0', '0.2.1', '0.3.0' ] ]
171 verbose addNamed [ 'findup-sync', '0.1.3' ]
172 verbose addNamed [ '0.1.3', '0.1.3' ]
173 silly lockFile 7d59adfa-findup-sync-0-1-3 findup-sync@0.1.3
174 verbose lock findup-sync@0.1.3 /Users/Connor/.npm/7d59adfa-findup-sync-0-1-3.lock
175 silly lockFile 21bbbbf7-indup-sync-findup-sync-0-1-3-tgz https://registry.npmjs.org/findup-sync/-/findup-sync-0.1.3.tgz
176 verbose lock https://registry.npmjs.org/findup-sync/-/findup-sync-0.1.3.tgz /Users/Connor/.npm/21bbbbf7-indup-sync-findup-sync-0-1-3-tgz.lock
177 verbose addRemoteTarball [ 'https://registry.npmjs.org/findup-sync/-/findup-sync-0.1.3.tgz',
177 verbose addRemoteTarball   '7f3e7a97b82392c653bf06589bd85190e93c3683' ]
178 http 200 https://registry.npmjs.org/nopt
179 silly registry.get cb [ 200,
179 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
179 silly registry.get     etag: '"8L92ZJ97BFUEEOIPU74GGDJ1G"',
179 silly registry.get     'content-type': 'application/json',
179 silly registry.get     'cache-control': 'max-age=300',
179 silly registry.get     'content-length': '31223',
179 silly registry.get     'accept-ranges': 'bytes',
179 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:33 GMT',
179 silly registry.get     via: '1.1 varnish',
179 silly registry.get     age: '62',
179 silly registry.get     connection: 'keep-alive',
179 silly registry.get     'x-served-by': 'cache-jfk1035-JFK',
179 silly registry.get     'x-cache': 'HIT',
179 silly registry.get     'x-cache-hits': '3',
179 silly registry.get     'x-timer': 'S1453574253.966799,VS0,VE0',
179 silly registry.get     vary: 'Accept' } ]
180 http 200 https://registry.npmjs.org/resolve
181 silly registry.get cb [ 200,
181 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
181 silly registry.get     etag: '"BWVXMZUAQCU14H6XAB7M6UTXF"',
181 silly registry.get     'content-type': 'application/json',
181 silly registry.get     'cache-control': 'max-age=300',
181 silly registry.get     'content-length': '43196',
181 silly registry.get     'accept-ranges': 'bytes',
181 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:33 GMT',
181 silly registry.get     via: '1.1 varnish',
181 silly registry.get     age: '5',
181 silly registry.get     connection: 'keep-alive',
181 silly registry.get     'x-served-by': 'cache-jfk1030-JFK',
181 silly registry.get     'x-cache': 'HIT',
181 silly registry.get     'x-cache-hits': '1',
181 silly registry.get     'x-timer': 'S1453574253.971011,VS0,VE0',
181 silly registry.get     vary: 'Accept' } ]
182 info retry fetch attempt 1 at 13:37:34
183 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/tmp.tgz
184 http GET https://registry.npmjs.org/findup-sync/-/findup-sync-0.1.3.tgz
185 silly addNameRange number 2 { name: 'resolve', range: '>=0.3.1- <0.4.0-', hasData: true }
186 silly addNameRange versions [ 'resolve',
186 silly addNameRange   [ '0.0.0',
186 silly addNameRange     '0.0.1',
186 silly addNameRange     '0.0.2',
186 silly addNameRange     '0.0.3',
186 silly addNameRange     '0.0.4',
186 silly addNameRange     '0.1.0',
186 silly addNameRange     '0.1.2',
186 silly addNameRange     '0.1.3',
186 silly addNameRange     '0.2.0',
186 silly addNameRange     '0.2.1',
186 silly addNameRange     '0.2.2',
186 silly addNameRange     '0.2.3',
186 silly addNameRange     '0.2.4',
186 silly addNameRange     '0.2.5',
186 silly addNameRange     '0.2.6',
186 silly addNameRange     '0.2.7',
186 silly addNameRange     '0.2.8',
186 silly addNameRange     '0.3.0',
186 silly addNameRange     '0.3.1',
186 silly addNameRange     '0.4.0',
186 silly addNameRange     '0.4.1',
186 silly addNameRange     '0.4.2',
186 silly addNameRange     '0.4.3',
186 silly addNameRange     '0.5.0',
186 silly addNameRange     '0.5.1',
186 silly addNameRange     '0.6.0',
186 silly addNameRange     '0.6.1',
186 silly addNameRange     '0.6.2',
186 silly addNameRange     '0.6.3',
186 silly addNameRange     '0.7.0',
186 silly addNameRange     '0.7.1',
186 silly addNameRange     '0.7.2',
186 silly addNameRange     '0.7.3',
186 silly addNameRange     '0.7.4',
186 silly addNameRange     '1.0.0',
186 silly addNameRange     '1.1.0',
186 silly addNameRange     '1.1.2',
186 silly addNameRange     '1.1.3',
186 silly addNameRange     '1.1.4',
186 silly addNameRange     '1.1.5',
186 silly addNameRange     '1.1.6' ] ]
187 verbose addNamed [ 'resolve', '0.3.1' ]
188 verbose addNamed [ '0.3.1', '0.3.1' ]
189 silly lockFile 95464470-resolve-0-3-1 resolve@0.3.1
190 verbose lock resolve@0.3.1 /Users/Connor/.npm/95464470-resolve-0-3-1.lock
191 silly addNameRange number 2 { name: 'nopt', range: '>=1.0.10- <1.1.0-', hasData: true }
192 silly addNameRange versions [ 'nopt',
192 silly addNameRange   [ '1.0.0',
192 silly addNameRange     '1.0.1',
192 silly addNameRange     '1.0.2',
192 silly addNameRange     '1.0.3',
192 silly addNameRange     '1.0.4',
192 silly addNameRange     '1.0.5',
192 silly addNameRange     '1.0.6',
192 silly addNameRange     '1.0.7',
192 silly addNameRange     '1.0.8',
192 silly addNameRange     '1.0.9',
192 silly addNameRange     '1.0.10',
192 silly addNameRange     '2.0.0',
192 silly addNameRange     '2.1.0',
192 silly addNameRange     '2.1.1',
192 silly addNameRange     '2.1.2',
192 silly addNameRange     '2.2.0',
192 silly addNameRange     '2.2.1',
192 silly addNameRange     '3.0.0',
192 silly addNameRange     '3.0.1',
192 silly addNameRange     '3.0.2',
192 silly addNameRange     '3.0.3',
192 silly addNameRange     '3.0.4',
192 silly addNameRange     '3.0.5',
192 silly addNameRange     '3.0.6' ] ]
193 verbose addNamed [ 'nopt', '1.0.10' ]
194 verbose addNamed [ '1.0.10', '1.0.10' ]
195 silly lockFile 1be903a1-nopt-1-0-10 nopt@1.0.10
196 verbose lock nopt@1.0.10 /Users/Connor/.npm/1be903a1-nopt-1-0-10.lock
197 silly lockFile e92308c0-js-org-resolve-resolve-0-3-1-tgz https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz
198 verbose lock https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz /Users/Connor/.npm/e92308c0-js-org-resolve-resolve-0-3-1-tgz.lock
199 silly lockFile 4ce84396-y-npmjs-org-nopt-nopt-1-0-10-tgz https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz
200 verbose lock https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz /Users/Connor/.npm/4ce84396-y-npmjs-org-nopt-nopt-1-0-10-tgz.lock
201 verbose addRemoteTarball [ 'https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz',
201 verbose addRemoteTarball   '34c63447c664c70598d1c9b126fc43b2a24310a4' ]
202 verbose addRemoteTarball [ 'https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz',
202 verbose addRemoteTarball   '6ddd21bd2a31417b92727dd585f8a6f37608ebee' ]
203 info retry fetch attempt 1 at 13:37:34
204 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/tmp.tgz
205 info retry fetch attempt 1 at 13:37:34
206 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/tmp.tgz
207 http GET https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz
208 http GET https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz
209 verbose read json /usr/local/lib/node_modules/uglify-js/package.json
210 silly lockFile d9101ca4-local-lib-node-modules-uglify-js /usr/local/lib/node_modules/uglify-js
211 info preinstall uglify-js@2.6.1
212 verbose from cache /usr/local/lib/node_modules/uglify-js/package.json
213 verbose readDependencies using package.json deps
214 verbose from cache /usr/local/lib/node_modules/uglify-js/package.json
215 verbose readDependencies using package.json deps
216 verbose cache add [ 'async@~0.2.6', null ]
217 verbose cache add name=undefined spec="async@~0.2.6" args=["async@~0.2.6",null]
218 verbose parsed url { pathname: 'async@~0.2.6',
218 verbose parsed url   path: 'async@~0.2.6',
218 verbose parsed url   href: 'async@~0.2.6' }
219 verbose cache add name="async" spec="~0.2.6" args=["async","~0.2.6"]
220 verbose parsed url { pathname: '~0.2.6', path: '~0.2.6', href: '~0.2.6' }
221 verbose addNamed [ 'async', '~0.2.6' ]
222 verbose addNamed [ null, '>=0.2.6- <0.3.0-' ]
223 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
224 verbose lock async@~0.2.6 /Users/Connor/.npm/e00b1d77-async-0-2-6.lock
225 verbose cache add [ 'source-map@~0.5.1', null ]
226 verbose cache add name=undefined spec="source-map@~0.5.1" args=["source-map@~0.5.1",null]
227 verbose parsed url { pathname: 'source-map@~0.5.1',
227 verbose parsed url   path: 'source-map@~0.5.1',
227 verbose parsed url   href: 'source-map@~0.5.1' }
228 verbose cache add name="source-map" spec="~0.5.1" args=["source-map","~0.5.1"]
229 verbose parsed url { pathname: '~0.5.1', path: '~0.5.1', href: '~0.5.1' }
230 verbose addNamed [ 'source-map', '~0.5.1' ]
231 verbose addNamed [ null, '>=0.5.1- <0.6.0-' ]
232 silly lockFile 27b644b5-source-map-0-5-1 source-map@~0.5.1
233 verbose lock source-map@~0.5.1 /Users/Connor/.npm/27b644b5-source-map-0-5-1.lock
234 verbose cache add [ 'uglify-to-browserify@~1.0.0', null ]
235 verbose cache add name=undefined spec="uglify-to-browserify@~1.0.0" args=["uglify-to-browserify@~1.0.0",null]
236 verbose parsed url { pathname: 'uglify-to-browserify@~1.0.0',
236 verbose parsed url   path: 'uglify-to-browserify@~1.0.0',
236 verbose parsed url   href: 'uglify-to-browserify@~1.0.0' }
237 verbose cache add name="uglify-to-browserify" spec="~1.0.0" args=["uglify-to-browserify","~1.0.0"]
238 verbose parsed url { pathname: '~1.0.0', path: '~1.0.0', href: '~1.0.0' }
239 verbose addNamed [ 'uglify-to-browserify', '~1.0.0' ]
240 verbose addNamed [ null, '>=1.0.0- <1.1.0-' ]
241 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
242 verbose lock uglify-to-browserify@~1.0.0 /Users/Connor/.npm/8d4498e3-uglify-to-browserify-1-0-0.lock
243 verbose cache add [ 'yargs@~3.10.0', null ]
244 verbose cache add name=undefined spec="yargs@~3.10.0" args=["yargs@~3.10.0",null]
245 verbose parsed url { pathname: 'yargs@~3.10.0',
245 verbose parsed url   path: 'yargs@~3.10.0',
245 verbose parsed url   href: 'yargs@~3.10.0' }
246 verbose cache add name="yargs" spec="~3.10.0" args=["yargs","~3.10.0"]
247 verbose parsed url { pathname: '~3.10.0', path: '~3.10.0', href: '~3.10.0' }
248 verbose addNamed [ 'yargs', '~3.10.0' ]
249 verbose addNamed [ null, '>=3.10.0- <3.11.0-' ]
250 silly lockFile 65827936-yargs-3-10-0 yargs@~3.10.0
251 verbose lock yargs@~3.10.0 /Users/Connor/.npm/65827936-yargs-3-10-0.lock
252 silly addNameRange { name: 'async', range: '>=0.2.6- <0.3.0-', hasData: false }
253 silly addNameRange { name: 'source-map', range: '>=0.5.1- <0.6.0-', hasData: false }
254 silly addNameRange { name: 'uglify-to-browserify',
254 silly addNameRange   range: '>=1.0.0- <1.1.0-',
254 silly addNameRange   hasData: false }
255 silly addNameRange { name: 'yargs', range: '>=3.10.0- <3.11.0-', hasData: false }
256 verbose url raw async
257 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
258 verbose url resolved https://registry.npmjs.org/async
259 info trying registry request attempt 1 at 13:37:34
260 http GET https://registry.npmjs.org/async
261 verbose url raw source-map
262 verbose url resolving [ 'https://registry.npmjs.org/', './source-map' ]
263 verbose url resolved https://registry.npmjs.org/source-map
264 info trying registry request attempt 1 at 13:37:34
265 http GET https://registry.npmjs.org/source-map
266 verbose url raw uglify-to-browserify
267 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-to-browserify' ]
268 verbose url resolved https://registry.npmjs.org/uglify-to-browserify
269 info trying registry request attempt 1 at 13:37:34
270 http GET https://registry.npmjs.org/uglify-to-browserify
271 verbose url raw yargs
272 verbose url resolving [ 'https://registry.npmjs.org/', './yargs' ]
273 verbose url resolved https://registry.npmjs.org/yargs
274 info trying registry request attempt 1 at 13:37:34
275 http GET https://registry.npmjs.org/yargs
276 http 200 https://registry.npmjs.org/findup-sync/-/findup-sync-0.1.3.tgz
277 silly shasum updated bytes 3493
278 info shasum 7f3e7a97b82392c653bf06589bd85190e93c3683
278 info shasum /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/tmp.tgz
279 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/tmp.tgz
280 silly lockFile 3fa0f97c-3993-0-05680601950734854-package /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/package
281 verbose lock /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/package /Users/Connor/.npm/3fa0f97c-3993-0-05680601950734854-package.lock
282 silly gunzTarPerm modes [ '755', '644' ]
283 silly gunzTarPerm extractEntry package.json
284 silly gunzTarPerm extractEntry .npmignore
285 silly gunzTarPerm extractEntry README.md
286 silly gunzTarPerm extractEntry Gruntfile.js
287 silly gunzTarPerm extractEntry .jshintrc
288 silly gunzTarPerm extractEntry .travis.yml
289 silly gunzTarPerm extractEntry LICENSE-MIT
290 silly gunzTarPerm extractEntry lib/findup-sync.js
291 silly gunzTarPerm extractEntry test/findup-sync_test.js
292 http 200 https://registry.npmjs.org/uglify-to-browserify
293 silly registry.get cb [ 200,
293 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
293 silly registry.get     etag: '"BEHQLBD9DR6K29JIICSDUTRUR"',
293 silly registry.get     'content-type': 'application/json',
293 silly registry.get     'cache-control': 'max-age=300',
293 silly registry.get     'content-length': '4775',
293 silly registry.get     'accept-ranges': 'bytes',
293 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:34 GMT',
293 silly registry.get     via: '1.1 varnish',
293 silly registry.get     age: '81',
293 silly registry.get     connection: 'keep-alive',
293 silly registry.get     'x-served-by': 'cache-jfk1037-JFK',
293 silly registry.get     'x-cache': 'HIT',
293 silly registry.get     'x-cache-hits': '3',
293 silly registry.get     'x-timer': 'S1453574254.101597,VS0,VE0',
293 silly registry.get     vary: 'Accept' } ]
294 http 200 https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz
295 http 200 https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz
296 silly gunzTarPerm extractEntry test/fixtures/a/b/bar.txt
297 silly gunzTarPerm extractEntry test/fixtures/a/foo.txt
298 silly shasum updated bytes 10240
299 silly addNameRange number 2 { name: 'uglify-to-browserify',
299 silly addNameRange   range: '>=1.0.0- <1.1.0-',
299 silly addNameRange   hasData: true }
300 silly addNameRange versions [ 'uglify-to-browserify',
300 silly addNameRange   [ '0.0.1', '1.0.0', '1.0.1', '1.0.2' ] ]
301 verbose addNamed [ 'uglify-to-browserify', '1.0.2' ]
302 verbose addNamed [ '1.0.2', '1.0.2' ]
303 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
304 verbose lock uglify-to-browserify@1.0.2 /Users/Connor/.npm/1fc290f9-uglify-to-browserify-1-0-2.lock
305 info shasum 6ddd21bd2a31417b92727dd585f8a6f37608ebee
305 info shasum /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/tmp.tgz
306 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/tmp.tgz
307 silly shasum updated bytes 5777
308 silly lockFile 0a01100c-y-uglify-to-browserify-1-0-2-tgz https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz
309 verbose lock https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz /Users/Connor/.npm/0a01100c-y-uglify-to-browserify-1-0-2-tgz.lock
310 info shasum 34c63447c664c70598d1c9b126fc43b2a24310a4
310 info shasum /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/tmp.tgz
311 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/tmp.tgz
312 verbose addRemoteTarball [ 'https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz',
312 verbose addRemoteTarball   '6e0924d6bda6b5afe349e39a6d632850a0f882b7' ]
313 info retry fetch attempt 1 at 13:37:34
314 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/tmp.tgz
315 silly lockFile 86252273-54078-0-8979655287694186-package /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/package
316 verbose lock /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/package /Users/Connor/.npm/86252273-54078-0-8979655287694186-package.lock
317 silly lockFile 5f371eaa-54078-0-9622196608688682-package /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/package
318 verbose lock /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/package /Users/Connor/.npm/5f371eaa-54078-0-9622196608688682-package.lock
319 silly gunzTarPerm extractEntry test/fixtures/a.txt
320 silly gunzTarPerm extractEntry test/fixtures/aaa.txt
321 silly gunzTarPerm modes [ '755', '644' ]
322 silly gunzTarPerm modes [ '755', '644' ]
323 http GET https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz
324 silly gunzTarPerm extractEntry .gitignore
325 silly gunzTarPerm extractEntry package.json
326 silly gunzTarPerm extractEntry LICENSE
327 silly gunzTarPerm extractEntry package.json
328 silly gunzTarPerm extractEntry LICENSE
329 silly gunzTarPerm extractEntry index.js
330 silly gunzTarPerm extractEntry README.md
331 silly gunzTarPerm extractEntry bin/nopt.js
332 silly gunzTarPerm extractEntry example/async.js
333 silly gunzTarPerm extractEntry example/sync.js
334 silly gunzTarPerm extractEntry examples/my-program.js
335 silly gunzTarPerm extractEntry lib/nopt.js
336 http 200 https://registry.npmjs.org/yargs
337 silly registry.get cb [ 200,
337 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
337 silly registry.get     etag: '"EEF7J0J6LT5T1RE04ZRE2IT2K"',
337 silly registry.get     'content-type': 'application/json',
337 silly registry.get     'cache-control': 'max-age=300',
337 silly registry.get     'content-length': '172668',
337 silly registry.get     'accept-ranges': 'bytes',
337 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:34 GMT',
337 silly registry.get     via: '1.1 varnish',
337 silly registry.get     age: '242',
337 silly registry.get     connection: 'keep-alive',
337 silly registry.get     'x-served-by': 'cache-jfk1037-JFK',
337 silly registry.get     'x-cache': 'HIT',
337 silly registry.get     'x-cache-hits': '6',
337 silly registry.get     'x-timer': 'S1453574254.112608,VS0,VE0',
337 silly registry.get     vary: 'Accept' } ]
338 silly gunzTarPerm extractEntry readme.markdown
339 silly gunzTarPerm extractEntry test/resolver.js
340 silly gunzTarPerm extractEntry test/core.js
341 silly gunzTarPerm extractEntry test/filter_sync.js
342 silly addNameRange number 2 { name: 'yargs', range: '>=3.10.0- <3.11.0-', hasData: true }
343 silly addNameRange versions [ 'yargs',
343 silly addNameRange   [ '1.0.0',
343 silly addNameRange     '1.0.1',
343 silly addNameRange     '1.0.3',
343 silly addNameRange     '1.0.4',
343 silly addNameRange     '1.0.5',
343 silly addNameRange     '1.0.6',
343 silly addNameRange     '1.0.7',
343 silly addNameRange     '1.0.8',
343 silly addNameRange     '1.0.9',
343 silly addNameRange     '1.0.10',
343 silly addNameRange     '1.0.11',
343 silly addNameRange     '1.0.12',
343 silly addNameRange     '1.0.13',
343 silly addNameRange     '1.0.15',
343 silly addNameRange     '1.1.0',
343 silly addNameRange     '1.1.1',
343 silly addNameRange     '1.1.2',
343 silly addNameRange     '1.1.3',
343 silly addNameRange     '1.2.0',
343 silly addNameRange     '1.2.1',
343 silly addNameRange     '1.2.2',
343 silly addNameRange     '1.2.3',
343 silly addNameRange     '1.2.4',
343 silly addNameRange     '1.2.5',
343 silly addNameRange     '1.2.6',
343 silly addNameRange     '1.3.0',
343 silly addNameRange     '1.3.1',
343 silly addNameRange     '1.3.2',
343 silly addNameRange     '1.3.3',
343 silly addNameRange     '2.1.1',
343 silly addNameRange     '2.3.0',
343 silly addNameRange     '3.0.0',
343 silly addNameRange     '3.0.1',
343 silly addNameRange     '3.0.2',
343 silly addNameRange     '3.0.3',
343 silly addNameRange     '3.0.4',
343 silly addNameRange     '3.1.0',
343 silly addNameRange     '3.2.1',
343 silly addNameRange     '3.3.1',
343 silly addNameRange     '3.4.0',
343 silly addNameRange     '3.4.4',
343 silly addNameRange     '3.4.5',
343 silly addNameRange     '3.5.0',
343 silly addNameRange     '3.5.1',
343 silly addNameRange     '3.5.2',
343 silly addNameRange     '3.5.3',
343 silly addNameRange     '3.5.4',
343 silly addNameRange     '3.6.0',
343 silly addNameRange     '3.7.0',
343 silly addNameRange     '3.7.1',
343 silly addNameRange     '3.7.2',
343 silly addNameRange     '3.8.0',
343 silly addNameRange     '3.9.0',
343 silly addNameRange     '3.9.1',
343 silly addNameRange     '3.10.0',
343 silly addNameRange     '3.11.0',
343 silly addNameRange     '3.12.0',
343 silly addNameRange     '3.13.0',
343 silly addNameRange     '3.14.0',
343 silly addNameRange     '3.15.0',
343 silly addNameRange     '3.16.0',
343 silly addNameRange     '3.16.1',
343 silly addNameRange     '3.17.1',
343 silly addNameRange     '3.18.0',
343 silly addNameRange     '3.18.1',
343 silly addNameRange     '3.19.0',
343 silly addNameRange     '3.20.0',
343 silly addNameRange     '3.21.0',
343 silly addNameRange     '3.21.1',
343 silly addNameRange     '3.22.0',
343 silly addNameRange     '3.22.1',
343 silly addNameRange     '3.22.2',
343 silly addNameRange     '3.23.0',
343 silly addNameRange     '3.24.0',
343 silly addNameRange     '3.25.0',
343 silly addNameRange     '3.26.0',
343 silly addNameRange     '3.27.0',
343 silly addNameRange     '3.28.0',
343 silly addNameRange     '3.29.0',
343 silly addNameRange     '3.30.0',
343 silly addNameRange     '3.31.0',
343 silly addNameRange     '3.32.0' ] ]
344 verbose addNamed [ 'yargs', '3.10.0' ]
345 verbose addNamed [ '3.10.0', '3.10.0' ]
346 silly lockFile 94a5d6c6-yargs-3-10-0 yargs@3.10.0
347 verbose lock yargs@3.10.0 /Users/Connor/.npm/94a5d6c6-yargs-3-10-0.lock
348 http 200 https://registry.npmjs.org/async
349 silly registry.get cb [ 200,
349 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
349 silly registry.get     etag: '"CD0X62EKVPR0BNRLJTDJOZ1CT"',
349 silly registry.get     'content-type': 'application/json',
349 silly registry.get     'cache-control': 'max-age=300',
349 silly registry.get     'content-length': '140247',
349 silly registry.get     'accept-ranges': 'bytes',
349 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:34 GMT',
349 silly registry.get     via: '1.1 varnish',
349 silly registry.get     age: '168',
349 silly registry.get     connection: 'keep-alive',
349 silly registry.get     'x-served-by': 'cache-jfk1035-JFK',
349 silly registry.get     'x-cache': 'HIT',
349 silly registry.get     'x-cache-hits': '10',
349 silly registry.get     'x-timer': 'S1453574254.137572,VS0,VE0',
349 silly registry.get     vary: 'Accept' } ]
350 http 200 https://registry.npmjs.org/source-map
351 silly registry.get cb [ 200,
351 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
351 silly registry.get     etag: '"X4KKFAC6YYZSKCIGZLNOI8Y1"',
351 silly registry.get     'content-type': 'application/json',
351 silly registry.get     'cache-control': 'max-age=300',
351 silly registry.get     'content-length': '140810',
351 silly registry.get     'accept-ranges': 'bytes',
351 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:34 GMT',
351 silly registry.get     via: '1.1 varnish',
351 silly registry.get     age: '147',
351 silly registry.get     connection: 'keep-alive',
351 silly registry.get     'x-served-by': 'cache-jfk1025-JFK',
351 silly registry.get     'x-cache': 'HIT',
351 silly registry.get     'x-cache-hits': '5',
351 silly registry.get     'x-timer': 'S1453574254.137817,VS0,VE0',
351 silly registry.get     vary: 'Accept' } ]
352 silly lockFile 9ebd2b7e-npmjs-org-yargs-yargs-3-10-0-tgz https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz
353 verbose lock https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz /Users/Connor/.npm/9ebd2b7e-npmjs-org-yargs-yargs-3-10-0-tgz.lock
354 verbose addRemoteTarball [ 'https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz',
354 verbose addRemoteTarball   'f7ee7bd857dd7c1d2d38c0e74efbd681d1431fd1' ]
355 info retry fetch attempt 1 at 13:37:34
356 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/tmp.tgz
357 http GET https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz
358 silly addNameRange number 2 { name: 'source-map', range: '>=0.5.1- <0.6.0-', hasData: true }
359 silly addNameRange versions [ 'source-map',
359 silly addNameRange   [ '0.0.0',
359 silly addNameRange     '0.1.0',
359 silly addNameRange     '0.1.1',
359 silly addNameRange     '0.1.2',
359 silly addNameRange     '0.1.3',
359 silly addNameRange     '0.1.4',
359 silly addNameRange     '0.1.5',
359 silly addNameRange     '0.1.6',
359 silly addNameRange     '0.1.7',
359 silly addNameRange     '0.1.8',
359 silly addNameRange     '0.1.9',
359 silly addNameRange     '0.1.10',
359 silly addNameRange     '0.1.11',
359 silly addNameRange     '0.1.12',
359 silly addNameRange     '0.1.13',
359 silly addNameRange     '0.1.14',
359 silly addNameRange     '0.1.15',
359 silly addNameRange     '0.1.16',
359 silly addNameRange     '0.1.17',
359 silly addNameRange     '0.1.18',
359 silly addNameRange     '0.1.19',
359 silly addNameRange     '0.1.20',
359 silly addNameRange     '0.1.21',
359 silly addNameRange     '0.1.22',
359 silly addNameRange     '0.1.23',
359 silly addNameRange     '0.1.24',
359 silly addNameRange     '0.1.25',
359 silly addNameRange     '0.1.26',
359 silly addNameRange     '0.1.27',
359 silly addNameRange     '0.1.28',
359 silly addNameRange     '0.1.29',
359 silly addNameRange     '0.1.30',
359 silly addNameRange     '0.1.31',
359 silly addNameRange     '0.1.32',
359 silly addNameRange     '0.1.33',
359 silly addNameRange     '0.1.34',
359 silly addNameRange     '0.1.35',
359 silly addNameRange     '0.1.36',
359 silly addNameRange     '0.1.37',
359 silly addNameRange     '0.1.38',
359 silly addNameRange     '0.1.39',
359 silly addNameRange     '0.1.40',
359 silly addNameRange     '0.1.41',
359 silly addNameRange     '0.1.42',
359 silly addNameRange     '0.1.43',
359 silly addNameRange     '0.2.0',
359 silly addNameRange     '0.3.0',
359 silly addNameRange     '0.4.0',
359 silly addNameRange     '0.4.1',
359 silly addNameRange     '0.4.2',
359 silly addNameRange     '0.4.3',
359 silly addNameRange     '0.4.4',
359 silly addNameRange     '0.5.0',
359 silly addNameRange     '0.5.1',
359 silly addNameRange     '0.5.2',
359 silly addNameRange     '0.5.3' ] ]
360 verbose addNamed [ 'source-map', '0.5.3' ]
361 verbose addNamed [ '0.5.3', '0.5.3' ]
362 silly lockFile 6e5886d8-source-map-0-5-3 source-map@0.5.3
363 verbose lock source-map@0.5.3 /Users/Connor/.npm/6e5886d8-source-map-0-5-3.lock
364 silly addNameRange number 2 { name: 'async', range: '>=0.2.6- <0.3.0-', hasData: true }
365 silly addNameRange versions [ 'async',
365 silly addNameRange   [ '0.1.0',
365 silly addNameRange     '0.1.1',
365 silly addNameRange     '0.1.2',
365 silly addNameRange     '0.1.3',
365 silly addNameRange     '0.1.4',
365 silly addNameRange     '0.1.5',
365 silly addNameRange     '0.1.6',
365 silly addNameRange     '0.1.7',
365 silly addNameRange     '0.1.8',
365 silly addNameRange     '0.1.9',
365 silly addNameRange     '0.1.10',
365 silly addNameRange     '0.1.11',
365 silly addNameRange     '0.1.12',
365 silly addNameRange     '0.1.13',
365 silly addNameRange     '0.1.14',
365 silly addNameRange     '0.1.15',
365 silly addNameRange     '0.1.16',
365 silly addNameRange     '0.1.17',
365 silly addNameRange     '0.1.18',
365 silly addNameRange     '0.1.19',
365 silly addNameRange     '0.1.20',
365 silly addNameRange     '0.1.21',
365 silly addNameRange     '0.1.22',
365 silly addNameRange     '0.2.0',
365 silly addNameRange     '0.2.1',
365 silly addNameRange     '0.2.2',
365 silly addNameRange     '0.2.3',
365 silly addNameRange     '0.2.4',
365 silly addNameRange     '0.2.5',
365 silly addNameRange     '0.2.6',
365 silly addNameRange     '0.2.7',
365 silly addNameRange     '0.2.8',
365 silly addNameRange     '0.2.9',
365 silly addNameRange     '0.2.10',
365 silly addNameRange     '0.3.0',
365 silly addNameRange     '0.4.0',
365 silly addNameRange     '0.4.1',
365 silly addNameRange     '0.5.0',
365 silly addNameRange     '0.6.0',
365 silly addNameRange     '0.6.1',
365 silly addNameRange     '0.6.2',
365 silly addNameRange     '0.7.0',
365 silly addNameRange     '0.8.0',
365 silly addNameRange     '0.9.0',
365 silly addNameRange     '0.9.2',
365 silly addNameRange     '1.0.0',
365 silly addNameRange     '1.1.0',
365 silly addNameRange     '1.2.0',
365 silly addNameRange     '1.1.1',
365 silly addNameRange     '1.2.1',
365 silly addNameRange     '1.3.0',
365 silly addNameRange     '1.4.0',
365 silly addNameRange     '1.4.1',
365 silly addNameRange     '1.4.2',
365 silly addNameRange     '1.5.0',
365 silly addNameRange     '1.5.1',
365 silly addNameRange     '1.5.2' ] ]
366 verbose addNamed [ 'async', '0.2.10' ]
367 verbose addNamed [ '0.2.10', '0.2.10' ]
368 silly lockFile 098b530d-async-0-2-10 async@0.2.10
369 verbose lock async@0.2.10 /Users/Connor/.npm/098b530d-async-0-2-10.lock
370 silly gunzTarPerm extractEntry test/resolver_sync.js
371 silly gunzTarPerm extractEntry test/filter.js
372 silly lockFile e3a881b5--source-map-source-map-0-5-3-tgz https://registry.npmjs.org/source-map/-/source-map-0.5.3.tgz
373 verbose lock https://registry.npmjs.org/source-map/-/source-map-0.5.3.tgz /Users/Connor/.npm/e3a881b5--source-map-source-map-0-5-3-tgz.lock
374 silly lockFile 172bae6c-npmjs-org-async-async-0-2-10-tgz https://registry.npmjs.org/async/-/async-0.2.10.tgz
375 verbose lock https://registry.npmjs.org/async/-/async-0.2.10.tgz /Users/Connor/.npm/172bae6c-npmjs-org-async-async-0-2-10-tgz.lock
376 verbose addRemoteTarball [ 'https://registry.npmjs.org/source-map/-/source-map-0.5.3.tgz',
376 verbose addRemoteTarball   '82674b85a71b0be76c3e7416d15e9f5252eb3be0' ]
377 verbose addRemoteTarball [ 'https://registry.npmjs.org/async/-/async-0.2.10.tgz',
377 verbose addRemoteTarball   'b6bbe0b0674b9d719708ca38de8c237cb526c3d1' ]
378 info retry fetch attempt 1 at 13:37:34
379 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/tmp.tgz
380 info retry fetch attempt 1 at 13:37:34
381 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/tmp.tgz
382 http GET https://registry.npmjs.org/source-map/-/source-map-0.5.3.tgz
383 http GET https://registry.npmjs.org/async/-/async-0.2.10.tgz
384 silly gunzTarPerm extractEntry test/mock.js
385 silly gunzTarPerm extractEntry test/mock_sync.js
386 silly gunzTarPerm extractEntry test/resolver/mug.js
387 silly gunzTarPerm extractEntry test/resolver/foo.js
388 silly gunzTarPerm extractEntry test/resolver/mug.coffee
389 silly gunzTarPerm extractEntry test/resolver/cup.coffee
390 verbose read json /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/package/package.json
391 silly gunzTarPerm extractEntry test/resolver/other_path/root.js
392 silly lockFile 3fa0f97c-3993-0-05680601950734854-package /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/package
393 verbose from cache /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/package/package.json
394 silly gunzTarPerm extractEntry test/resolver/other_path/lib/other-lib.js
395 silly gunzTarPerm extractEntry test/resolver/bar/node_modules/foo/index.js
396 verbose tar pack [ '/Users/Connor/.npm/findup-sync/0.1.3/package.tgz',
396 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/package' ]
397 verbose tarball /Users/Connor/.npm/findup-sync/0.1.3/package.tgz
398 verbose folder /Users/Connor/tmp/npm-20311/1453574253993-0.05680601950734854/package
399 silly lockFile f4e2ead6-pm-findup-sync-0-1-3-package-tgz /Users/Connor/.npm/findup-sync/0.1.3/package.tgz
400 verbose lock /Users/Connor/.npm/findup-sync/0.1.3/package.tgz /Users/Connor/.npm/f4e2ead6-pm-findup-sync-0-1-3-package-tgz.lock
401 silly gunzTarPerm extractEntry test/resolver/baz/package.json
402 silly gunzTarPerm extractEntry test/resolver/baz/quux.js
403 http 200 https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz
404 silly gunzTarPerm extractEntry test/resolver/baz/doom.js
405 silly gunzTarPerm extractEntry test/resolver/biz/node_modules/tiv/index.js
406 silly gunzTarPerm extractEntry test/resolver/biz/node_modules/grux/index.js
407 silly gunzTarPerm extractEntry .travis.yml
408 silly shasum updated bytes 2417
409 info shasum 6e0924d6bda6b5afe349e39a6d632850a0f882b7
409 info shasum /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/tmp.tgz
410 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/tmp.tgz
411 verbose read json /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/package/package.json
412 silly gunzTarPerm extractEntry lib/core.js
413 silly gunzTarPerm extractEntry lib/async.js
414 silly lockFile 86252273-54078-0-8979655287694186-package /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/package
415 silly gunzTarPerm extractEntry lib/sync.js
416 silly gunzTarPerm extractEntry lib/core.json
417 verbose from cache /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/package/package.json
418 silly lockFile 21fc7b1c-54133-0-7443799886386842-package /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/package
419 verbose lock /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/package /Users/Connor/.npm/21fc7b1c-54133-0-7443799886386842-package.lock
420 verbose tar pack [ '/Users/Connor/.npm/nopt/1.0.10/package.tgz',
420 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/package' ]
421 verbose tarball /Users/Connor/.npm/nopt/1.0.10/package.tgz
422 verbose folder /Users/Connor/tmp/npm-20311/1453574254078-0.8979655287694186/package
423 silly lockFile 7104d89e-nnor-npm-nopt-1-0-10-package-tgz /Users/Connor/.npm/nopt/1.0.10/package.tgz
424 verbose lock /Users/Connor/.npm/nopt/1.0.10/package.tgz /Users/Connor/.npm/7104d89e-nnor-npm-nopt-1-0-10-package-tgz.lock
425 silly gunzTarPerm modes [ '755', '644' ]
426 silly gunzTarPerm extractEntry package.json
427 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
428 silly gunzTarPerm extractEntry .npmignore
429 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
430 silly gunzTarPerm extractEntry README.md
431 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
432 silly gunzTarPerm extractEntry LICENSE
433 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
434 silly gunzTarPerm extractEntry index.js
435 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
436 silly gunzTarPerm extractEntry .travis.yml
437 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
438 silly gunzTarPerm extractEntry test/index.js
439 silly gunzTarPerm modified mode [ 'test/index.js', 438, 420 ]
440 silly lockFile f4e2ead6-pm-findup-sync-0-1-3-package-tgz /Users/Connor/.npm/findup-sync/0.1.3/package.tgz
441 silly lockFile 194d7f77-or-npm-findup-sync-0-1-3-package /Users/Connor/.npm/findup-sync/0.1.3/package
442 verbose lock /Users/Connor/.npm/findup-sync/0.1.3/package /Users/Connor/.npm/194d7f77-or-npm-findup-sync-0-1-3-package.lock
443 silly lockFile 194d7f77-or-npm-findup-sync-0-1-3-package /Users/Connor/.npm/findup-sync/0.1.3/package
444 verbose tar unpack /Users/Connor/.npm/findup-sync/0.1.3/package.tgz
445 silly lockFile 194d7f77-or-npm-findup-sync-0-1-3-package /Users/Connor/.npm/findup-sync/0.1.3/package
446 verbose lock /Users/Connor/.npm/findup-sync/0.1.3/package /Users/Connor/.npm/194d7f77-or-npm-findup-sync-0-1-3-package.lock
447 silly gunzTarPerm modes [ '755', '644' ]
448 verbose read json /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/package/package.json
449 silly gunzTarPerm extractEntry package.json
450 silly gunzTarPerm extractEntry .npmignore
451 silly gunzTarPerm extractEntry README.md
452 silly lockFile 21fc7b1c-54133-0-7443799886386842-package /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/package
453 verbose from cache /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/package/package.json
454 http 200 https://registry.npmjs.org/async/-/async-0.2.10.tgz
455 silly gunzTarPerm extractEntry Gruntfile.js
456 silly gunzTarPerm extractEntry .jshintrc
457 verbose tar pack [ '/Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz',
457 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/package' ]
458 verbose tarball /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz
459 verbose folder /Users/Connor/tmp/npm-20311/1453574254133-0.7443799886386842/package
460 silly lockFile e314bc32--to-browserify-1-0-2-package-tgz /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz
461 verbose lock /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz /Users/Connor/.npm/e314bc32--to-browserify-1-0-2-package-tgz.lock
462 silly gunzTarPerm extractEntry .travis.yml
463 silly gunzTarPerm extractEntry lib/findup-sync.js
464 silly lockFile 7104d89e-nnor-npm-nopt-1-0-10-package-tgz /Users/Connor/.npm/nopt/1.0.10/package.tgz
465 silly gunzTarPerm extractEntry LICENSE-MIT
466 silly gunzTarPerm extractEntry test/findup-sync_test.js
467 silly lockFile 45defb61-s-Connor-npm-nopt-1-0-10-package /Users/Connor/.npm/nopt/1.0.10/package
468 verbose lock /Users/Connor/.npm/nopt/1.0.10/package /Users/Connor/.npm/45defb61-s-Connor-npm-nopt-1-0-10-package.lock
469 silly lockFile 45defb61-s-Connor-npm-nopt-1-0-10-package /Users/Connor/.npm/nopt/1.0.10/package
470 verbose tar unpack /Users/Connor/.npm/nopt/1.0.10/package.tgz
471 silly gunzTarPerm extractEntry test/fixtures/a/b/bar.txt
472 silly gunzTarPerm extractEntry test/fixtures/a/foo.txt
473 silly gunzTarPerm extractEntry test/fixtures/a.txt
474 silly gunzTarPerm extractEntry test/fixtures/aaa.txt
475 silly lockFile 45defb61-s-Connor-npm-nopt-1-0-10-package /Users/Connor/.npm/nopt/1.0.10/package
476 verbose lock /Users/Connor/.npm/nopt/1.0.10/package /Users/Connor/.npm/45defb61-s-Connor-npm-nopt-1-0-10-package.lock
477 http 200 https://registry.npmjs.org/source-map/-/source-map-0.5.3.tgz
478 http 200 https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz
479 silly lockFile e314bc32--to-browserify-1-0-2-package-tgz /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz
480 silly gunzTarPerm modes [ '755', '644' ]
481 silly shasum updated bytes 12288
482 silly shasum updated bytes 3484
483 info shasum b6bbe0b0674b9d719708ca38de8c237cb526c3d1
483 info shasum /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/tmp.tgz
484 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/tmp.tgz
485 silly lockFile 7bda777d-lify-to-browserify-1-0-2-package /Users/Connor/.npm/uglify-to-browserify/1.0.2/package
486 verbose lock /Users/Connor/.npm/uglify-to-browserify/1.0.2/package /Users/Connor/.npm/7bda777d-lify-to-browserify-1-0-2-package.lock
487 silly gunzTarPerm extractEntry package.json
488 silly lockFile 7bda777d-lify-to-browserify-1-0-2-package /Users/Connor/.npm/uglify-to-browserify/1.0.2/package
489 verbose tar unpack /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz
490 silly gunzTarPerm extractEntry .npmignore
491 silly gunzTarPerm extractEntry README.md
492 silly gunzTarPerm extractEntry LICENSE
493 silly gunzTarPerm extractEntry bin/nopt.js
494 silly gunzTarPerm extractEntry examples/my-program.js
495 silly gunzTarPerm extractEntry lib/nopt.js
496 verbose read json /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/package/package.json
497 silly lockFile 5f371eaa-54078-0-9622196608688682-package /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/package
498 verbose from cache /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/package/package.json
499 silly lockFile dac148e7-4263-0-06386654544621706-package /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/package
500 verbose lock /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/package /Users/Connor/.npm/dac148e7-4263-0-06386654544621706-package.lock
501 silly lockFile 7bda777d-lify-to-browserify-1-0-2-package /Users/Connor/.npm/uglify-to-browserify/1.0.2/package
502 verbose lock /Users/Connor/.npm/uglify-to-browserify/1.0.2/package /Users/Connor/.npm/7bda777d-lify-to-browserify-1-0-2-package.lock
503 verbose tar pack [ '/Users/Connor/.npm/resolve/0.3.1/package.tgz',
503 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/package' ]
504 verbose tarball /Users/Connor/.npm/resolve/0.3.1/package.tgz
505 verbose folder /Users/Connor/tmp/npm-20311/1453574254078-0.9622196608688682/package
506 silly lockFile a59bd2ca-or-npm-resolve-0-3-1-package-tgz /Users/Connor/.npm/resolve/0.3.1/package.tgz
507 verbose lock /Users/Connor/.npm/resolve/0.3.1/package.tgz /Users/Connor/.npm/a59bd2ca-or-npm-resolve-0-3-1-package-tgz.lock
508 silly gunzTarPerm modes [ '755', '644' ]
509 silly gunzTarPerm modes [ '755', '644' ]
510 silly shasum updated bytes 33186
511 info shasum f7ee7bd857dd7c1d2d38c0e74efbd681d1431fd1
511 info shasum /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/tmp.tgz
512 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/tmp.tgz
513 verbose read json /Users/Connor/.npm/findup-sync/0.1.3/package/package.json
514 silly gunzTarPerm extractEntry package.json
515 silly gunzTarPerm extractEntry package.json
516 silly gunzTarPerm extractEntry README.md
517 silly gunzTarPerm extractEntry LICENSE
518 silly gunzTarPerm extractEntry .npmignore
519 silly gunzTarPerm extractEntry README.md
520 silly lockFile 194d7f77-or-npm-findup-sync-0-1-3-package /Users/Connor/.npm/findup-sync/0.1.3/package
521 silly gunzTarPerm extractEntry LICENSE
522 silly gunzTarPerm extractEntry index.js
523 silly gunzTarPerm extractEntry component.json
524 silly gunzTarPerm extractEntry lib/async.js
525 silly shasum updated bytes 3493
526 info shasum 702cdafb81400b2a9d8435b0d944911a1c636cb0
526 info shasum /Users/Connor/.npm/findup-sync/0.1.3/package.tgz
527 verbose from cache /Users/Connor/.npm/findup-sync/0.1.3/package/package.json
528 silly gunzTarPerm extractEntry .travis.yml
529 silly gunzTarPerm extractEntry test/index.js
530 silly lockFile ea0ada1a-54233-0-2658843323588371-package /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/package
531 verbose lock /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/package /Users/Connor/.npm/ea0ada1a-54233-0-2658843323588371-package.lock
532 verbose chmod /Users/Connor/.npm/findup-sync/0.1.3/package.tgz 644
533 verbose chown /Users/Connor/.npm/findup-sync/0.1.3/package.tgz [ 501, 20 ]
534 silly lockFile 21bbbbf7-indup-sync-findup-sync-0-1-3-tgz https://registry.npmjs.org/findup-sync/-/findup-sync-0.1.3.tgz
535 silly gunzTarPerm modes [ '755', '644' ]
536 silly lockFile 7d59adfa-findup-sync-0-1-3 findup-sync@0.1.3
537 silly lockFile 625605b9-findup-sync-0-1-0 findup-sync@~0.1.0
538 silly gunzTarPerm extractEntry package.json
539 verbose read json /Users/Connor/.npm/nopt/1.0.10/package/package.json
540 silly gunzTarPerm extractEntry README.md
541 silly gunzTarPerm extractEntry LICENSE
542 verbose read json /Users/Connor/.npm/uglify-to-browserify/1.0.2/package/package.json
543 silly lockFile 45defb61-s-Connor-npm-nopt-1-0-10-package /Users/Connor/.npm/nopt/1.0.10/package
544 silly shasum updated bytes 9023
545 info shasum 82a43cbb79f29795a93f031ffa093819515ed248
545 info shasum /Users/Connor/.npm/nopt/1.0.10/package.tgz
546 verbose from cache /Users/Connor/.npm/nopt/1.0.10/package/package.json
547 silly gunzTarPerm extractEntry index.js
548 silly gunzTarPerm extractEntry completion.sh.hbs
549 silly gunzTarPerm extractEntry CHANGELOG.md
550 silly lockFile 7bda777d-lify-to-browserify-1-0-2-package /Users/Connor/.npm/uglify-to-browserify/1.0.2/package
551 silly gunzTarPerm extractEntry lib/completion.js
552 silly shasum updated bytes 2418
553 info shasum bf264296a0f0933b15387efe9aca92fa856abb02
553 info shasum /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz
554 verbose from cache /Users/Connor/.npm/uglify-to-browserify/1.0.2/package/package.json
555 silly gunzTarPerm extractEntry lib/parser.js
556 silly gunzTarPerm extractEntry lib/usage.js
557 silly gunzTarPerm extractEntry lib/validation.js
558 verbose chmod /Users/Connor/.npm/nopt/1.0.10/package.tgz 644
559 verbose chown /Users/Connor/.npm/nopt/1.0.10/package.tgz [ 501, 20 ]
560 verbose chmod /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz 644
561 verbose chown /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz [ 501, 20 ]
562 silly lockFile 4ce84396-y-npmjs-org-nopt-nopt-1-0-10-tgz https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz
563 silly lockFile 0a01100c-y-uglify-to-browserify-1-0-2-tgz https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz
564 silly lockFile 1be903a1-nopt-1-0-10 nopt@1.0.10
565 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
566 silly lockFile 79f78dba-nopt-1-0-10 nopt@~1.0.10
567 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
568 silly shasum updated bytes 12288
569 silly shasum updated bytes 40960
570 silly shasum updated bytes 40960
571 silly shasum updated bytes 40960
572 silly shasum updated bytes 40960
573 silly shasum updated bytes 6853
574 info shasum 82674b85a71b0be76c3e7416d15e9f5252eb3be0
574 info shasum /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/tmp.tgz
575 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/tmp.tgz
576 verbose read json /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/package/package.json
577 silly lockFile 85bec717-54263-0-4873335878364742-package /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/package
578 verbose lock /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/package /Users/Connor/.npm/85bec717-54263-0-4873335878364742-package.lock
579 silly gunzTarPerm modes [ '755', '644' ]
580 silly lockFile dac148e7-4263-0-06386654544621706-package /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/package
581 verbose from cache /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/package/package.json
582 silly gunzTarPerm extractEntry package.json
583 silly gunzTarPerm extractEntry README.md
584 silly gunzTarPerm extractEntry source-map.js
585 silly gunzTarPerm extractEntry dist/source-map.debug.js
586 verbose tar pack [ '/Users/Connor/.npm/async/0.2.10/package.tgz',
586 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/package' ]
587 verbose tarball /Users/Connor/.npm/async/0.2.10/package.tgz
588 verbose folder /Users/Connor/tmp/npm-20311/1453574254263-0.06386654544621706/package
589 silly lockFile 40afc227-nor-npm-async-0-2-10-package-tgz /Users/Connor/.npm/async/0.2.10/package.tgz
590 verbose lock /Users/Connor/.npm/async/0.2.10/package.tgz /Users/Connor/.npm/40afc227-nor-npm-async-0-2-10-package-tgz.lock
591 silly lockFile a59bd2ca-or-npm-resolve-0-3-1-package-tgz /Users/Connor/.npm/resolve/0.3.1/package.tgz
592 silly gunzTarPerm extractEntry dist/source-map.js
593 silly lockFile cfa9a477-Connor-npm-resolve-0-3-1-package /Users/Connor/.npm/resolve/0.3.1/package
594 verbose lock /Users/Connor/.npm/resolve/0.3.1/package /Users/Connor/.npm/cfa9a477-Connor-npm-resolve-0-3-1-package.lock
595 silly lockFile cfa9a477-Connor-npm-resolve-0-3-1-package /Users/Connor/.npm/resolve/0.3.1/package
596 verbose tar unpack /Users/Connor/.npm/resolve/0.3.1/package.tgz
597 silly lockFile cfa9a477-Connor-npm-resolve-0-3-1-package /Users/Connor/.npm/resolve/0.3.1/package
598 verbose lock /Users/Connor/.npm/resolve/0.3.1/package /Users/Connor/.npm/cfa9a477-Connor-npm-resolve-0-3-1-package.lock
599 silly gunzTarPerm modes [ '755', '644' ]
600 silly gunzTarPerm extractEntry dist/source-map.min.js
601 silly gunzTarPerm extractEntry package.json
602 silly gunzTarPerm extractEntry LICENSE
603 silly gunzTarPerm extractEntry index.js
604 silly gunzTarPerm extractEntry dist/source-map.min.js.map
605 silly gunzTarPerm extractEntry .travis.yml
606 silly gunzTarPerm extractEntry example/async.js
607 silly gunzTarPerm extractEntry example/sync.js
608 silly gunzTarPerm extractEntry lib/async.js
609 silly gunzTarPerm extractEntry lib/array-set.js
610 silly gunzTarPerm extractEntry lib/base64-vlq.js
611 silly gunzTarPerm extractEntry lib/core.js
612 silly gunzTarPerm extractEntry lib/sync.js
613 silly gunzTarPerm extractEntry lib/base64.js
614 silly gunzTarPerm extractEntry lib/binary-search.js
615 silly gunzTarPerm extractEntry lib/mapping-list.js
616 silly gunzTarPerm extractEntry lib/core.json
617 silly gunzTarPerm extractEntry readme.markdown
618 silly gunzTarPerm extractEntry lib/quick-sort.js
619 silly gunzTarPerm extractEntry lib/source-map-consumer.js
620 silly gunzTarPerm extractEntry test/core.js
621 silly gunzTarPerm extractEntry test/filter.js
622 silly gunzTarPerm extractEntry lib/source-map-generator.js
623 silly gunzTarPerm extractEntry test/filter_sync.js
624 silly gunzTarPerm extractEntry test/mock.js
625 silly gunzTarPerm extractEntry test/mock_sync.js
626 silly gunzTarPerm extractEntry lib/source-node.js
627 silly gunzTarPerm extractEntry lib/util.js
628 silly gunzTarPerm extractEntry test/resolver.js
629 verbose read json /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/package/package.json
630 silly gunzTarPerm extractEntry test/resolver_sync.js
631 silly gunzTarPerm extractEntry test/resolver/foo.js
632 silly lockFile ea0ada1a-54233-0-2658843323588371-package /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/package
633 verbose from cache /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/package/package.json
634 silly gunzTarPerm extractEntry test/resolver/mug.js
635 silly gunzTarPerm extractEntry test/resolver/bar/node_modules/foo/index.js
636 silly gunzTarPerm extractEntry test/resolver/baz/package.json
637 verbose tar pack [ '/Users/Connor/.npm/yargs/3.10.0/package.tgz',
637 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/package' ]
638 verbose tarball /Users/Connor/.npm/yargs/3.10.0/package.tgz
639 verbose folder /Users/Connor/tmp/npm-20311/1453574254233-0.2658843323588371/package
640 silly lockFile aa98d462-nor-npm-yargs-3-10-0-package-tgz /Users/Connor/.npm/yargs/3.10.0/package.tgz
641 verbose lock /Users/Connor/.npm/yargs/3.10.0/package.tgz /Users/Connor/.npm/aa98d462-nor-npm-yargs-3-10-0-package-tgz.lock
642 silly gunzTarPerm extractEntry test/resolver/baz/doom.js
643 silly gunzTarPerm extractEntry test/resolver/baz/quux.js
644 silly gunzTarPerm extractEntry test/resolver/biz/node_modules/grux/index.js
645 silly gunzTarPerm extractEntry test/resolver/biz/node_modules/tiv/index.js
646 silly gunzTarPerm extractEntry test/resolver/cup.coffee
647 silly gunzTarPerm extractEntry test/resolver/mug.coffee
648 silly gunzTarPerm extractEntry test/resolver/other_path/root.js
649 silly gunzTarPerm extractEntry test/resolver/other_path/lib/other-lib.js
650 silly lockFile 40afc227-nor-npm-async-0-2-10-package-tgz /Users/Connor/.npm/async/0.2.10/package.tgz
651 silly lockFile 857e90fc--Connor-npm-async-0-2-10-package /Users/Connor/.npm/async/0.2.10/package
652 verbose lock /Users/Connor/.npm/async/0.2.10/package /Users/Connor/.npm/857e90fc--Connor-npm-async-0-2-10-package.lock
653 silly lockFile 857e90fc--Connor-npm-async-0-2-10-package /Users/Connor/.npm/async/0.2.10/package
654 verbose tar unpack /Users/Connor/.npm/async/0.2.10/package.tgz
655 silly lockFile 857e90fc--Connor-npm-async-0-2-10-package /Users/Connor/.npm/async/0.2.10/package
656 verbose lock /Users/Connor/.npm/async/0.2.10/package /Users/Connor/.npm/857e90fc--Connor-npm-async-0-2-10-package.lock
657 silly gunzTarPerm modes [ '755', '644' ]
658 silly gunzTarPerm extractEntry package.json
659 silly gunzTarPerm extractEntry README.md
660 silly gunzTarPerm extractEntry LICENSE
661 silly gunzTarPerm extractEntry component.json
662 silly gunzTarPerm extractEntry lib/async.js
663 silly lockFile aa98d462-nor-npm-yargs-3-10-0-package-tgz /Users/Connor/.npm/yargs/3.10.0/package.tgz
664 silly lockFile 4813de81--Connor-npm-yargs-3-10-0-package /Users/Connor/.npm/yargs/3.10.0/package
665 verbose lock /Users/Connor/.npm/yargs/3.10.0/package /Users/Connor/.npm/4813de81--Connor-npm-yargs-3-10-0-package.lock
666 silly lockFile 4813de81--Connor-npm-yargs-3-10-0-package /Users/Connor/.npm/yargs/3.10.0/package
667 verbose tar unpack /Users/Connor/.npm/yargs/3.10.0/package.tgz
668 silly lockFile 4813de81--Connor-npm-yargs-3-10-0-package /Users/Connor/.npm/yargs/3.10.0/package
669 verbose lock /Users/Connor/.npm/yargs/3.10.0/package /Users/Connor/.npm/4813de81--Connor-npm-yargs-3-10-0-package.lock
670 silly gunzTarPerm modes [ '755', '644' ]
671 verbose read json /Users/Connor/.npm/resolve/0.3.1/package/package.json
672 silly lockFile cfa9a477-Connor-npm-resolve-0-3-1-package /Users/Connor/.npm/resolve/0.3.1/package
673 silly shasum updated bytes 5750
674 info shasum eb19bb0986cc5d36fb6cfb51e286fd4f9fb40597
674 info shasum /Users/Connor/.npm/resolve/0.3.1/package.tgz
675 verbose from cache /Users/Connor/.npm/resolve/0.3.1/package/package.json
676 verbose chmod /Users/Connor/.npm/resolve/0.3.1/package.tgz 644
677 verbose chown /Users/Connor/.npm/resolve/0.3.1/package.tgz [ 501, 20 ]
678 silly lockFile e92308c0-js-org-resolve-resolve-0-3-1-tgz https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz
679 silly lockFile 95464470-resolve-0-3-1 resolve@0.3.1
680 silly lockFile 7958d065-resolve-0-3-1 resolve@~0.3.1
681 silly resolved [ { name: 'findup-sync',
681 silly resolved     description: 'Find the first file matching a given pattern in the current directory or the nearest ancestor directory.',
681 silly resolved     version: '0.1.3',
681 silly resolved     homepage: 'https://github.com/cowboy/node-findup-sync',
681 silly resolved     author: { name: '"Cowboy" Ben Alman', url: 'http://benalman.com/' },
681 silly resolved     repository:
681 silly resolved      { type: 'git',
681 silly resolved        url: 'git://github.com/cowboy/node-findup-sync.git' },
681 silly resolved     bugs: { url: 'https://github.com/cowboy/node-findup-sync/issues' },
681 silly resolved     licenses: [ [Object] ],
681 silly resolved     main: 'lib/findup-sync',
681 silly resolved     engines: { node: '>= 0.6.0' },
681 silly resolved     scripts: { test: 'grunt nodeunit' },
681 silly resolved     dependencies: { glob: '~3.2.9', lodash: '~2.4.1' },
681 silly resolved     devDependencies:
681 silly resolved      { grunt: '~0.4.4',
681 silly resolved        'grunt-contrib-jshint': '~0.9.2',
681 silly resolved        'grunt-contrib-nodeunit': '~0.3.3' },
681 silly resolved     keywords: [ 'find', 'glob', 'file' ],
681 silly resolved     readme: '# findup-sync [![Build Status](https://secure.travis-ci.org/cowboy/node-findup-sync.png?branch=master)](http://travis-ci.org/cowboy/node-findup-sync)\n\nFind the first file matching a given pattern in the current directory or the nearest ancestor directory.\n\n## Getting Started\nInstall the module with: `npm install findup-sync`\n\n```js\nvar findup = require(\'findup-sync\');\n\n// Start looking in the CWD.\nvar filepath1 = findup(\'{a,b}*.txt\');\n\n// Start looking somewhere else, and ignore case (probably a good idea).\nvar filepath2 = findup(\'{a,b}*.txt\', {cwd: \'/some/path\', nocase: true});\n```\n\n## Usage\n\n```js\nfindup(patternOrPatterns [, minimatchOptions])\n```\n\n### patternOrPatterns\nType: `String` or `Array`  \nDefault: none\n\nOne or more wildcard glob patterns. Or just filenames.\n\n### minimatchOptions\nType: `Object`  \nDefault: `{}`\n\nOptions to be passed to [minimatch](https://github.com/isaacs/minimatch).\n\nNote that if you want to start in a different directory than the current working directory, specify a `cwd` property here.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n2014-03-14 - v0.1.3 - Updated dependencies.  \n2013-03-08 - v0.1.2 - Updated dependencies. Fixed a Node 0.9.x bug. Updated unit tests to work cross-platform.  \n2012-11-15 - v0.1.1 - Now works without an options object.  \n2012-11-01 - v0.1.0 - Initial release.\n',
681 silly resolved     readmeFilename: 'README.md',
681 silly resolved     _id: 'findup-sync@0.1.3',
681 silly resolved     dist: { shasum: '702cdafb81400b2a9d8435b0d944911a1c636cb0' },
681 silly resolved     _from: 'findup-sync@~0.1.0',
681 silly resolved     _resolved: 'https://registry.npmjs.org/findup-sync/-/findup-sync-0.1.3.tgz' },
681 silly resolved   { name: 'nopt',
681 silly resolved     version: '1.0.10',
681 silly resolved     description: 'Option parsing for Node, supporting types, shorthands, etc. Used by npm.',
681 silly resolved     author:
681 silly resolved      { name: 'Isaac Z. Schlueter',
681 silly resolved        email: 'i@izs.me',
681 silly resolved        url: 'http://blog.izs.me/' },
681 silly resolved     main: 'lib/nopt.js',
681 silly resolved     scripts: { test: 'node lib/nopt.js' },
681 silly resolved     repository: { type: 'git', url: 'http://github.com/isaacs/nopt' },
681 silly resolved     bin: { nopt: './bin/nopt.js' },
681 silly resolved     license:
681 silly resolved      { type: 'MIT',
681 silly resolved        url: 'https://github.com/isaacs/nopt/raw/master/LICENSE' },
681 silly resolved     dependencies: { abbrev: '1' },
681 silly resolved     readme: 'If you want to write an option parser, and have it be good, there are\ntwo ways to do it.  The Right Way, and the Wrong Way.\n\nThe Wrong Way is to sit down and write an option parser.  We\'ve all done\nthat.\n\nThe Right Way is to write some complex configurable program with so many\noptions that you go half-insane just trying to manage them all, and put\nit off with duct-tape solutions until you see exactly to the core of the\nproblem, and finally snap and write an awesome option parser.\n\nIf you want to write an option parser, don\'t write an option parser.\nWrite a package manager, or a source control system, or a service\nrestarter, or an operating system.  You probably won\'t end up with a\ngood one of those, but if you don\'t give up, and you are relentless and\ndiligent enough in your procrastination, you may just end up with a very\nnice option parser.\n\n## USAGE\n\n    // my-program.js\n    var nopt = require("nopt")\n      , Stream = require("stream").Stream\n      , path = require("path")\n      , knownOpts = { "foo" : [String, null]\n                    , "bar" : [Stream, Number]\n                    , "baz" : path\n                    , "bloo" : [ "big", "medium", "small" ]\n                    , "flag" : Boolean\n                    , "pick" : Boolean\n                    , "many" : [String, Array]\n                    }\n      , shortHands = { "foofoo" : ["--foo", "Mr. Foo"]\n                     , "b7" : ["--bar", "7"]\n                     , "m" : ["--bloo", "medium"]\n                     , "p" : ["--pick"]\n                     , "f" : ["--flag"]\n                     }\n                 // everything is optional.\n                 // knownOpts and shorthands default to {}\n                 // arg list defaults to process.argv\n                 // slice defaults to 2\n      , parsed = nopt(knownOpts, shortHands, process.argv, 2)\n    console.log(parsed)\n\nThis would give you support for any of the following:\n\n```bash\n$ node my-program.js --foo "blerp" --no-flag\n{ "foo" : "blerp", "flag" : false }\n\n$ node my-program.js ---bar 7 --foo "Mr. Hand" --flag\n{ bar: 7, foo: "Mr. Hand", flag: true }\n\n$ node my-program.js --foo "blerp" -f -----p\n{ foo: "blerp", flag: true, pick: true }\n\n$ node my-program.js -fp --foofoo\n{ foo: "Mr. Foo", flag: true, pick: true }\n\n$ node my-program.js --foofoo -- -fp  # -- stops the flag parsing.\n{ foo: "Mr. Foo", argv: { remain: ["-fp"] } }\n\n$ node my-program.js --blatzk 1000 -fp # unknown opts are ok.\n{ blatzk: 1000, flag: true, pick: true }\n\n$ node my-program.js --blatzk true -fp # but they need a value\n{ blatzk: true, flag: true, pick: true }\n\n$ node my-program.js --no-blatzk -fp # unless they start with "no-"\n{ blatzk: false, flag: true, pick: true }\n\n$ node my-program.js --baz b/a/z # known paths are resolved.\n{ baz: "/Users/isaacs/b/a/z" }\n\n# if Array is one of the types, then it can take many\n# values, and will always be an array.  The other types provided\n# specify what types are allowed in the list.\n\n$ node my-program.js --many 1 --many null --many foo\n{ many: ["1", "null", "foo"] }\n\n$ node my-program.js --many foo\n{ many: ["foo"] }\n```\n\nRead the tests at the bottom of `lib/nopt.js` for more examples of\nwhat this puppy can do.\n\n## Types\n\nThe following types are supported, and defined on `nopt.typeDefs`\n\n* String: A normal string.  No parsing is done.\n* path: A file system path.  Gets resolved against cwd if not absolute.\n* url: A url.  If it doesn\'t parse, it isn\'t accepted.\n* Number: Must be numeric.\n* Date: Must parse as a date. If it does, and `Date` is one of the options,\n  then it will return a Date object, not a string.\n* Boolean: Must be either `true` or `false`.  If an option is a boolean,\n  then it does not need a value, and its presence will imply `true` as\n  the value.  To negate boolean flags, do `--no-whatever` or `--whatever\n  false`\n* NaN: Means that the option is strictly not allowed.  Any value will\n  fail.\n* Stream: An object matching the "Stream" class in node.  Valuable\n  for use when validating programmatically.  (npm uses this to let you\n  supply any WriteStream on the `outfd` and `logfd` config options.)\n* Array: If `Array` is specified as one of the types, then the value\n  will be parsed as a list of options.  This means that multiple values\n  can be specified, and that the value will always be an array.\n\nIf a type is an array of values not on this list, then those are\nconsidered valid values.  For instance, in the example above, the\n`--bloo` option can only be one of `"big"`, `"medium"`, or `"small"`,\nand any other value will be rejected.\n\nWhen parsing unknown fields, `"true"`, `"false"`, and `"null"` will be\ninterpreted as their JavaScript equivalents, and numeric values will be\ninterpreted as a number.\n\nYou can also mix types and values, or multiple types, in a list.  For\ninstance `{ blah: [Number, null] }` would allow a value to be set to\neither a Number or null.\n\nTo define a new type, add it to `nopt.typeDefs`.  Each item in that\nhash is an object with a `type` member and a `validate` method.  The\n`type` member is an object that matches what goes in the type list.  The\n`validate` method is a function that gets called with `validate(data,\nkey, val)`.  Validate methods should assign `data[key]` to the valid\nvalue of `val` if it can be handled properly, or return boolean\n`false` if it cannot.\n\nYou can also call `nopt.clean(data, types, typeDefs)` to clean up a\nconfig object and remove its invalid properties.\n\n## Error Handling\n\nBy default, nopt outputs a warning to standard error when invalid\noptions are found.  You can change this behavior by assigning a method\nto `nopt.invalidHandler`.  This method will be called with\nthe offending `nopt.invalidHandler(key, val, types)`.\n\nIf no `nopt.invalidHandler` is assigned, then it will console.error\nits whining.  If it is assigned to boolean `false` then the warning is\nsuppressed.\n\n## Abbreviations\n\nYes, they are supported.  If you define options like this:\n\n```javascript\n{ "foolhardyelephants" : Boolean\n, "pileofmonkeys" : Boolean }\n```\n\nThen this will work:\n\n```bash\nnode program.js --foolhar --pil\nnode program.js --no-f --pileofmon\n# etc.\n```\n\n## Shorthands\n\nShorthands are a hash of shorter option names to a snippet of args that\nthey expand to.\n\nIf multiple one-character shorthands are all combined, and the\ncombination does not unambiguously match any other option or shorthand,\nthen they will be broken up into their constituent parts.  For example:\n\n```json\n{ "s" : ["--loglevel", "silent"]\n, "g" : "--global"\n, "f" : "--force"\n, "p" : "--parseable"\n, "l" : "--long"\n}\n```\n\n```bash\nnpm ls -sgflp\n# just like doing this:\nnpm ls --loglevel silent --global --force --long --parseable\n```\n\n## The Rest of the args\n\nThe config object returned by nopt is given a special member called\n`argv`, which is an object with the following fields:\n\n* `remain`: The remaining args after all the parsing has occurred.\n* `original`: The args as they originally appeared.\n* `cooked`: The args after flags and shorthands are expanded.\n\n## Slicing\n\nNode programs are called with more or less the exact argv as it appears\nin C land, after the v8 and node-specific options have been plucked off.\nAs such, `argv[0]` is always `node` and `argv[1]` is always the\nJavaScript program being run.\n\nThat\'s usually not very useful to you.  So they\'re sliced off by\ndefault.  If you want them, then you can pass in `0` as the last\nargument, or any other number that you\'d like to slice off the start of\nthe list.\n',
681 silly resolved     readmeFilename: 'README.md',
681 silly resolved     _id: 'nopt@1.0.10',
681 silly resolved     dist: { shasum: '82a43cbb79f29795a93f031ffa093819515ed248' },
681 silly resolved     _from: 'nopt@~1.0.10',
681 silly resolved     _resolved: 'https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz' },
681 silly resolved   { name: 'resolve',
681 silly resolved     description: 'resolve like require.resolve() on behalf of files asynchronously and synchronously',
681 silly resolved     version: '0.3.1',
681 silly resolved     repository:
681 silly resolved      { type: 'git',
681 silly resolved        url: 'git://github.com/substack/node-resolve.git' },
681 silly resolved     main: 'index.js',
681 silly resolved     keywords: [ 'resolve', 'require', 'node', 'module' ],
681 silly resolved     scripts: { test: 'tap test/*.js' },
681 silly resolved     devDependencies: { tap: '~0.4.0' },
681 silly resolved     license: 'MIT',
681 silly resolved     author:
681 silly resolved      { name: 'James Halliday',
681 silly resolved        email: 'mail@substack.net',
681 silly resolved        url: 'http://substack.net' },
681 silly resolved     readme: '# resolve\n\nimplements the [node `require.resolve()`\nalgorithm](http://nodejs.org/docs/v0.4.8/api/all.html#all_Together...)\nsuch that you can `require.resolve()` on behalf of a file asynchronously and\nsynchronously\n\n[![build status](https://secure.travis-ci.org/substack/node-resolve.png)](http://travis-ci.org/substack/node-resolve)\n\n# example\n\nasynchronously resolve:\n\n``` js\nvar resolve = require(\'resolve\');\nresolve(\'tap\', { basedir: __dirname }, function (err, res) {\n    if (err) console.error(err)\n    else console.log(res)\n});\n```\n\n```\n$ node example/async.js\n/home/substack/projects/node-resolve/node_modules/tap/lib/main.js\n```\n\nsynchronously resolve:\n\n``` js\nvar resolve = require(\'resolve\');\nvar res = resolve.sync(\'tap\', { basedir: __dirname });\nconsole.log(res);\n```\n\n```\n$ node example/sync.js\n/home/substack/projects/node-resolve/node_modules/tap/lib/main.js\n```\n\n# methods\n\n``` js\nvar resolve = require(\'resolve\')\n```\n\n## resolve(pkg, opts={}, cb)\n\nAsynchronously resolve the module path string `pkg` into `cb(err, res)`.\n\noptions are:\n\n* opts.basedir - directory to begin resolving from\n\n* opts.extensions - array of file extensions to search in order\n\n* opts.readFile - how to read files asynchronously\n\n* opts.isFile - function to asynchronously test whether a file exists\n\n* opts.packageFilter - transform the parsed package.json contents before looking\nat the "main" field\n\n* opts.paths - require.paths array to use if nothing is found on the normal\nnode_modules recursive walk (probably don\'t use this)\n\ndefault `opts` values:\n\n``` javascript\n{\n    paths: [],\n    basedir: __dirname,\n    extensions: [ \'.js\' ],\n    readFile: fs.readFile,\n    isFile: function (file, cb) {\n        fs.stat(file, function (err, stat) {\n            if (err && err.code === \'ENOENT\') cb(null, false)\n            else if (err) cb(err)\n            else cb(null, stat.isFile())\n        });\n    }\n}\n```\n\n## resolve.sync(pkg, opts)\n\nSynchronously resolve the module path string `pkg`, returning the result and\nthrowing an error when `pkg` can\'t be resolved.\n\noptions are:\n\n* opts.basedir - directory to begin resolving from\n\n* opts.extensions - array of file extensions to search in order\n\n* opts.readFile - how to read files synchronously\n\n* opts.isFile - function to synchronously test whether a file exists\n\n* opts.packageFilter - transform the parsed package.json contents before looking\nat the "main" field\n\n* opts.paths - require.paths array to use if nothing is found on the normal\nnode_modules recursive walk (probably don\'t use this)\n\ndefault `opts` values:\n\n``` javascript\n{\n    paths: [],\n    basedir: __dirname,\n    extensions: [ \'.js\' ],\n    readFileSync: fs.readFileSync,\n    isFile: function (file) {\n        try { return fs.statSync(file).isFile() }\n        catch (e) { return false }\n    }\n}\n````\n\n## resolve.isCore(pkg)\n\nReturn whether a package is in core.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install resolve\n```\n\n# license\n\nMIT\n',
681 silly resolved     readmeFilename: 'readme.markdown',
681 silly resolved     _id: 'resolve@0.3.1',
681 silly resolved     dist: { shasum: 'eb19bb0986cc5d36fb6cfb51e286fd4f9fb40597' },
681 silly resolved     _from: 'resolve@~0.3.1',
681 silly resolved     _resolved: 'https://registry.npmjs.org/resolve/-/resolve-0.3.1.tgz' } ]
682 info install findup-sync@0.1.3 into /usr/local/lib/node_modules/grunt-cli
683 info install nopt@1.0.10 into /usr/local/lib/node_modules/grunt-cli
684 info install resolve@0.3.1 into /usr/local/lib/node_modules/grunt-cli
685 info installOne findup-sync@0.1.3
686 info installOne nopt@1.0.10
687 info installOne resolve@0.3.1
688 verbose from cache /Users/Connor/.npm/findup-sync/0.1.3/package/package.json
689 verbose from cache /Users/Connor/.npm/nopt/1.0.10/package/package.json
690 verbose from cache /Users/Connor/.npm/resolve/0.3.1/package/package.json
691 verbose read json /Users/Connor/.npm/async/0.2.10/package/package.json
692 info /usr/local/lib/node_modules/grunt-cli/node_modules/findup-sync unbuild
693 verbose read json /usr/local/lib/node_modules/grunt-cli/node_modules/findup-sync/package.json
694 info /usr/local/lib/node_modules/grunt-cli/node_modules/nopt unbuild
695 verbose read json /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/package.json
696 info /usr/local/lib/node_modules/grunt-cli/node_modules/resolve unbuild
697 verbose read json /usr/local/lib/node_modules/grunt-cli/node_modules/resolve/package.json
698 verbose tar unpack /Users/Connor/.npm/findup-sync/0.1.3/package.tgz
699 verbose tar unpack /Users/Connor/.npm/nopt/1.0.10/package.tgz
700 verbose tar unpack /Users/Connor/.npm/resolve/0.3.1/package.tgz
701 silly lockFile 16784428-unt-cli-node-modules-findup-sync /usr/local/lib/node_modules/grunt-cli/node_modules/findup-sync
702 verbose lock /usr/local/lib/node_modules/grunt-cli/node_modules/findup-sync /Users/Connor/.npm/16784428-unt-cli-node-modules-findup-sync.lock
703 silly lockFile 7c7cdc94-ules-grunt-cli-node-modules-nopt /usr/local/lib/node_modules/grunt-cli/node_modules/nopt
704 verbose lock /usr/local/lib/node_modules/grunt-cli/node_modules/nopt /Users/Connor/.npm/7c7cdc94-ules-grunt-cli-node-modules-nopt.lock
705 silly lockFile 9cd6e0b6-s-grunt-cli-node-modules-resolve /usr/local/lib/node_modules/grunt-cli/node_modules/resolve
706 verbose lock /usr/local/lib/node_modules/grunt-cli/node_modules/resolve /Users/Connor/.npm/9cd6e0b6-s-grunt-cli-node-modules-resolve.lock
707 silly gunzTarPerm modes [ '755', '644' ]
708 silly gunzTarPerm modes [ '755', '644' ]
709 silly gunzTarPerm modes [ '755', '644' ]
710 silly gunzTarPerm extractEntry package.json
711 silly gunzTarPerm extractEntry package.json
712 silly gunzTarPerm extractEntry package.json
713 silly lockFile 857e90fc--Connor-npm-async-0-2-10-package /Users/Connor/.npm/async/0.2.10/package
714 silly gunzTarPerm extractEntry .npmignore
715 silly gunzTarPerm extractEntry README.md
716 silly gunzTarPerm extractEntry .npmignore
717 silly gunzTarPerm extractEntry README.md
718 silly gunzTarPerm extractEntry LICENSE
719 silly gunzTarPerm extractEntry index.js
720 silly shasum updated bytes 15773
721 silly gunzTarPerm extractEntry package.json
722 info shasum a06e6818541aa1851d6ac822c8dbbfd6206eb72f
722 info shasum /Users/Connor/.npm/async/0.2.10/package.tgz
723 verbose from cache /Users/Connor/.npm/async/0.2.10/package/package.json
724 silly gunzTarPerm extractEntry README.md
725 silly gunzTarPerm extractEntry LICENSE
726 silly gunzTarPerm extractEntry Gruntfile.js
727 silly gunzTarPerm extractEntry .jshintrc
728 silly gunzTarPerm extractEntry LICENSE
729 silly gunzTarPerm extractEntry bin/nopt.js
730 silly gunzTarPerm extractEntry .travis.yml
731 silly gunzTarPerm extractEntry example/async.js
732 silly gunzTarPerm extractEntry .travis.yml
733 silly gunzTarPerm extractEntry lib/findup-sync.js
734 silly gunzTarPerm extractEntry examples/my-program.js
735 silly gunzTarPerm extractEntry lib/nopt.js
736 silly gunzTarPerm extractEntry index.js
737 silly gunzTarPerm extractEntry completion.sh.hbs
738 silly gunzTarPerm extractEntry lib/completion.js
739 silly gunzTarPerm extractEntry example/sync.js
740 silly gunzTarPerm extractEntry lib/async.js
741 silly gunzTarPerm extractEntry LICENSE-MIT
742 silly gunzTarPerm extractEntry test/findup-sync_test.js
743 silly gunzTarPerm extractEntry lib/parser.js
744 silly gunzTarPerm extractEntry lib/core.js
745 silly gunzTarPerm extractEntry lib/sync.js
746 silly gunzTarPerm extractEntry lib/usage.js
747 silly gunzTarPerm extractEntry test/fixtures/a/b/bar.txt
748 silly gunzTarPerm extractEntry test/fixtures/a/foo.txt
749 silly gunzTarPerm extractEntry lib/validation.js
750 silly gunzTarPerm extractEntry lib/core.json
751 silly gunzTarPerm extractEntry readme.markdown
752 silly gunzTarPerm extractEntry test/fixtures/a.txt
753 silly gunzTarPerm extractEntry test/fixtures/aaa.txt
754 silly gunzTarPerm extractEntry test/core.js
755 silly gunzTarPerm extractEntry test/filter.js
756 verbose chmod /Users/Connor/.npm/async/0.2.10/package.tgz 644
757 verbose chown /Users/Connor/.npm/async/0.2.10/package.tgz [ 501, 20 ]
758 silly lockFile 172bae6c-npmjs-org-async-async-0-2-10-tgz https://registry.npmjs.org/async/-/async-0.2.10.tgz
759 silly lockFile 098b530d-async-0-2-10 async@0.2.10
760 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
761 silly gunzTarPerm extractEntry test/filter_sync.js
762 silly gunzTarPerm extractEntry test/mock.js
763 silly gunzTarPerm extractEntry test/mock_sync.js
764 silly gunzTarPerm extractEntry test/resolver.js
765 silly gunzTarPerm extractEntry test/resolver_sync.js
766 silly gunzTarPerm extractEntry test/resolver/foo.js
767 silly gunzTarPerm extractEntry test/resolver/mug.js
768 silly gunzTarPerm extractEntry test/resolver/bar/node_modules/foo/index.js
769 silly gunzTarPerm extractEntry test/resolver/baz/package.json
770 silly gunzTarPerm extractEntry test/resolver/baz/doom.js
771 silly gunzTarPerm extractEntry test/resolver/baz/quux.js
772 silly gunzTarPerm extractEntry test/resolver/biz/node_modules/grux/index.js
773 silly gunzTarPerm extractEntry test/resolver/biz/node_modules/tiv/index.js
774 silly gunzTarPerm extractEntry test/resolver/cup.coffee
775 verbose read json /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/package.json
776 silly lockFile 7c7cdc94-ules-grunt-cli-node-modules-nopt /usr/local/lib/node_modules/grunt-cli/node_modules/nopt
777 silly gunzTarPerm extractEntry test/resolver/mug.coffee
778 silly gunzTarPerm extractEntry test/resolver/other_path/root.js
779 info preinstall nopt@1.0.10
780 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/package.json
781 verbose read json /usr/local/lib/node_modules/grunt-cli/node_modules/findup-sync/package.json
782 silly gunzTarPerm extractEntry test/resolver/other_path/lib/other-lib.js
783 silly lockFile 16784428-unt-cli-node-modules-findup-sync /usr/local/lib/node_modules/grunt-cli/node_modules/findup-sync
784 info preinstall findup-sync@0.1.3
785 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/findup-sync/package.json
786 verbose readDependencies using package.json deps
787 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/package.json
788 verbose readDependencies using package.json deps
789 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/findup-sync/package.json
790 verbose readDependencies using package.json deps
791 verbose readDependencies using package.json deps
792 verbose cache add [ 'abbrev@1', null ]
793 verbose cache add name=undefined spec="abbrev@1" args=["abbrev@1",null]
794 verbose parsed url { pathname: 'abbrev@1', path: 'abbrev@1', href: 'abbrev@1' }
795 verbose cache add name="abbrev" spec="1" args=["abbrev","1"]
796 verbose parsed url { pathname: '1', path: '1', href: '1' }
797 verbose addNamed [ 'abbrev', '1' ]
798 verbose addNamed [ null, '>=1.0.0- <2.0.0-' ]
799 silly lockFile 6830b531-abbrev-1 abbrev@1
800 verbose lock abbrev@1 /Users/Connor/.npm/6830b531-abbrev-1.lock
801 verbose cache add [ 'glob@~3.2.9', null ]
802 verbose cache add name=undefined spec="glob@~3.2.9" args=["glob@~3.2.9",null]
803 verbose parsed url { pathname: 'glob@~3.2.9',
803 verbose parsed url   path: 'glob@~3.2.9',
803 verbose parsed url   href: 'glob@~3.2.9' }
804 verbose cache add name="glob" spec="~3.2.9" args=["glob","~3.2.9"]
805 verbose parsed url { pathname: '~3.2.9', path: '~3.2.9', href: '~3.2.9' }
806 verbose addNamed [ 'glob', '~3.2.9' ]
807 verbose addNamed [ null, '>=3.2.9- <3.3.0-' ]
808 silly lockFile 200db29c-glob-3-2-9 glob@~3.2.9
809 verbose lock glob@~3.2.9 /Users/Connor/.npm/200db29c-glob-3-2-9.lock
810 verbose cache add [ 'lodash@~2.4.1', null ]
811 verbose cache add name=undefined spec="lodash@~2.4.1" args=["lodash@~2.4.1",null]
812 verbose parsed url { pathname: 'lodash@~2.4.1',
812 verbose parsed url   path: 'lodash@~2.4.1',
812 verbose parsed url   href: 'lodash@~2.4.1' }
813 verbose cache add name="lodash" spec="~2.4.1" args=["lodash","~2.4.1"]
814 verbose parsed url { pathname: '~2.4.1', path: '~2.4.1', href: '~2.4.1' }
815 verbose addNamed [ 'lodash', '~2.4.1' ]
816 verbose addNamed [ null, '>=2.4.1- <2.5.0-' ]
817 silly lockFile 257f9ab3-lodash-2-4-1 lodash@~2.4.1
818 verbose lock lodash@~2.4.1 /Users/Connor/.npm/257f9ab3-lodash-2-4-1.lock
819 silly addNameRange { name: 'abbrev', range: '>=1.0.0- <2.0.0-', hasData: false }
820 silly addNameRange { name: 'glob', range: '>=3.2.9- <3.3.0-', hasData: false }
821 silly addNameRange { name: 'lodash', range: '>=2.4.1- <2.5.0-', hasData: false }
822 verbose url raw abbrev
823 verbose url resolving [ 'https://registry.npmjs.org/', './abbrev' ]
824 verbose url resolved https://registry.npmjs.org/abbrev
825 info trying registry request attempt 1 at 13:37:34
826 http GET https://registry.npmjs.org/abbrev
827 verbose url raw glob
828 verbose url resolving [ 'https://registry.npmjs.org/', './glob' ]
829 verbose url resolved https://registry.npmjs.org/glob
830 info trying registry request attempt 1 at 13:37:34
831 http GET https://registry.npmjs.org/glob
832 verbose url raw lodash
833 verbose url resolving [ 'https://registry.npmjs.org/', './lodash' ]
834 verbose url resolved https://registry.npmjs.org/lodash
835 info trying registry request attempt 1 at 13:37:34
836 http GET https://registry.npmjs.org/lodash
837 verbose read json /Users/Connor/.npm/yargs/3.10.0/package/package.json
838 silly lockFile 4813de81--Connor-npm-yargs-3-10-0-package /Users/Connor/.npm/yargs/3.10.0/package
839 silly shasum updated bytes 18895
840 info shasum 181e030ecd38ee6f2e8deb4129c413edc460966e
840 info shasum /Users/Connor/.npm/yargs/3.10.0/package.tgz
841 verbose from cache /Users/Connor/.npm/yargs/3.10.0/package/package.json
842 verbose chmod /Users/Connor/.npm/yargs/3.10.0/package.tgz 644
843 verbose chown /Users/Connor/.npm/yargs/3.10.0/package.tgz [ 501, 20 ]
844 silly lockFile 9ebd2b7e-npmjs-org-yargs-yargs-3-10-0-tgz https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz
845 silly lockFile 94a5d6c6-yargs-3-10-0 yargs@3.10.0
846 silly lockFile 65827936-yargs-3-10-0 yargs@~3.10.0
847 http 200 https://registry.npmjs.org/abbrev
848 silly registry.get cb [ 200,
848 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
848 silly registry.get     etag: '"5COR5F08LNF679JR9VE4E6VZW"',
848 silly registry.get     'content-type': 'application/json',
848 silly registry.get     'cache-control': 'max-age=300',
848 silly registry.get     'content-length': '5442',
848 silly registry.get     'accept-ranges': 'bytes',
848 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:34 GMT',
848 silly registry.get     via: '1.1 varnish',
848 silly registry.get     age: '258',
848 silly registry.get     connection: 'keep-alive',
848 silly registry.get     'x-served-by': 'cache-jfk1021-JFK',
848 silly registry.get     'x-cache': 'HIT',
848 silly registry.get     'x-cache-hits': '3',
848 silly registry.get     'x-timer': 'S1453574254.668089,VS0,VE0',
848 silly registry.get     vary: 'Accept' } ]
849 silly addNameRange number 2 { name: 'abbrev', range: '>=1.0.0- <2.0.0-', hasData: true }
850 silly addNameRange versions [ 'abbrev', [ '1.0.3', '1.0.4', '1.0.5', '1.0.6', '1.0.7' ] ]
851 verbose addNamed [ 'abbrev', '1.0.7' ]
852 verbose addNamed [ '1.0.7', '1.0.7' ]
853 silly lockFile 38917c76-abbrev-1-0-7 abbrev@1.0.7
854 verbose lock abbrev@1.0.7 /Users/Connor/.npm/38917c76-abbrev-1-0-7.lock
855 verbose read json /usr/local/lib/node_modules/grunt-cli/node_modules/resolve/package.json
856 http 200 https://registry.npmjs.org/lodash
857 silly registry.get cb [ 200,
857 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
857 silly registry.get     etag: '"CTDEA53T30HYQ337RKFC3QX31"',
857 silly registry.get     'content-type': 'application/json',
857 silly registry.get     'cache-control': 'max-age=300',
857 silly registry.get     'content-length': '107648',
857 silly registry.get     'accept-ranges': 'bytes',
857 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:34 GMT',
857 silly registry.get     via: '1.1 varnish',
857 silly registry.get     age: '17',
857 silly registry.get     connection: 'keep-alive',
857 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
857 silly registry.get     'x-cache': 'HIT',
857 silly registry.get     'x-cache-hits': '1',
857 silly registry.get     'x-timer': 'S1453574254.663895,VS0,VE0',
857 silly registry.get     vary: 'Accept' } ]
858 http 200 https://registry.npmjs.org/glob
859 silly registry.get cb [ 200,
859 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
859 silly registry.get     etag: '"73PILUHM4JZTLOI0KMY7PE8N7"',
859 silly registry.get     'content-type': 'application/json',
859 silly registry.get     'cache-control': 'max-age=300',
859 silly registry.get     'content-length': '114214',
859 silly registry.get     'accept-ranges': 'bytes',
859 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:34 GMT',
859 silly registry.get     via: '1.1 varnish',
859 silly registry.get     age: '114',
859 silly registry.get     connection: 'keep-alive',
859 silly registry.get     'x-served-by': 'cache-jfk1020-JFK',
859 silly registry.get     'x-cache': 'HIT',
859 silly registry.get     'x-cache-hits': '10',
859 silly registry.get     'x-timer': 'S1453574254.659914,VS0,VE0',
859 silly registry.get     vary: 'Accept' } ]
860 silly lockFile 9f2b7721-pmjs-org-abbrev-abbrev-1-0-7-tgz https://registry.npmjs.org/abbrev/-/abbrev-1.0.7.tgz
861 verbose lock https://registry.npmjs.org/abbrev/-/abbrev-1.0.7.tgz /Users/Connor/.npm/9f2b7721-pmjs-org-abbrev-abbrev-1-0-7-tgz.lock
862 verbose addRemoteTarball [ 'https://registry.npmjs.org/abbrev/-/abbrev-1.0.7.tgz',
862 verbose addRemoteTarball   '5b6035b2ee9d4fb5cf859f08a9be81b208491843' ]
863 info retry fetch attempt 1 at 13:37:34
864 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/tmp.tgz
865 http GET https://registry.npmjs.org/abbrev/-/abbrev-1.0.7.tgz
866 silly addNameRange number 2 { name: 'lodash', range: '>=2.4.1- <2.5.0-', hasData: true }
867 silly addNameRange versions [ 'lodash',
867 silly addNameRange   [ '0.1.0',
867 silly addNameRange     '0.2.0',
867 silly addNameRange     '0.2.1',
867 silly addNameRange     '0.2.2',
867 silly addNameRange     '0.3.0',
867 silly addNameRange     '0.3.1',
867 silly addNameRange     '0.3.2',
867 silly addNameRange     '0.4.0',
867 silly addNameRange     '0.4.1',
867 silly addNameRange     '0.4.2',
867 silly addNameRange     '0.5.0-rc.1',
867 silly addNameRange     '0.5.0',
867 silly addNameRange     '0.5.1',
867 silly addNameRange     '0.5.2',
867 silly addNameRange     '0.6.0',
867 silly addNameRange     '0.6.1',
867 silly addNameRange     '0.7.0',
867 silly addNameRange     '0.8.0',
867 silly addNameRange     '0.8.1',
867 silly addNameRange     '0.8.2',
867 silly addNameRange     '0.9.0',
867 silly addNameRange     '0.9.1',
867 silly addNameRange     '0.9.2',
867 silly addNameRange     '0.10.0',
867 silly addNameRange     '1.0.0-rc.1',
867 silly addNameRange     '1.0.0-rc.2',
867 silly addNameRange     '1.0.0-rc.3',
867 silly addNameRange     '1.0.0',
867 silly addNameRange     '1.0.1',
867 silly addNameRange     '1.1.0',
867 silly addNameRange     '1.1.1',
867 silly addNameRange     '1.2.0',
867 silly addNameRange     '1.2.1',
867 silly addNameRange     '1.3.0',
867 silly addNameRange     '1.3.1',
867 silly addNameRange     '2.0.0',
867 silly addNameRange     '2.1.0',
867 silly addNameRange     '2.2.0',
867 silly addNameRange     '2.2.1',
867 silly addNameRange     '2.3.0',
867 silly addNameRange     '2.4.0',
867 silly addNameRange     '2.4.1',
867 silly addNameRange     '3.0.0',
867 silly addNameRange     '3.0.1',
867 silly addNameRange     '3.1.0',
867 silly addNameRange     '3.2.0',
867 silly addNameRange     '3.3.0',
867 silly addNameRange     '3.3.1',
867 silly addNameRange     '3.4.0',
867 silly addNameRange     '3.5.0',
867 silly addNameRange     '3.6.0',
867 silly addNameRange     '1.0.2',
867 silly addNameRange     '3.7.0',
867 silly addNameRange     '2.4.2',
867 silly addNameRange     '3.8.0',
867 silly addNameRange     '3.9.0',
867 silly addNameRange     '3.9.1',
867 silly addNameRange     '3.9.2',
867 silly addNameRange     '3.9.3',
867 silly addNameRange     '3.10.0',
867 silly addNameRange     '3.10.1',
867 silly addNameRange     '4.0.0' ] ]
868 verbose addNamed [ 'lodash', '2.4.2' ]
869 verbose addNamed [ '2.4.2', '2.4.2' ]
870 silly lockFile c9ffd2e6-lodash-2-4-2 lodash@2.4.2
871 verbose lock lodash@2.4.2 /Users/Connor/.npm/c9ffd2e6-lodash-2-4-2.lock
872 silly addNameRange number 2 { name: 'glob', range: '>=3.2.9- <3.3.0-', hasData: true }
873 silly addNameRange versions [ 'glob',
873 silly addNameRange   [ '1.1.0',
873 silly addNameRange     '2.0.9',
873 silly addNameRange     '2.0.8',
873 silly addNameRange     '2.0.7',
873 silly addNameRange     '2.1.0',
873 silly addNameRange     '3.0.0',
873 silly addNameRange     '3.0.1',
873 silly addNameRange     '3.1.0',
873 silly addNameRange     '3.1.1',
873 silly addNameRange     '3.1.2',
873 silly addNameRange     '3.1.3',
873 silly addNameRange     '3.1.4',
873 silly addNameRange     '3.1.5',
873 silly addNameRange     '3.1.6',
873 silly addNameRange     '3.1.7',
873 silly addNameRange     '3.1.9',
873 silly addNameRange     '3.1.10',
873 silly addNameRange     '3.1.11',
873 silly addNameRange     '3.1.12',
873 silly addNameRange     '3.1.13',
873 silly addNameRange     '3.1.14',
873 silly addNameRange     '3.1.15',
873 silly addNameRange     '3.1.16',
873 silly addNameRange     '3.1.17',
873 silly addNameRange     '3.1.18',
873 silly addNameRange     '3.1.19',
873 silly addNameRange     '3.1.20',
873 silly addNameRange     '3.1.21',
873 silly addNameRange     '3.2.0',
873 silly addNameRange     '3.2.1',
873 silly addNameRange     '3.2.3',
873 silly addNameRange     '3.2.4',
873 silly addNameRange     '3.2.5',
873 silly addNameRange     '3.2.6',
873 silly addNameRange     '3.2.7',
873 silly addNameRange     '3.2.8',
873 silly addNameRange     '3.2.9',
873 silly addNameRange     '3.2.10',
873 silly addNameRange     '3.2.11',
873 silly addNameRange     '4.0.0',
873 silly addNameRange     '4.0.1',
873 silly addNameRange     '4.0.2',
873 silly addNameRange     '4.0.3',
873 silly addNameRange     '4.0.4',
873 silly addNameRange     '4.0.5',
873 silly addNameRange     '4.0.6',
873 silly addNameRange     '4.1.2-beta',
873 silly addNameRange     '4.1.2',
873 silly addNameRange     '4.1.3',
873 silly addNameRange     '4.1.4',
873 silly addNameRange     '4.1.5',
873 silly addNameRange     '4.1.6',
873 silly addNameRange     '4.2.0',
873 silly addNameRange     '4.2.1',
873 silly addNameRange     '4.2.2',
873 silly addNameRange     '4.3.0',
873 silly addNameRange     '4.3.1',
873 silly addNameRange     '4.3.2',
873 silly addNameRange     '4.3.3',
873 silly addNameRange     '4.3.4',
873 silly addNameRange     '4.3.5',
873 silly addNameRange     '4.4.0',
873 silly addNameRange     '4.4.2',
873 silly addNameRange     '4.5.0',
873 silly addNameRange     '5.0.0',
873 silly addNameRange     '4.5.1',
873 silly addNameRange     '5.0.1',
873 silly addNameRange     '4.5.2',
873 silly addNameRange     '5.0.2',
873 silly addNameRange     '4.5.3',
873 silly addNameRange     '5.0.3',
873 silly addNameRange     '5.0.4',
873 silly addNameRange     '5.0.5',
873 silly addNameRange     '5.0.6',
873 silly addNameRange     '5.0.7',
873 silly addNameRange     '5.0.9',
873 silly addNameRange     '5.0.10',
873 silly addNameRange     '5.0.11',
873 silly addNameRange     '5.0.12',
873 silly addNameRange     '5.0.13',
873 silly addNameRange     '5.0.14',
873 silly addNameRange     '5.0.15',
873 silly addNameRange     '6.0.1',
873 silly addNameRange     '6.0.2',
873 silly addNameRange     '6.0.3',
873 silly addNameRange     '6.0.4' ] ]
874 verbose addNamed [ 'glob', '3.2.11' ]
875 verbose addNamed [ '3.2.11', '3.2.11' ]
876 silly lockFile 3fffafa6-glob-3-2-11 glob@3.2.11
877 verbose lock glob@3.2.11 /Users/Connor/.npm/3fffafa6-glob-3-2-11.lock
878 silly lockFile 9cd6e0b6-s-grunt-cli-node-modules-resolve /usr/local/lib/node_modules/grunt-cli/node_modules/resolve
879 silly lockFile f8fb0abb-pmjs-org-lodash-lodash-2-4-2-tgz https://registry.npmjs.org/lodash/-/lodash-2.4.2.tgz
880 verbose lock https://registry.npmjs.org/lodash/-/lodash-2.4.2.tgz /Users/Connor/.npm/f8fb0abb-pmjs-org-lodash-lodash-2-4-2-tgz.lock
881 silly lockFile 82bef4e1-y-npmjs-org-glob-glob-3-2-11-tgz https://registry.npmjs.org/glob/-/glob-3.2.11.tgz
882 verbose lock https://registry.npmjs.org/glob/-/glob-3.2.11.tgz /Users/Connor/.npm/82bef4e1-y-npmjs-org-glob-glob-3-2-11-tgz.lock
883 verbose addRemoteTarball [ 'https://registry.npmjs.org/lodash/-/lodash-2.4.2.tgz',
883 verbose addRemoteTarball   'fadd834b9683073da179b3eae6d9c0d15053f73e' ]
884 verbose addRemoteTarball [ 'https://registry.npmjs.org/glob/-/glob-3.2.11.tgz',
884 verbose addRemoteTarball   '4a973f635b9190f715d10987d5c00fd2815ebe3d' ]
885 info retry fetch attempt 1 at 13:37:34
886 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/tmp.tgz
887 info retry fetch attempt 1 at 13:37:34
888 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/tmp.tgz
889 info preinstall resolve@0.3.1
890 http GET https://registry.npmjs.org/lodash/-/lodash-2.4.2.tgz
891 http GET https://registry.npmjs.org/glob/-/glob-3.2.11.tgz
892 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/resolve/package.json
893 verbose readDependencies using package.json deps
894 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/resolve/package.json
895 verbose readDependencies using package.json deps
896 silly resolved []
897 verbose about to build /usr/local/lib/node_modules/grunt-cli/node_modules/resolve
898 info build /usr/local/lib/node_modules/grunt-cli/node_modules/resolve
899 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/resolve/package.json
900 verbose linkStuff [ true,
900 verbose linkStuff   '/usr/local/lib/node_modules',
900 verbose linkStuff   false,
900 verbose linkStuff   '/usr/local/lib/node_modules/grunt-cli/node_modules' ]
901 info linkStuff resolve@0.3.1
902 verbose linkBins resolve@0.3.1
903 verbose linkMans resolve@0.3.1
904 verbose rebuildBundles resolve@0.3.1
905 info install resolve@0.3.1
906 info postinstall resolve@0.3.1
907 verbose read json /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/package/package.json
908 silly lockFile 85bec717-54263-0-4873335878364742-package /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/package
909 verbose from cache /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/package/package.json
910 verbose tar pack [ '/Users/Connor/.npm/source-map/0.5.3/package.tgz',
910 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/package' ]
911 verbose tarball /Users/Connor/.npm/source-map/0.5.3/package.tgz
912 verbose folder /Users/Connor/tmp/npm-20311/1453574254263-0.4873335878364742/package
913 silly lockFile 2e2c0019-npm-source-map-0-5-3-package-tgz /Users/Connor/.npm/source-map/0.5.3/package.tgz
914 verbose lock /Users/Connor/.npm/source-map/0.5.3/package.tgz /Users/Connor/.npm/2e2c0019-npm-source-map-0-5-3-package-tgz.lock
915 http 200 https://registry.npmjs.org/abbrev/-/abbrev-1.0.7.tgz
916 silly shasum updated bytes 2425
917 info shasum 5b6035b2ee9d4fb5cf859f08a9be81b208491843
917 info shasum /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/tmp.tgz
918 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/tmp.tgz
919 silly lockFile e930bbb2-54752-0-3775494343135506-package /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/package
920 verbose lock /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/package /Users/Connor/.npm/e930bbb2-54752-0-3775494343135506-package.lock
921 http 200 https://registry.npmjs.org/glob/-/glob-3.2.11.tgz
922 silly gunzTarPerm modes [ '755', '644' ]
923 silly gunzTarPerm extractEntry package.json
924 silly shasum updated bytes 16584
925 silly gunzTarPerm extractEntry .npmignore
926 silly gunzTarPerm extractEntry README.md
927 info shasum 4a973f635b9190f715d10987d5c00fd2815ebe3d
927 info shasum /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/tmp.tgz
928 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/tmp.tgz
929 silly gunzTarPerm extractEntry LICENSE
930 silly gunzTarPerm extractEntry abbrev.js
931 silly lockFile 120b3fa7-4764-0-16413867683149874-package /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/package
932 verbose lock /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/package /Users/Connor/.npm/120b3fa7-4764-0-16413867683149874-package.lock
933 silly gunzTarPerm modes [ '755', '644' ]
934 silly gunzTarPerm extractEntry test.js
935 silly gunzTarPerm extractEntry CONTRIBUTING.md
936 silly gunzTarPerm extractEntry package.json
937 silly gunzTarPerm extractEntry .npmignore
938 silly gunzTarPerm extractEntry README.md
939 http 200 https://registry.npmjs.org/lodash/-/lodash-2.4.2.tgz
940 silly gunzTarPerm extractEntry .travis.yml
941 silly gunzTarPerm extractEntry LICENSE
942 silly gunzTarPerm extractEntry glob.js
943 silly gunzTarPerm extractEntry .travis.yml
944 silly gunzTarPerm extractEntry examples/g.js
945 silly gunzTarPerm extractEntry examples/usr-local.js
946 silly gunzTarPerm extractEntry test/00-setup.js
947 silly gunzTarPerm extractEntry test/cwd-test.js
948 silly gunzTarPerm extractEntry test/globstar-match.js
949 silly gunzTarPerm extractEntry test/mark.js
950 silly gunzTarPerm extractEntry test/stat.js
951 silly gunzTarPerm extractEntry test/bash-comparison.js
952 verbose read json /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/package/package.json
953 silly gunzTarPerm extractEntry test/pause-resume.js
954 silly gunzTarPerm extractEntry test/readme-issue.js
955 silly gunzTarPerm extractEntry test/root-nomount.js
956 silly lockFile e930bbb2-54752-0-3775494343135506-package /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/package
957 silly gunzTarPerm extractEntry test/root.js
958 verbose from cache /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/package/package.json
959 silly gunzTarPerm extractEntry test/new-glob-optional-options.js
960 verbose tar pack [ '/Users/Connor/.npm/abbrev/1.0.7/package.tgz',
960 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/package' ]
961 verbose tarball /Users/Connor/.npm/abbrev/1.0.7/package.tgz
962 verbose folder /Users/Connor/tmp/npm-20311/1453574254752-0.3775494343135506/package
963 silly lockFile 729ab8c9-nor-npm-abbrev-1-0-7-package-tgz /Users/Connor/.npm/abbrev/1.0.7/package.tgz
964 verbose lock /Users/Connor/.npm/abbrev/1.0.7/package.tgz /Users/Connor/.npm/729ab8c9-nor-npm-abbrev-1-0-7-package-tgz.lock
965 silly gunzTarPerm extractEntry test/zz-cleanup.js
966 silly gunzTarPerm extractEntry test/nocase-nomagic.js
967 silly gunzTarPerm extractEntry test/bash-results.json
968 silly lockFile 729ab8c9-nor-npm-abbrev-1-0-7-package-tgz /Users/Connor/.npm/abbrev/1.0.7/package.tgz
969 silly lockFile 833ec182--Connor-npm-abbrev-1-0-7-package /Users/Connor/.npm/abbrev/1.0.7/package
970 verbose lock /Users/Connor/.npm/abbrev/1.0.7/package /Users/Connor/.npm/833ec182--Connor-npm-abbrev-1-0-7-package.lock
971 silly lockFile 833ec182--Connor-npm-abbrev-1-0-7-package /Users/Connor/.npm/abbrev/1.0.7/package
972 verbose tar unpack /Users/Connor/.npm/abbrev/1.0.7/package.tgz
973 silly lockFile 833ec182--Connor-npm-abbrev-1-0-7-package /Users/Connor/.npm/abbrev/1.0.7/package
974 verbose lock /Users/Connor/.npm/abbrev/1.0.7/package /Users/Connor/.npm/833ec182--Connor-npm-abbrev-1-0-7-package.lock
975 silly gunzTarPerm modes [ '755', '644' ]
976 silly gunzTarPerm extractEntry package.json
977 silly gunzTarPerm extractEntry .npmignore
978 silly gunzTarPerm extractEntry README.md
979 silly gunzTarPerm extractEntry LICENSE
980 silly gunzTarPerm extractEntry abbrev.js
981 silly gunzTarPerm extractEntry test.js
982 silly gunzTarPerm extractEntry .travis.yml
983 silly shasum updated bytes 16384
984 silly shasum updated bytes 36864
985 silly shasum updated bytes 36864
986 silly shasum updated bytes 40960
987 silly shasum updated bytes 40960
988 silly gunzTarPerm extractEntry CONTRIBUTING.md
989 silly shasum updated bytes 24684
990 info shasum fadd834b9683073da179b3eae6d9c0d15053f73e
990 info shasum /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/tmp.tgz
991 verbose tar unpack /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/tmp.tgz
992 silly lockFile 919ca374-54764-0-8199737994000316-package /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/package
993 verbose lock /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/package /Users/Connor/.npm/919ca374-54764-0-8199737994000316-package.lock
994 silly gunzTarPerm modes [ '755', '644' ]
995 silly gunzTarPerm extractEntry package.json
996 silly gunzTarPerm extractEntry README.md
997 silly gunzTarPerm extractEntry lodash.js
998 silly gunzTarPerm extractEntry LICENSE.txt
999 silly gunzTarPerm extractEntry dist/lodash.compat.js
1000 verbose read json /Users/Connor/.npm/abbrev/1.0.7/package/package.json
1001 silly lockFile 833ec182--Connor-npm-abbrev-1-0-7-package /Users/Connor/.npm/abbrev/1.0.7/package
1002 silly shasum updated bytes 2423
1003 info shasum 6ae97bf8e009422e0ca77a41e96857f90242bbd5
1003 info shasum /Users/Connor/.npm/abbrev/1.0.7/package.tgz
1004 verbose from cache /Users/Connor/.npm/abbrev/1.0.7/package/package.json
1005 silly gunzTarPerm extractEntry dist/lodash.compat.min.js
1006 silly gunzTarPerm extractEntry dist/lodash.js
1007 verbose chmod /Users/Connor/.npm/abbrev/1.0.7/package.tgz 644
1008 verbose chown /Users/Connor/.npm/abbrev/1.0.7/package.tgz [ 501, 20 ]
1009 silly lockFile 9f2b7721-pmjs-org-abbrev-abbrev-1-0-7-tgz https://registry.npmjs.org/abbrev/-/abbrev-1.0.7.tgz
1010 silly lockFile 38917c76-abbrev-1-0-7 abbrev@1.0.7
1011 silly lockFile 6830b531-abbrev-1 abbrev@1
1012 silly resolved [ { name: 'abbrev',
1012 silly resolved     version: '1.0.7',
1012 silly resolved     description: 'Like ruby\'s abbrev module, but in js',
1012 silly resolved     author: { name: 'Isaac Z. Schlueter', email: 'i@izs.me' },
1012 silly resolved     main: 'abbrev.js',
1012 silly resolved     scripts: { test: 'tap test.js --cov' },
1012 silly resolved     repository: { type: 'git', url: 'http://github.com/isaacs/abbrev-js' },
1012 silly resolved     license: 'ISC',
1012 silly resolved     devDependencies: { tap: '^1.2.0' },
1012 silly resolved     readme: '# abbrev-js\n\nJust like [ruby\'s Abbrev](http://apidock.com/ruby/Abbrev).\n\nUsage:\n\n    var abbrev = require("abbrev");\n    abbrev("foo", "fool", "folding", "flop");\n    \n    // returns:\n    { fl: \'flop\'\n    , flo: \'flop\'\n    , flop: \'flop\'\n    , fol: \'folding\'\n    , fold: \'folding\'\n    , foldi: \'folding\'\n    , foldin: \'folding\'\n    , folding: \'folding\'\n    , foo: \'foo\'\n    , fool: \'fool\'\n    }\n\nThis is handy for command-line scripts, or other cases where you want to be able to accept shorthands.\n',
1012 silly resolved     readmeFilename: 'README.md',
1012 silly resolved     _id: 'abbrev@1.0.7',
1012 silly resolved     dist: { shasum: '6ae97bf8e009422e0ca77a41e96857f90242bbd5' },
1012 silly resolved     _from: 'abbrev@1',
1012 silly resolved     _resolved: 'https://registry.npmjs.org/abbrev/-/abbrev-1.0.7.tgz' } ]
1013 info install abbrev@1.0.7 into /usr/local/lib/node_modules/grunt-cli/node_modules/nopt
1014 info installOne abbrev@1.0.7
1015 verbose from cache /Users/Connor/.npm/abbrev/1.0.7/package/package.json
1016 info /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev unbuild
1017 verbose read json /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev/package.json
1018 verbose tar unpack /Users/Connor/.npm/abbrev/1.0.7/package.tgz
1019 silly gunzTarPerm extractEntry dist/lodash.min.js
1020 silly gunzTarPerm extractEntry dist/lodash.underscore.js
1021 silly gunzTarPerm extractEntry dist/lodash.underscore.min.js
1022 verbose read json /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/package/package.json
1023 silly lockFile 120b3fa7-4764-0-16413867683149874-package /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/package
1024 verbose from cache /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/package/package.json
1025 silly lockFile 25b07134-modules-nopt-node-modules-abbrev /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev
1026 verbose lock /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev /Users/Connor/.npm/25b07134-modules-nopt-node-modules-abbrev.lock
1027 verbose tar pack [ '/Users/Connor/.npm/glob/3.2.11/package.tgz',
1027 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/package' ]
1028 verbose tarball /Users/Connor/.npm/glob/3.2.11/package.tgz
1029 verbose folder /Users/Connor/tmp/npm-20311/1453574254764-0.16413867683149874/package
1030 silly lockFile 72ff4645-nnor-npm-glob-3-2-11-package-tgz /Users/Connor/.npm/glob/3.2.11/package.tgz
1031 verbose lock /Users/Connor/.npm/glob/3.2.11/package.tgz /Users/Connor/.npm/72ff4645-nnor-npm-glob-3-2-11-package-tgz.lock
1032 silly gunzTarPerm modes [ '755', '644' ]
1033 silly gunzTarPerm extractEntry package.json
1034 silly gunzTarPerm extractEntry .npmignore
1035 silly gunzTarPerm extractEntry README.md
1036 silly gunzTarPerm extractEntry LICENSE
1037 silly gunzTarPerm extractEntry abbrev.js
1038 silly gunzTarPerm extractEntry test.js
1039 silly gunzTarPerm extractEntry .travis.yml
1040 silly gunzTarPerm extractEntry CONTRIBUTING.md
1041 verbose read json /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev/package.json
1042 silly lockFile 25b07134-modules-nopt-node-modules-abbrev /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev
1043 info preinstall abbrev@1.0.7
1044 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev/package.json
1045 verbose readDependencies using package.json deps
1046 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev/package.json
1047 verbose readDependencies using package.json deps
1048 silly resolved []
1049 verbose about to build /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev
1050 info build /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev
1051 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules/abbrev/package.json
1052 verbose linkStuff [ true,
1052 verbose linkStuff   '/usr/local/lib/node_modules',
1052 verbose linkStuff   false,
1052 verbose linkStuff   '/usr/local/lib/node_modules/grunt-cli/node_modules/nopt/node_modules' ]
1053 info linkStuff abbrev@1.0.7
1054 verbose linkBins abbrev@1.0.7
1055 verbose linkMans abbrev@1.0.7
1056 verbose rebuildBundles abbrev@1.0.7
1057 info install abbrev@1.0.7
1058 info postinstall abbrev@1.0.7
1059 verbose about to build /usr/local/lib/node_modules/grunt-cli/node_modules/nopt
1060 info build /usr/local/lib/node_modules/grunt-cli/node_modules/nopt
1061 verbose from cache /usr/local/lib/node_modules/grunt-cli/node_modules/nopt/package.json
1062 verbose linkStuff [ true,
1062 verbose linkStuff   '/usr/local/lib/node_modules',
1062 verbose linkStuff   false,
1062 verbose linkStuff   '/usr/local/lib/node_modules/grunt-cli/node_modules' ]
1063 info linkStuff nopt@1.0.10
1064 verbose linkBins nopt@1.0.10
1065 verbose link bins [ { nopt: './bin/nopt.js' },
1065 verbose link bins   '/usr/local/lib/node_modules/grunt-cli/node_modules/.bin',
1065 verbose link bins   false ]
1066 verbose linkMans nopt@1.0.10
1067 verbose rebuildBundles nopt@1.0.10
1068 verbose rebuildBundles [ 'abbrev' ]
1069 info install nopt@1.0.10
1070 info postinstall nopt@1.0.10
1071 silly lockFile 72ff4645-nnor-npm-glob-3-2-11-package-tgz /Users/Connor/.npm/glob/3.2.11/package.tgz
1072 silly lockFile b7658475-s-Connor-npm-glob-3-2-11-package /Users/Connor/.npm/glob/3.2.11/package
1073 verbose lock /Users/Connor/.npm/glob/3.2.11/package /Users/Connor/.npm/b7658475-s-Connor-npm-glob-3-2-11-package.lock
1074 silly lockFile b7658475-s-Connor-npm-glob-3-2-11-package /Users/Connor/.npm/glob/3.2.11/package
1075 verbose tar unpack /Users/Connor/.npm/glob/3.2.11/package.tgz
1076 silly lockFile b7658475-s-Connor-npm-glob-3-2-11-package /Users/Connor/.npm/glob/3.2.11/package
1077 verbose lock /Users/Connor/.npm/glob/3.2.11/package /Users/Connor/.npm/b7658475-s-Connor-npm-glob-3-2-11-package.lock
1078 silly gunzTarPerm modes [ '755', '644' ]
1079 silly gunzTarPerm extractEntry package.json
1080 silly gunzTarPerm extractEntry .npmignore
1081 silly gunzTarPerm extractEntry README.md
1082 silly gunzTarPerm extractEntry LICENSE
1083 silly gunzTarPerm extractEntry glob.js
1084 silly gunzTarPerm extractEntry .travis.yml
1085 silly gunzTarPerm extractEntry examples/g.js
1086 silly gunzTarPerm extractEntry examples/usr-local.js
1087 silly gunzTarPerm extractEntry test/00-setup.js
1088 silly gunzTarPerm extractEntry test/cwd-test.js
1089 silly gunzTarPerm extractEntry test/globstar-match.js
1090 silly gunzTarPerm extractEntry test/mark.js
1091 silly gunzTarPerm extractEntry test/stat.js
1092 silly gunzTarPerm extractEntry test/bash-comparison.js
1093 silly gunzTarPerm extractEntry test/pause-resume.js
1094 silly gunzTarPerm extractEntry test/readme-issue.js
1095 silly gunzTarPerm extractEntry test/root-nomount.js
1096 silly gunzTarPerm extractEntry test/root.js
1097 silly gunzTarPerm extractEntry test/new-glob-optional-options.js
1098 silly gunzTarPerm extractEntry test/zz-cleanup.js
1099 silly gunzTarPerm extractEntry test/nocase-nomagic.js
1100 silly gunzTarPerm extractEntry test/bash-results.json
1101 verbose read json /Users/Connor/.npm/glob/3.2.11/package/package.json
1102 silly lockFile b7658475-s-Connor-npm-glob-3-2-11-package /Users/Connor/.npm/glob/3.2.11/package
1103 silly shasum updated bytes 8192
1104 silly shasum updated bytes 8395
1105 info shasum 59b830a124cf6e5f6db20c9a83425e0e4b9cd371
1105 info shasum /Users/Connor/.npm/glob/3.2.11/package.tgz
1106 verbose from cache /Users/Connor/.npm/glob/3.2.11/package/package.json
1107 verbose chmod /Users/Connor/.npm/glob/3.2.11/package.tgz 644
1108 verbose chown /Users/Connor/.npm/glob/3.2.11/package.tgz [ 501, 20 ]
1109 silly lockFile 82bef4e1-y-npmjs-org-glob-glob-3-2-11-tgz https://registry.npmjs.org/glob/-/glob-3.2.11.tgz
1110 silly lockFile 3fffafa6-glob-3-2-11 glob@3.2.11
1111 silly lockFile 200db29c-glob-3-2-9 glob@~3.2.9
1112 silly lockFile 2e2c0019-npm-source-map-0-5-3-package-tgz /Users/Connor/.npm/source-map/0.5.3/package.tgz
1113 silly lockFile 5e3ef523-nor-npm-source-map-0-5-3-package /Users/Connor/.npm/source-map/0.5.3/package
1114 verbose lock /Users/Connor/.npm/source-map/0.5.3/package /Users/Connor/.npm/5e3ef523-nor-npm-source-map-0-5-3-package.lock
1115 silly lockFile 5e3ef523-nor-npm-source-map-0-5-3-package /Users/Connor/.npm/source-map/0.5.3/package
1116 verbose tar unpack /Users/Connor/.npm/source-map/0.5.3/package.tgz
1117 silly lockFile 5e3ef523-nor-npm-source-map-0-5-3-package /Users/Connor/.npm/source-map/0.5.3/package
1118 verbose lock /Users/Connor/.npm/source-map/0.5.3/package /Users/Connor/.npm/5e3ef523-nor-npm-source-map-0-5-3-package.lock
1119 silly gunzTarPerm modes [ '755', '644' ]
1120 verbose read json /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/package/package.json
1121 silly lockFile 919ca374-54764-0-8199737994000316-package /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/package
1122 verbose from cache /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/package/package.json
1123 verbose tar pack [ '/Users/Connor/.npm/lodash/2.4.2/package.tgz',
1123 verbose tar pack   '/Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/package' ]
1124 verbose tarball /Users/Connor/.npm/lodash/2.4.2/package.tgz
1125 verbose folder /Users/Connor/tmp/npm-20311/1453574254764-0.8199737994000316/package
1126 silly lockFile 40058cb6-nor-npm-lodash-2-4-2-package-tgz /Users/Connor/.npm/lodash/2.4.2/package.tgz
1127 verbose lock /Users/Connor/.npm/lodash/2.4.2/package.tgz /Users/Connor/.npm/40058cb6-nor-npm-lodash-2-4-2-package-tgz.lock
1128 silly gunzTarPerm extractEntry package.json
1129 silly gunzTarPerm extractEntry README.md
1130 silly gunzTarPerm extractEntry source-map.js
1131 silly gunzTarPerm extractEntry dist/source-map.debug.js
1132 silly gunzTarPerm extractEntry dist/source-map.js
1133 silly gunzTarPerm extractEntry dist/source-map.min.js
1134 silly gunzTarPerm extractEntry dist/source-map.min.js.map
1135 silly gunzTarPerm extractEntry lib/array-set.js
1136 silly gunzTarPerm extractEntry lib/base64-vlq.js
1137 silly gunzTarPerm extractEntry lib/base64.js
1138 silly gunzTarPerm extractEntry lib/binary-search.js
1139 silly gunzTarPerm extractEntry lib/mapping-list.js
1140 silly gunzTarPerm extractEntry lib/quick-sort.js
1141 silly gunzTarPerm extractEntry lib/source-map-consumer.js
1142 silly gunzTarPerm extractEntry lib/source-map-generator.js
1143 silly gunzTarPerm extractEntry lib/source-node.js
1144 silly gunzTarPerm extractEntry lib/util.js
1145 verbose read json /Users/Connor/.npm/source-map/0.5.3/package/package.json
1146 silly lockFile 5e3ef523-nor-npm-source-map-0-5-3-package /Users/Connor/.npm/source-map/0.5.3/package
1147 silly shasum updated bytes 40960
1148 silly shasum updated bytes 40960
1149 silly shasum updated bytes 40960
1150 silly shasum updated bytes 40960
1151 silly shasum updated bytes 19144
1152 info shasum 8b712c199842b169e2950eba100b23a763ef640f
1152 info shasum /Users/Connor/.npm/source-map/0.5.3/package.tgz
1153 verbose from cache /Users/Connor/.npm/source-map/0.5.3/package/package.json
1154 verbose chmod /Users/Connor/.npm/source-map/0.5.3/package.tgz 644
1155 verbose chown /Users/Connor/.npm/source-map/0.5.3/package.tgz [ 501, 20 ]
1156 silly lockFile e3a881b5--source-map-source-map-0-5-3-tgz https://registry.npmjs.org/source-map/-/source-map-0.5.3.tgz
1157 silly lockFile 6e5886d8-source-map-0-5-3 source-map@0.5.3
1158 silly lockFile 27b644b5-source-map-0-5-1 source-map@~0.5.1
1159 silly resolved [ { name: 'uglify-to-browserify',
1159 silly resolved     version: '1.0.2',
1159 silly resolved     description: 'A transform to make UglifyJS work in browserify.',
1159 silly resolved     keywords: [],
1159 silly resolved     dependencies: {},
1159 silly resolved     devDependencies: { 'uglify-js': '~2.4.0', 'source-map': '~0.1.27' },
1159 silly resolved     scripts: { test: 'node test/index.js' },
1159 silly resolved     repository:
1159 silly resolved      { type: 'git',
1159 silly resolved        url: 'https://github.com/ForbesLindesay/uglify-to-browserify.git' },
1159 silly resolved     author: { name: 'ForbesLindesay' },
1159 silly resolved     license: 'MIT',
1159 silly resolved     readme: '# uglify-to-browserify\r\n\r\nA transform to make UglifyJS work in browserify.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/uglify-to-browserify.png?branch=master)](https://travis-ci.org/ForbesLindesay/uglify-to-browserify)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/uglify-to-browserify.png)](https://gemnasium.com/ForbesLindesay/uglify-to-browserify)\r\n[![NPM version](https://badge.fury.io/js/uglify-to-browserify.png)](http://badge.fury.io/js/uglify-to-browserify)\r\n\r\n## Installation\r\n\r\n    npm install uglify-to-browserify\r\n\r\n## License\r\n\r\n  MIT',
1159 silly resolved     readmeFilename: 'README.md',
1159 silly resolved     _id: 'uglify-to-browserify@1.0.2',
1159 silly resolved     dist: { shasum: 'bf264296a0f0933b15387efe9aca92fa856abb02' },
1159 silly resolved     _from: 'uglify-to-browserify@~1.0.0',
1159 silly resolved     _resolved: 'https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz' },
1159 silly resolved   { name: 'async',
1159 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1159 silly resolved     main: './lib/async',
1159 silly resolved     author: { name: 'Caolan McMahon' },
1159 silly resolved     version: '0.2.10',
1159 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1159 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1159 silly resolved     licenses: [ [Object] ],
1159 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1159 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1159 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1159 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1159 silly resolved     readmeFilename: 'README.md',
1159 silly resolved     _id: 'async@0.2.10',
1159 silly resolved     dist: { shasum: 'a06e6818541aa1851d6ac822c8dbbfd6206eb72f' },
1159 silly resolved     _from: 'async@~0.2.6',
1159 silly resolved     _resolved: 'https://registry.npmjs.org/async/-/async-0.2.10.tgz' },
1159 silly resolved   { name: 'yargs',
1159 silly resolved     version: '3.10.0',
1159 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
1159 silly resolved     main: './index.js',
1159 silly resolved     files: [ 'index.js', 'lib', 'completion.sh.hbs', 'LICENSE' ],
1159 silly resolved     dependencies:
1159 silly resolved      { camelcase: '^1.0.2',
1159 silly resolved        cliui: '^2.1.0',
1159 silly resolved        decamelize: '^1.0.0',
1159 silly resolved        'window-size': '0.1.0' },
1159 silly resolved     devDependencies:
1159 silly resolved      { chai: '^2.2.0',
1159 silly resolved        coveralls: '^2.11.2',
1159 silly resolved        hashish: '0.0.4',
1159 silly resolved        mocha: '^2.2.1',
1159 silly resolved        nyc: '^2.2.1',
1159 silly resolved        standard: '^3.11.1' },
1159 silly resolved     scripts:
1159 silly resolved      { test: 'standard && nyc mocha --check-leaks && nyc report',
1159 silly resolved        coverage: 'nyc report --reporter=text-lcov | coveralls' },
1159 silly resolved     repository: { type: 'git', url: 'http://github.com/bcoe/yargs.git' },
1159 silly resolved     standard: { ignore: [Object], globals: [Object] },
1159 silly resolved     keywords:
1159 silly resolved      [ 'argument',
1159 silly resolved        'args',
1159 silly resolved        'option',
1159 silly resolved        'parser',
1159 silly resolved        'parsing',
1159 silly resolved        'cli',
1159 silly resolved        'command' ],
1159 silly resolved     author:
1159 silly resolved      { name: 'Alex Ford',
1159 silly resolved        email: 'Alex.Ford@CodeTunnel.com',
1159 silly resolved        url: 'http://CodeTunnel.com' },
1159 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object] ],
1159 silly resolved     license: 'MIT',
1159 silly resolved     engine: { node: '>=0.4' },
1159 silly resolved     readme: 'yargs\n========\n\nYargs be a node.js library fer hearties tryin\' ter parse optstrings.\n\nWith yargs, ye be havin\' a map that leads straight to yer treasure! Treasure of course, being a simple option hash.\n\n[![Build Status](https://travis-ci.org/bcoe/yargs.png)](https://travis-ci.org/bcoe/yargs)\n[![Dependency Status](https://gemnasium.com/bcoe/yargs.png)](https://gemnasium.com/bcoe/yargs)\n[![Coverage Status](https://coveralls.io/repos/bcoe/yargs/badge.svg?branch=)](https://coveralls.io/r/bcoe/yargs?branch=)\n[![NPM version](https://img.shields.io/npm/v/yargs.svg)](https://www.npmjs.com/package/yargs)\n\n> Yargs is the official successor to optimist. Please feel free to submit issues and pull requests. If you\'d like to contribute and don\'t know where to start, have a look at [the issue list](https://github.com/bcoe/yargs/issues) :)\n\nexamples\n========\n\nWith yargs, the options be just a hash!\n-------------------------------------------------------------------\n\nplunder.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\').argv;\n\nif (argv.ships > 3 && argv.distance < 53.5) {\n    console.log(\'Plunder more riffiwobbles!\');\n}\nelse {\n    console.log(\'Retreat from the xupptumblers!\');\n}\n````\n\n***\n\n    $ ./plunder.js --ships=4 --distance=22\n    Plunder more riffiwobbles!\n\n    $ ./plunder.js --ships 12 --distance 98.7\n    Retreat from the xupptumblers!\n\n![Joe was one optimistic pirate.](http://i.imgur.com/4WFGVJ9.png)\n\nBut don\'t walk the plank just yet! There be more! You can do short options:\n-------------------------------------------------\n\nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long, short, and even grouped:\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'yargs\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le perroquet dit: \' : \'The parrot says: \');\n}\nconsole.log(\n    (argv.fr ? \'couac\' : \'squawk\') + (argv.p ? \'!\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The parrot says: squawk\n\n    $ ./bool.js -sp\n    The parrot says: squawk!\n\n    $ ./bool.js -sp --fr\n    Le perroquet dit: couac!\n\nAnd non-hyphenated options too! Just use `argv._`!\n-------------------------------------------------\n\nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 rum\n    (6.82,3.35)\n    [ \'rum\' ]\n\n    $ ./nonopt.js "me hearties" -x 0.54 yo -y 1.12 ho\n    (0.54,1.12)\n    [ \'me hearties\', \'yo\', \'ho\' ]\n\nYargs even counts your booleans!\n----------------------------------------------------------------------\n\ncount.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .count(\'verbose\')\n    .alias(\'v\', \'verbose\')\n    .argv;\n\nVERBOSE_LEVEL = argv.verbose;\n\nfunction WARN()  { VERBOSE_LEVEL >= 0 && console.log.apply(console, arguments); }\nfunction INFO()  { VERBOSE_LEVEL >= 1 && console.log.apply(console, arguments); }\nfunction DEBUG() { VERBOSE_LEVEL >= 2 && console.log.apply(console, arguments); }\n\nWARN("Showing only important stuff");\nINFO("Showing semi-mportant stuff too");\nDEBUG("Extra chatty mode");\n````\n\n***\n    $ node count.js\n    Showing only important stuff\n\n    $ node count.js -v\n    Showing only important stuff\n    Showing semi-important stuff too\n\n    $ node count.js -vv\n    Showing only important stuff\n    Showing semi-important stuff too\n    Extra chatty mode\n\n    $ node count.js -v --verbose\n    Showing only important stuff\n    Showing semi-important stuff too\n    Extra chatty mode\n\nTell users how to use yer options and make demands.\n-------------------------------------------------\n\narea.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .usage(\'Usage: $0 -w [num] -yh[num]\')\n    .demand([\'w\',\'h\'])\n    .argv;\n\nconsole.log("The area is:", argv.w * argv.h);\n````\n\n***\n\n    $ ./area.js -w 55 -h 11\n    605\n\n    $ node ./area.js -w 4.91 -w 2.51\n    Usage: node ./area.js -w [num] -h [num]\n\n    Options:\n      -w  [required]\n      -h  [required]\n\n    Missing required arguments: h\n\nAfter yer demands have been met, demand more! Ask for non-hypenated arguments!\n-----------------------------------------\n\ndemand_count.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .demand(2)\n    .argv;\nconsole.dir(argv)\n````\n\n***\n\n\t$ ./demand_count.js a\n\tNot enough arguments, expected 2, but only found 1\n\t$ ./demand_count.js a b\n\t{ _: [ \'a\', \'b\' ], \'$0\': \'node ./demand_count.js\' }\n\t$ ./demand_count.js a b c\n\t{ _: [ \'a\', \'b\', \'c\' ], \'$0\': \'node ./demand_count.js\' }\n\nEVEN MORE SHIVER ME TIMBERS!\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv.v);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_single.js -v "me hearties" yo ho\n    true\n    [ \'me hearties\', \'yo\', \'ho\' ]\n\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nYargs is here to help you...\n---------------------------\n\nYe can describe parameters fer help messages and set aliases. Yargs figures\nout how ter format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .usage(\'Usage: $0 <command> [options]\')\n    .command(\'count\', \'Count the lines in a file\')\n    .demand(1)\n    .example(\'$0 count -f foo.js\', \'count the lines in the given file\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .nargs(\'f\', 1)\n    .describe(\'f\', \'Load a file\')\n    .help(\'h\')\n    .alias(\'h\', \'help\')\n    .epilog(\'copyright 2015\')\n    .argv;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n    $ node line_count.js count\n    Usage: node test.js <command> [options]\n\n    Commands:\n      count    Count the lines in a file\n\n    Options:\n      -f, --file  Load a file        [required]\n      -h, --help  Show help\n\n    Examples:\n      node test.js count -f foo.js    count the lines in the given file\n\n    copyright 2015\n\n    Missing required arguments: f\n\n    $ node line_count.js count --file line_count.js\n    20\n\n    $ node line_count.js count -f line_count.js\n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'yargs\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'yargs\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'yargs\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\nEach key of this object should be the canonical version of the option, and each\nvalue should be a string or an array of strings.\n\n.default(key, value, [description])\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\nBut wait, there\'s more! the default value can be a `function` which returns\na value. The name of the function will be used in the usage string:\n\n```js\nvar argv = require(\'yargs\')\n  .default(\'random\', function randomValue() {\n    return Math.random() * 256;\n  }).argv;\n```\n\nOptionally, `description` can also be provided and will take precedence over\ndisplaying the value in the usage instructions:\n\n```js\n.default(\'timeout\', 60000, \'(one-minute)\');\n```\n\n.demand(key, [msg | boolean])\n-----------------------------\n.require(key, [msg | boolean])\n------------------------------\n.required(key, [msg | boolean])\n-------------------------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\nIf a `msg` string is given, it will be printed when the argument is missing,\ninstead of the standard error message. This is especially helpful for the non-option arguments in `argv._`.\n\nIf a `boolean` value is given, it controls whether the option is demanded;\nthis is useful when using `.options()` to specify command line parameters.\n\n.requiresArg(key)\n-----------------\n\nSpecifies either a single option key (string), or an array of options that\nmust be followed by option values. If any option value is missing, show the\nusage information and exit.\n\nThe default behaviour is to set the value of any key not followed by an\noption value to `true`.\n\n.implies(x, y)\n--------------\n\nGiven the key `x` is set, it is required that the key `y` is set.\n\nimplies can also accept an object specifying multiple implications.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.option(key, opt)\n-----------------\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default().describe().string()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'yargs\')\n    .option(\'f\', {\n        alias : \'file\',\n        demand: true,\n        default: \'/etc/passwd\',\n        describe: \'x marks the spot\',\n        type: \'string\'\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'yargs\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n````javascript\nvar argv = require(\'yargs\')\n    .options({\n      \'f\': {\n        alias: \'file\',\n        demand: true,\n        default: \'/etc/passwd\',\n        describe: \'x marks the spot\',\n        type: \'string\'\n      }\n    })\n    .argv\n;\n````\n\n.usage(message, opts)\n---------------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n`opts` is optional and acts like calling `.options(opts)`.\n\n.command(cmd, desc, [fn])\n-------------------\n\nDocument the commands exposed by your application.\n\nuse `desc` to provide a description for each command your application accepts (the\nvalues stored in `argv._`).\n\nOptionally, you can provide a handler `fn` which will be executed when\na given command is provided. The handler will be executed with an instance\nof `yargs`, which can be used to compose nested commands.\n\nHere\'s an example of top-level and nested commands in action:\n\n```js\nvar argv = require(\'yargs\')\n  .usage(\'npm <command>\')\n  .command(\'install\', \'tis a mighty fine package to install\')\n  .command(\'publish\', \'shiver me timbers, should you be sharing all that\', function (yargs) {\n    argv = yargs.option(\'f\', {\n      alias: \'force\',\n      description: \'yar, it usually be a bad idea\'\n    })\n    .help(\'help\')\n    .argv\n  })\n  .help(\'help\')\n  .argv;\n```\n\n.example(cmd, desc)\n-------------------\n\nGive some example invocations of your program. Inside `cmd`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\nExamples will be printed out as part of the help message.\n\n\n.epilogue(str)\n--------------\n.epilog(str)\n------------\n\nA message to print at the end of the usage instructions, e.g.,\n\n```js\nvar argv = require(\'yargs\')\n  .epilogue(\'for more information, find our manual at http://example.com\');\n```\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\n`fn` is called with two arguments, the parsed `argv` hash and an array of options and their aliases.\n\nIf `fn` throws or returns a non-truthy value, show the thrown error, usage information, and\nexit.\n\n.fail(fn)\n---------\n\nMethod to execute when a failure occurs, rather then printing the failure message.\n\n`fn` is called with the failure message that would have been printed.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\n`key` will default to `false`, unless an `default(key, undefined)` is\nexplicitly set.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n`.string(\'_\')` will result in non-hyphenated arguments being interpreted as strings,\nregardless of whether they resemble numbers.\n\n.array(key)\n----------\n\nTell the parser to interpret `key` as an array. If `.array(\'foo\')` is set,\n`--foo foo bar` will be parsed as `[\'foo\', \'bar\']` rather than as `\'bar\'`.\n\n.nargs(key, count)\n-----------\n\nThe number of arguments that should be consumed after a key. This can be a\nuseful hint to prevent parsing ambiguity:\n\n```js\nvar argv = require(\'yargs\')\n  .nargs(\'token\', 1)\n  .parse([\'--token\', \'-my-token\']);\n```\n\nparses as:\n\n`{ _: [], token: \'-my-token\', \'$0\': \'node test\' }`\n\nOptionally `.nargs()` can take an object of `key`/`narg` pairs.\n\n.config(key)\n------------\n\nTells the parser that if the option specified by `key` is passed in, it\nshould be interpreted as a path to a JSON config file. The file is loaded\nand parsed, and its properties are set as arguments.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\nBy default wrap will be set to `Math.min(80, windowWidth)`. Use `.wrap(null)` to\nspecify no column limit.\n\n`yargs.wrap(yargs.terminalWidth())` can be used to maximize the width\nof yargs\' usage instructions.\n\n.strict()\n---------\n\nAny command-line argument given that is not demanded, or does not have a\ncorresponding description, will be reported as an error.\n\n.help([option, [description]])\n------------------------------\n\nAdd an option (e.g., `--help`) that displays the usage string and exits the\nprocess. If present, the `description` parameter customises the description of\nthe help option in the usage string.\n\nIf invoked without parameters, `.help` returns the generated usage string.\n\nExample:\n\n```\nvar yargs = require("yargs")\n       .usage("$0 -operand1 number -operand2 number -operation [add|subtract]");\nconsole.log(yargs.help());\n```\n\nLater on, ```argv``` can be retrived with ```yargs.argv```\n\n.version(version, [option], [description])\n----------------------------------------\n\nAdd an option (e.g., `--version`) that displays the version number (given by the\n`version` parameter) and exits the process. If present, the `description`\nparameter customizes the description of the version option in the usage string.\n\nYou can provide a `function` for version, rather than a string.\nThis is useful if you want to use the version from your package.json:\n\n```js\nvar argv = require(\'yargs\')\n  .version(function() {\n    return require(\'../package\').version;\n  })\n  .argv;\n```\n\n.showHelpOnFail(enable, [message])\n----------------------------------\n\nBy default, yargs outputs a usage string if any error is detected. Use the\n`.showHelpOnFail` method to customize this behaviour. if `enable` is `false`,\nthe usage string is not output. If the `message` parameter is present, this\nmessage is output after the error message.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'yargs\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .showHelpOnFail(false, "Specify --help for available options")\n    .argv;\n\n// etc.\n````\n\n***\n\n    $ node line_count.js --file\n    Missing argument value: f\n\n    Specify --help for available options\n\n.showHelp(consoleLevel=\'error\')\n---------------------------\n\nPrint the usage data using the [`console`](https://nodejs.org/api/console.html) function `consoleLevel` for printing.\n\nExample:\n\n```\nvar yargs = require("yargs")\n       .usage("$0 -operand1 number -operand2 number -operation [add|subtract]");\nyargs.showHelp();\n```\n\nOr, to print the usage data to `stdout` instead, you can specify the use of `console.log`:\n\n```\nyargs.showHelp("log");\n```\n\nLater on, ```argv``` can be retrived with ```yargs.argv```\n\n.completion(cmd, [description], [fn]);\n-------------\n\nEnable bash-completion shortcuts for commands and options.\n\n`cmd`: when present in `argv._`, will result in the `.bashrc` completion script\nbeing outputted. To enable bash completions, concat the generated script to your\n`.bashrc`, or `.bash_profile`.\n\n`description`: provide a description in your usage instructions for the command\nthat generates bash completion scripts.\n\n`fn`, rather than relying on yargs\' default completion functionlity, which\nshiver me timbers is pretty awesome, you can provide your own completion\nmethod.\n\n```js\nvar argv = require(\'yargs\')\n  .completion(\'completion\', function(current, argv) {\n    // \'current\' is the current command being completed.\n    // \'argv\' is the parsed arguments so far.\n    // simply return an array of completions.\n    return [\n      \'foo\',\n      \'bar\'\n    ];\n  })\n  .argv;\n```\n\nBut wait, there\'s more! you can provide asynchronous completions.\n\n```js\nvar argv = require(\'yargs\')\n  .completion(\'completion\', function(current, argv, done) {\n    setTimeout(function() {\n      done([\n        \'apple\',\n        \'banana\'\n      ]);\n    }, 500);\n  })\n  .argv;\n```\n\n.showCompletionScript()\n----------------------\n\nGenerate a bash completion script. Users of your application can install this\nscript in their `.bashrc`, and yargs will provide completion shortcuts for\ncommands and options.\n\n.exitProcess(enable)\n----------------------------------\n\nBy default, yargs exits the process when the user passes a help flag, uses the `.version` functionality or when validation fails. Calling `.exitProcess(false)` disables this behavior, enabling further actions after yargs have been validated.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.reset()\n--------\n\nReset the argument object built up so far. This is useful for\ncreating nested command line interfaces.\n\n```js\nvar yargs = require(\'./yargs\')\n  .usage(\'$0 command\')\n  .command(\'hello\', \'hello command\')\n  .command(\'world\', \'world command\')\n  .demand(1, \'must provide a valid command\'),\n  argv = yargs.argv,\n  command = argv._[0];\n\nif (command === \'hello\') {\n  yargs.reset()\n    .usage(\'$0 hello\')\n    .help(\'h\')\n    .example(\'$0 hello\', \'print the hello message!\')\n    .argv\n\n  console.log(\'hello!\');\n} else if (command === \'world\'){\n  yargs.reset()\n    .usage(\'$0 world\')\n    .help(\'h\')\n    .example(\'$0 world\', \'print the world message!\')\n    .argv\n\n  console.log(\'world!\');\n} else {\n  yargs.showHelp();\n}\n```\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\nshort numbers\n-------------\n\nShort numeric `head -n5` style argument work too:\n\n    $ node reflect.js -n123 -m456\n    { \'3\': true,\n      \'6\': true,\n      _: [],\n      \'$0\': \'node ./reflect.js\',\n      n: 123,\n      m: 456 }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n\n    npm install yargs\n\nor clone this project on github:\n\n    git clone http://github.com/bcoe/yargs.git\n\nTo run the tests with npm, just do:\n\n    npm test\n\ninspired by\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
1159 silly resolved     readmeFilename: 'README.md',
1159 silly resolved     _id: 'yargs@3.10.0',
1159 silly resolved     dist: { shasum: '181e030ecd38ee6f2e8deb4129c413edc460966e' },
1159 silly resolved     _from: 'yargs@~3.10.0',
1159 silly resolved     _resolved: 'https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz' },
1159 silly resolved   { name: 'source-map',
1159 silly resolved     description: 'Generates and consumes source maps',
1159 silly resolved     version: '0.5.3',
1159 silly resolved     homepage: 'https://github.com/mozilla/source-map',
1159 silly resolved     author: { name: 'Nick Fitzgerald', email: 'nfitzgerald@mozilla.com' },
1159 silly resolved     contributors:
1159 silly resolved      [ [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object],
1159 silly resolved        [Object] ],
1159 silly resolved     repository: { type: 'git', url: 'http://github.com/mozilla/source-map.git' },
1159 silly resolved     main: './source-map.js',
1159 silly resolved     files:
1159 silly resolved      [ 'source-map.js',
1159 silly resolved        'lib/',
1159 silly resolved        'dist/source-map.debug.js',
1159 silly resolved        'dist/source-map.js',
1159 silly resolved        'dist/source-map.min.js',
1159 silly resolved        'dist/source-map.min.js.map' ],
1159 silly resolved     engines: { node: '>=0.10.0' },
1159 silly resolved     license: 'BSD-3-Clause',
1159 silly resolved     scripts:
1159 silly resolved      { test: 'node test/run-tests.js',
1159 silly resolved        build: 'webpack --color',
1159 silly resolved        toc: 'doctoc --title \'## Table of Contents\' README.md && doctoc --title \'## Table of Contents\' CONTRIBUTING.md' },
1159 silly resolved     devDependencies: { doctoc: '^0.15.0', webpack: '^1.12.0' },
1159 silly resolved     readme: '# Source Map\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\n[![NPM](https://nodei.co/npm/source-map.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/source-map)\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n\n## Use with Node\n\n    $ npm install source-map\n\n## Use on the Web\n\n    <script src="https://raw.githubusercontent.com/mozilla/source-map/master/dist/source-map.min.js" defer></script>\n\n--------------------------------------------------------------------------------\n\n<!-- `npm run toc` to regenerate the Table of Contents -->\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON\'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Examples](#examples)\n  - [Consuming a source map](#consuming-a-source-map)\n  - [Generating a source map](#generating-a-source-map)\n    - [With SourceNode (high level API)](#with-sourcenode-high-level-api)\n    - [With SourceMapGenerator (low level API)](#with-sourcemapgenerator-low-level-api)\n- [API](#api)\n  - [SourceMapConsumer](#sourcemapconsumer)\n    - [new SourceMapConsumer(rawSourceMap)](#new-sourcemapconsumerrawsourcemap)\n    - [SourceMapConsumer.prototype.computeColumnSpans()](#sourcemapconsumerprototypecomputecolumnspans)\n    - [SourceMapConsumer.prototype.originalPositionFor(generatedPosition)](#sourcemapconsumerprototypeoriginalpositionforgeneratedposition)\n    - [SourceMapConsumer.prototype.generatedPositionFor(originalPosition)](#sourcemapconsumerprototypegeneratedpositionfororiginalposition)\n    - [SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)](#sourcemapconsumerprototypeallgeneratedpositionsfororiginalposition)\n    - [SourceMapConsumer.prototype.hasContentsOfAllSources()](#sourcemapconsumerprototypehascontentsofallsources)\n    - [SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])](#sourcemapconsumerprototypesourcecontentforsource-returnnullonmissing)\n    - [SourceMapConsumer.prototype.eachMapping(callback, context, order)](#sourcemapconsumerprototypeeachmappingcallback-context-order)\n  - [SourceMapGenerator](#sourcemapgenerator)\n    - [new SourceMapGenerator([startOfSourceMap])](#new-sourcemapgeneratorstartofsourcemap)\n    - [SourceMapGenerator.fromSourceMap(sourceMapConsumer)](#sourcemapgeneratorfromsourcemapsourcemapconsumer)\n    - [SourceMapGenerator.prototype.addMapping(mapping)](#sourcemapgeneratorprototypeaddmappingmapping)\n    - [SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)](#sourcemapgeneratorprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])](#sourcemapgeneratorprototypeapplysourcemapsourcemapconsumer-sourcefile-sourcemappath)\n    - [SourceMapGenerator.prototype.toString()](#sourcemapgeneratorprototypetostring)\n  - [SourceNode](#sourcenode)\n    - [new SourceNode([line, column, source[, chunk[, name]]])](#new-sourcenodeline-column-source-chunk-name)\n    - [SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])](#sourcenodefromstringwithsourcemapcode-sourcemapconsumer-relativepath)\n    - [SourceNode.prototype.add(chunk)](#sourcenodeprototypeaddchunk)\n    - [SourceNode.prototype.prepend(chunk)](#sourcenodeprototypeprependchunk)\n    - [SourceNode.prototype.setSourceContent(sourceFile, sourceContent)](#sourcenodeprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceNode.prototype.walk(fn)](#sourcenodeprototypewalkfn)\n    - [SourceNode.prototype.walkSourceContents(fn)](#sourcenodeprototypewalksourcecontentsfn)\n    - [SourceNode.prototype.join(sep)](#sourcenodeprototypejoinsep)\n    - [SourceNode.prototype.replaceRight(pattern, replacement)](#sourcenodeprototypereplacerightpattern-replacement)\n    - [SourceNode.prototype.toString()](#sourcenodeprototypetostring)\n    - [SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])](#sourcenodeprototypetostringwithsourcemapstartofsourcemap)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Examples\n\n### Consuming a source map\n\n```js\nvar rawSourceMap = {\n  version: 3,\n  file: \'min.js\',\n  names: [\'bar\', \'baz\', \'n\'],\n  sources: [\'one.js\', \'two.js\'],\n  sourceRoot: \'http://example.com/www/js/\',\n  mappings: \'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA\'\n};\n\nvar smc = new SourceMapConsumer(rawSourceMap);\n\nconsole.log(smc.sources);\n// [ \'http://example.com/www/js/one.js\',\n//   \'http://example.com/www/js/two.js\' ]\n\nconsole.log(smc.originalPositionFor({\n  line: 2,\n  column: 28\n}));\n// { source: \'http://example.com/www/js/two.js\',\n//   line: 2,\n//   column: 10,\n//   name: \'n\' }\n\nconsole.log(smc.generatedPositionFor({\n  source: \'http://example.com/www/js/two.js\',\n  line: 2,\n  column: 10\n}));\n// { line: 2, column: 28 }\n\nsmc.eachMapping(function (m) {\n  // ...\n});\n```\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n```js\nfunction compile(ast) {\n  switch (ast.type) {\n  case \'BinaryExpression\':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      [compile(ast.left), " + ", compile(ast.right)]\n    );\n  case \'Literal\':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      String(ast.value)\n    );\n  // ...\n  default:\n    throw new Error("Bad AST");\n  }\n}\n\nvar ast = parse("40 + 2", "add.js");\nconsole.log(compile(ast).toStringWithSourceMap({\n  file: \'add.js\'\n}));\n// { code: \'40 + 2\',\n//   map: [object SourceMapGenerator] }\n```\n\n#### With SourceMapGenerator (low level API)\n\n```js\nvar map = new SourceMapGenerator({\n  file: "source-mapped.js"\n});\n\nmap.addMapping({\n  generated: {\n    line: 10,\n    column: 35\n  },\n  source: "foo.js",\n  original: {\n    line: 33,\n    column: 2\n  },\n  name: "christopher"\n});\n\nconsole.log(map.toString());\n// \'{"version":3,"file":"source-mapped.js","sources":["foo.js"],"names":["christopher"],"mappings":";;;;;;;;;mCAgCEA"}\'\n```\n\n## API\n\nGet a reference to the module:\n\n```js\n// Node.js\nvar sourceMap = require(\'source-map\');\n\n// Browser builds\nvar sourceMap = window.sourceMap;\n\n// Inside Firefox\nconst sourceMap = require("devtools/toolkit/sourcemap/source-map.js");\n```\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`\'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n```js\nvar consumer = new sourceMap.SourceMapConsumer(rawSourceMapJsonData);\n```\n\n#### SourceMapConsumer.prototype.computeColumnSpans()\n\nCompute the last column for each generated mapping. The last column is\ninclusive.\n\n```js\n// Before:\nconsumer.allGeneratedpositionsfor({ line: 2, source: "foo.coffee" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n\nconsumer.computeColumnSpans();\n\n// After:\nconsumer.allGeneratedpositionsfor({ line: 2, source: "foo.coffee" })\n// [ { line: 2,\n//     column: 1,\n//     lastColumn: 9 },\n//   { line: 2,\n//     column: 10,\n//     lastColumn: 19 },\n//   { line: 2,\n//     column: 20,\n//     lastColumn: Infinity } ]\n\n```\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource\'s line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\n* `bias`: Either `SourceMapConsumer.GREATEST_LOWER_BOUND` or\n  `SourceMapConsumer.LEAST_UPPER_BOUND`. Specifies whether to return the closest\n  element that is smaller than or greater than the one we are searching for,\n  respectively, if the exact element cannot be found.  Defaults to\n  `SourceMapConsumer.GREATEST_LOWER_BOUND`.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n```js\nconsumer.originalPositionFor({ line: 2, column: 10 })\n// { source: \'foo.coffee\',\n//   line: 2,\n//   column: 2,\n//   name: null }\n\nconsumer.originalPositionFor({ line: 99999999999999999, column: 999999999999999 })\n// { source: null,\n//   line: null,\n//   column: null,\n//   name: null }\n```\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.generatedPositionFor({ source: "example.js", line: 2, column: 10 })\n// { line: 1,\n//   column: 56 }\n```\n\n#### SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)\n\nReturns all generated line and column information for the original source, line,\nand column provided. If no column is provided, returns all mappings\ncorresponding to a either the line we are searching for or the next closest line\nthat has any mappings. Otherwise, returns all mappings corresponding to the\ngiven line and either the column we are searching for or the next closest column\nthat has any offsets.\n\nThe only argument is an object with the following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: Optional. The column number in the original source.\n\nand an array of objects is returned, each with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.allGeneratedpositionsfor({ line: 2, source: "foo.coffee" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n```\n\n#### SourceMapConsumer.prototype.hasContentsOfAllSources()\n\nReturn true if we have the embedded source content for every source listed in\nthe source map, false otherwise.\n\nIn other words, if this method returns `true`, then\n`consumer.sourceContentFor(s)` will succeed for every source `s` in\n`consumer.sources`.\n\n```js\n// ...\nif (consumer.hasContentsOfAllSources()) {\n  consumerReadyCallback(consumer);\n} else {\n  fetchSources(consumer, consumerReadyCallback);\n}\n// ...\n```\n\n#### SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\nIf the source content for the given source is not found, then an error is\nthrown. Optionally, pass `true` as the second param to have `null` returned\ninstead.\n\n```js\nconsumer.sources\n// [ "my-cool-lib.clj" ]\n\nconsumer.sourceContentFor("my-cool-lib.clj")\n// "..."\n\nconsumer.sourceContentFor("this is not in the source map");\n// Error: "this is not in the source map" is not in the source map\n\nconsumer.sourceContentFor("this is not in the source map", true);\n// null\n```\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file\'s line/column order or the\n  original\'s source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n```js\nconsumer.eachMapping(function (m) { console.log(m); })\n// ...\n// { source: \'illmatic.js\',\n//   generatedLine: 1,\n//   generatedColumn: 0,\n//   originalLine: 1,\n//   originalColumn: 0,\n//   name: null }\n// { source: \'illmatic.js\',\n//   generatedLine: 2,\n//   generatedColumn: 0,\n//   originalLine: 2,\n//   originalColumn: 0,\n//   name: null }\n// ...\n```\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n* `skipValidation`: Optional. When `true`, disables validation of mappings as\n  they are added. This can improve performance but should be used with\n  discretion, as a last resort. Even then, one should avoid using this flag when\n  running tests, if possible.\n\n```js\nvar generator = new sourceMap.SourceMapGenerator({\n  file: "my-generated-javascript-file.js",\n  sourceRoot: "http://example.com/app/js/"\n});\n```\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new `SourceMapGenerator` from an existing `SourceMapConsumer` instance.\n\n* `sourceMapConsumer` The SourceMap.\n\n```js\nvar generator = sourceMap.SourceMapGenerator.fromSourceMap(consumer);\n```\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource\'s line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n```js\ngenerator.addMapping({\n  source: "module-one.scm",\n  original: { line: 128, column: 0 },\n  generated: { line: 3, column: 456 }\n})\n```\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n```js\ngenerator.setSourceContent("module-one.scm",\n                           fs.readFileSync("path/to/module-one.scm"))\n```\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimum of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren\'t in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `\'.\'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n```js\ngenerator.toString()\n// \'{"version":3,"sources":["module-one.scm"],"names":[],"mappings":"...snip...","file":"my-generated-javascript-file.js","sourceRoot":"http://example.com/app/js/"}\'\n```\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn\'t associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn\'t associated with an original column.\n\n* `source`: The original source\'s filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n```js\nvar node = new SourceNode(1, 2, "a.cpp", [\n  new SourceNode(3, 4, "b.cpp", "extern int status;\\n"),\n  new SourceNode(5, 6, "c.cpp", "std::string* make_string(size_t n);\\n"),\n  new SourceNode(7, 8, "d.cpp", "int main(int argc, char** argv) {}\\n"),\n]);\n```\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n* `relativePath` The optional path that relative sources in `sourceMapConsumer`\n  should be relative to.\n\n```js\nvar consumer = new SourceMapConsumer(fs.readFileSync("path/to/my-file.js.map"));\nvar node = SourceNode.fromStringWithSourceMap(fs.readFileSync("path/to/my-file.js"),\n                                              consumer);\n```\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.add(" + ");\nnode.add(otherNode);\nnode.add([leftHandOperandNode, " + ", rightHandOperandNode]);\n```\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.prepend("/** Build Id: f783haef86324gf **/\\n\\n");\n```\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n```js\nnode.setSourceContent("module-one.scm",\n                      fs.readFileSync("path/to/module-one.scm"))\n```\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source\'s line/column location.\n\n* `fn`: The traversal function.\n\n```js\nvar node = new SourceNode(1, 2, "a.js", [\n  new SourceNode(3, 4, "b.js", "uno"),\n  "dos",\n  [\n    "tres",\n    new SourceNode(5, 6, "c.js", "quatro")\n  ]\n]);\n\nnode.walk(function (code, loc) { console.log("WALK:", code, loc); })\n// WALK: uno { source: \'b.js\', line: 3, column: 4, name: null }\n// WALK: dos { source: \'a.js\', line: 1, column: 2, name: null }\n// WALK: tres { source: \'a.js\', line: 1, column: 2, name: null }\n// WALK: quatro { source: \'c.js\', line: 5, column: 6, name: null }\n```\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n```js\nvar a = new SourceNode(1, 2, "a.js", "generated from a");\na.setSourceContent("a.js", "original a");\nvar b = new SourceNode(1, 2, "b.js", "generated from b");\nb.setSourceContent("b.js", "original b");\nvar c = new SourceNode(1, 2, "c.js", "generated from c");\nc.setSourceContent("c.js", "original c");\n\nvar node = new SourceNode(null, null, null, [a, b, c]);\nnode.walkSourceContents(function (source, contents) { console.log("WALK:", source, ":", contents); })\n// WALK: a.js : original a\n// WALK: b.js : original b\n// WALK: c.js : original c\n```\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node\'s children.\n\n* `sep`: The separator.\n\n```js\nvar lhs = new SourceNode(1, 2, "a.rs", "my_copy");\nvar operand = new SourceNode(3, 4, "a.rs", "=");\nvar rhs = new SourceNode(5, 6, "a.rs", "orig.clone()");\n\nvar node = new SourceNode(null, null, null, [ lhs, operand, rhs ]);\nvar joinedNode = node.join(" ");\n```\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming white space from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n```js\n// Trim trailing white space.\nnode.replaceRight(/\\s*$/, "");\n```\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n```js\nvar node = new SourceNode(1, 2, "a.js", [\n  new SourceNode(3, 4, "b.js", "uno"),\n  "dos",\n  [\n    "tres",\n    new SourceNode(5, 6, "c.js", "quatro")\n  ]\n]);\n\nnode.toString()\n// \'unodostresquatro\'\n```\n\n#### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n```js\nvar node = new SourceNode(1, 2, "a.js", [\n  new SourceNode(3, 4, "b.js", "uno"),\n  "dos",\n  [\n    "tres",\n    new SourceNode(5, 6, "c.js", "quatro")\n  ]\n]);\n\nnode.toStringWithSourceMap({ file: "my-output-file.js" })\n// { code: \'unodostresquatro\',\n//   map: [object SourceMapGenerator] }\n```\n',
1159 silly resolved     readmeFilename: 'README.md',
1159 silly resolved     _id: 'source-map@0.5.3',
1159 silly resolved     dist: { shasum: '8b712c199842b169e2950eba100b23a763ef640f' },
1159 silly resolved     _from: 'source-map@~0.5.1',
1159 silly resolved     _resolved: 'https://registry.npmjs.org/source-map/-/source-map-0.5.3.tgz' } ]
1160 info install uglify-to-browserify@1.0.2 into /usr/local/lib/node_modules/uglify-js
1161 info install async@0.2.10 into /usr/local/lib/node_modules/uglify-js
1162 info install yargs@3.10.0 into /usr/local/lib/node_modules/uglify-js
1163 info install source-map@0.5.3 into /usr/local/lib/node_modules/uglify-js
1164 info installOne uglify-to-browserify@1.0.2
1165 info installOne async@0.2.10
1166 info installOne yargs@3.10.0
1167 info installOne source-map@0.5.3
1168 warn engine source-map@0.5.3: wanted: {"node":">=0.10.0"} (current: {"node":"v0.8.18","npm":"1.2.2"})
1169 verbose from cache /Users/Connor/.npm/uglify-to-browserify/1.0.2/package/package.json
1170 verbose from cache /Users/Connor/.npm/async/0.2.10/package/package.json
1171 verbose from cache /Users/Connor/.npm/yargs/3.10.0/package/package.json
1172 verbose from cache /Users/Connor/.npm/source-map/0.5.3/package/package.json
1173 info /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify unbuild
1174 verbose read json /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify/package.json
1175 info /usr/local/lib/node_modules/uglify-js/node_modules/async unbuild
1176 verbose read json /usr/local/lib/node_modules/uglify-js/node_modules/async/package.json
1177 info /usr/local/lib/node_modules/uglify-js/node_modules/yargs unbuild
1178 verbose read json /usr/local/lib/node_modules/uglify-js/node_modules/yargs/package.json
1179 info /usr/local/lib/node_modules/uglify-js/node_modules/source-map unbuild
1180 verbose read json /usr/local/lib/node_modules/uglify-js/node_modules/source-map/package.json
1181 verbose tar unpack /Users/Connor/.npm/uglify-to-browserify/1.0.2/package.tgz
1182 verbose tar unpack /Users/Connor/.npm/async/0.2.10/package.tgz
1183 verbose tar unpack /Users/Connor/.npm/yargs/3.10.0/package.tgz
1184 verbose tar unpack /Users/Connor/.npm/source-map/0.5.3/package.tgz
1185 silly lockFile 07675fac-ode-modules-uglify-to-browserify /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify
1186 verbose lock /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify /Users/Connor/.npm/07675fac-ode-modules-uglify-to-browserify.lock
1187 silly lockFile 06d9ca7f-les-uglify-js-node-modules-async /usr/local/lib/node_modules/uglify-js/node_modules/async
1188 verbose lock /usr/local/lib/node_modules/uglify-js/node_modules/async /Users/Connor/.npm/06d9ca7f-les-uglify-js-node-modules-async.lock
1189 silly lockFile fe98b5d1-les-uglify-js-node-modules-yargs /usr/local/lib/node_modules/uglify-js/node_modules/yargs
1190 verbose lock /usr/local/lib/node_modules/uglify-js/node_modules/yargs /Users/Connor/.npm/fe98b5d1-les-uglify-js-node-modules-yargs.lock
1191 silly lockFile 59a0e7e2-glify-js-node-modules-source-map /usr/local/lib/node_modules/uglify-js/node_modules/source-map
1192 verbose lock /usr/local/lib/node_modules/uglify-js/node_modules/source-map /Users/Connor/.npm/59a0e7e2-glify-js-node-modules-source-map.lock
1193 silly gunzTarPerm modes [ '755', '644' ]
1194 silly gunzTarPerm modes [ '755', '644' ]
1195 silly gunzTarPerm modes [ '755', '644' ]
1196 silly gunzTarPerm modes [ '755', '644' ]
1197 silly gunzTarPerm extractEntry package.json
1198 silly gunzTarPerm extractEntry package.json
1199 silly gunzTarPerm extractEntry package.json
1200 silly gunzTarPerm extractEntry package.json
1201 silly gunzTarPerm extractEntry .npmignore
1202 silly gunzTarPerm extractEntry README.md
1203 silly gunzTarPerm extractEntry README.md
1204 silly gunzTarPerm extractEntry LICENSE
1205 silly gunzTarPerm extractEntry README.md
1206 silly gunzTarPerm extractEntry LICENSE
1207 silly gunzTarPerm extractEntry README.md
1208 silly gunzTarPerm extractEntry source-map.js
1209 silly gunzTarPerm extractEntry LICENSE
1210 silly gunzTarPerm extractEntry index.js
1211 silly gunzTarPerm extractEntry component.json
1212 silly gunzTarPerm extractEntry lib/async.js
1213 silly gunzTarPerm extractEntry index.js
1214 silly gunzTarPerm extractEntry completion.sh.hbs
1215 silly gunzTarPerm extractEntry lib/completion.js
1216 silly gunzTarPerm extractEntry dist/source-map.debug.js
1217 silly gunzTarPerm extractEntry .travis.yml
1218 silly gunzTarPerm extractEntry test/index.js
1219 silly gunzTarPerm extractEntry lib/parser.js
1220 silly gunzTarPerm extractEntry lib/usage.js
1221 silly gunzTarPerm extractEntry lib/validation.js
1222 silly gunzTarPerm extractEntry dist/source-map.js
1223 silly gunzTarPerm extractEntry dist/source-map.min.js
1224 silly gunzTarPerm extractEntry dist/source-map.min.js.map
1225 verbose read json /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify/package.json
1226 silly lockFile 07675fac-ode-modules-uglify-to-browserify /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify
1227 silly gunzTarPerm extractEntry lib/array-set.js
1228 info preinstall uglify-to-browserify@1.0.2
1229 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify/package.json
1230 silly gunzTarPerm extractEntry lib/base64-vlq.js
1231 silly gunzTarPerm extractEntry lib/base64.js
1232 silly gunzTarPerm extractEntry lib/binary-search.js
1233 silly gunzTarPerm extractEntry lib/mapping-list.js
1234 silly gunzTarPerm extractEntry lib/quick-sort.js
1235 silly gunzTarPerm extractEntry lib/source-map-consumer.js
1236 silly gunzTarPerm extractEntry lib/source-map-generator.js
1237 silly gunzTarPerm extractEntry lib/source-node.js
1238 silly gunzTarPerm extractEntry lib/util.js
1239 verbose readDependencies using package.json deps
1240 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify/package.json
1241 verbose read json /usr/local/lib/node_modules/uglify-js/node_modules/async/package.json
1242 verbose readDependencies using package.json deps
1243 silly resolved []
1244 verbose about to build /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify
1245 info build /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify
1246 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/uglify-to-browserify/package.json
1247 silly lockFile 06d9ca7f-les-uglify-js-node-modules-async /usr/local/lib/node_modules/uglify-js/node_modules/async
1248 info preinstall async@0.2.10
1249 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/async/package.json
1250 verbose read json /usr/local/lib/node_modules/uglify-js/node_modules/yargs/package.json
1251 silly lockFile fe98b5d1-les-uglify-js-node-modules-yargs /usr/local/lib/node_modules/uglify-js/node_modules/yargs
1252 verbose linkStuff [ true,
1252 verbose linkStuff   '/usr/local/lib/node_modules',
1252 verbose linkStuff   false,
1252 verbose linkStuff   '/usr/local/lib/node_modules/uglify-js/node_modules' ]
1253 info linkStuff uglify-to-browserify@1.0.2
1254 verbose linkBins uglify-to-browserify@1.0.2
1255 verbose linkMans uglify-to-browserify@1.0.2
1256 verbose rebuildBundles uglify-to-browserify@1.0.2
1257 info install uglify-to-browserify@1.0.2
1258 verbose readDependencies using package.json deps
1259 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/async/package.json
1260 info preinstall yargs@3.10.0
1261 info postinstall uglify-to-browserify@1.0.2
1262 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/yargs/package.json
1263 verbose readDependencies using package.json deps
1264 silly resolved []
1265 verbose about to build /usr/local/lib/node_modules/uglify-js/node_modules/async
1266 info build /usr/local/lib/node_modules/uglify-js/node_modules/async
1267 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/async/package.json
1268 verbose readDependencies using package.json deps
1269 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/yargs/package.json
1270 verbose linkStuff [ true,
1270 verbose linkStuff   '/usr/local/lib/node_modules',
1270 verbose linkStuff   false,
1270 verbose linkStuff   '/usr/local/lib/node_modules/uglify-js/node_modules' ]
1271 info linkStuff async@0.2.10
1272 verbose linkBins async@0.2.10
1273 verbose linkMans async@0.2.10
1274 verbose rebuildBundles async@0.2.10
1275 info install async@0.2.10
1276 verbose readDependencies using package.json deps
1277 info postinstall async@0.2.10
1278 verbose cache add [ 'camelcase@^1.0.2', null ]
1279 verbose cache add name=undefined spec="camelcase@^1.0.2" args=["camelcase@^1.0.2",null]
1280 verbose parsed url { pathname: 'camelcase@^1.0.2',
1280 verbose parsed url   path: 'camelcase@^1.0.2',
1280 verbose parsed url   href: 'camelcase@^1.0.2' }
1281 verbose cache add name="camelcase" spec="^1.0.2" args=["camelcase","^1.0.2"]
1282 verbose parsed url { pathname: '^1.0.2', path: '^1.0.2', href: '^1.0.2' }
1283 verbose addNamed [ 'camelcase', '^1.0.2' ]
1284 verbose addNamed [ null, null ]
1285 silly lockFile 80aa6a97-camelcase-1-0-2 camelcase@^1.0.2
1286 verbose lock camelcase@^1.0.2 /Users/Connor/.npm/80aa6a97-camelcase-1-0-2.lock
1287 verbose cache add [ 'cliui@^2.1.0', null ]
1288 verbose cache add name=undefined spec="cliui@^2.1.0" args=["cliui@^2.1.0",null]
1289 verbose parsed url { pathname: 'cliui@^2.1.0',
1289 verbose parsed url   path: 'cliui@^2.1.0',
1289 verbose parsed url   href: 'cliui@^2.1.0' }
1290 verbose cache add name="cliui" spec="^2.1.0" args=["cliui","^2.1.0"]
1291 verbose parsed url { pathname: '^2.1.0', path: '^2.1.0', href: '^2.1.0' }
1292 verbose addNamed [ 'cliui', '^2.1.0' ]
1293 verbose addNamed [ null, null ]
1294 silly lockFile 31274be7-cliui-2-1-0 cliui@^2.1.0
1295 verbose lock cliui@^2.1.0 /Users/Connor/.npm/31274be7-cliui-2-1-0.lock
1296 verbose cache add [ 'decamelize@^1.0.0', null ]
1297 verbose cache add name=undefined spec="decamelize@^1.0.0" args=["decamelize@^1.0.0",null]
1298 verbose parsed url { pathname: 'decamelize@^1.0.0',
1298 verbose parsed url   path: 'decamelize@^1.0.0',
1298 verbose parsed url   href: 'decamelize@^1.0.0' }
1299 verbose cache add name="decamelize" spec="^1.0.0" args=["decamelize","^1.0.0"]
1300 verbose parsed url { pathname: '^1.0.0', path: '^1.0.0', href: '^1.0.0' }
1301 verbose addNamed [ 'decamelize', '^1.0.0' ]
1302 verbose addNamed [ null, null ]
1303 silly lockFile 659e6240-decamelize-1-0-0 decamelize@^1.0.0
1304 verbose lock decamelize@^1.0.0 /Users/Connor/.npm/659e6240-decamelize-1-0-0.lock
1305 verbose cache add [ 'window-size@0.1.0', null ]
1306 verbose cache add name=undefined spec="window-size@0.1.0" args=["window-size@0.1.0",null]
1307 verbose parsed url { pathname: 'window-size@0.1.0',
1307 verbose parsed url   path: 'window-size@0.1.0',
1307 verbose parsed url   href: 'window-size@0.1.0' }
1308 verbose cache add name="window-size" spec="0.1.0" args=["window-size","0.1.0"]
1309 verbose parsed url { pathname: '0.1.0', path: '0.1.0', href: '0.1.0' }
1310 verbose addNamed [ 'window-size', '0.1.0' ]
1311 verbose addNamed [ '0.1.0', '0.1.0' ]
1312 silly lockFile a0d49481-window-size-0-1-0 window-size@0.1.0
1313 verbose lock window-size@0.1.0 /Users/Connor/.npm/a0d49481-window-size-0-1-0.lock
1314 info addNameTag [ 'camelcase', '^1.0.2' ]
1315 info addNameTag [ 'cliui', '^2.1.0' ]
1316 info addNameTag [ 'decamelize', '^1.0.0' ]
1317 verbose url raw camelcase
1318 verbose url resolving [ 'https://registry.npmjs.org/', './camelcase' ]
1319 verbose url resolved https://registry.npmjs.org/camelcase
1320 info trying registry request attempt 1 at 13:37:35
1321 http GET https://registry.npmjs.org/camelcase
1322 verbose url raw cliui
1323 verbose url resolving [ 'https://registry.npmjs.org/', './cliui' ]
1324 verbose url resolved https://registry.npmjs.org/cliui
1325 info trying registry request attempt 1 at 13:37:35
1326 http GET https://registry.npmjs.org/cliui
1327 verbose url raw decamelize
1328 verbose url resolving [ 'https://registry.npmjs.org/', './decamelize' ]
1329 verbose url resolved https://registry.npmjs.org/decamelize
1330 info trying registry request attempt 1 at 13:37:35
1331 http GET https://registry.npmjs.org/decamelize
1332 verbose url raw window-size/0.1.0
1333 verbose url resolving [ 'https://registry.npmjs.org/', './window-size/0.1.0' ]
1334 verbose url resolved https://registry.npmjs.org/window-size/0.1.0
1335 info trying registry request attempt 1 at 13:37:35
1336 http GET https://registry.npmjs.org/window-size/0.1.0
1337 http 200 https://registry.npmjs.org/camelcase
1338 silly registry.get cb [ 200,
1338 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
1338 silly registry.get     etag: '"CS4J6GVTASMZWER2U0CJUSXRK"',
1338 silly registry.get     'content-type': 'application/json',
1338 silly registry.get     'cache-control': 'max-age=300',
1338 silly registry.get     'content-length': '11909',
1338 silly registry.get     'accept-ranges': 'bytes',
1338 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:35 GMT',
1338 silly registry.get     via: '1.1 varnish',
1338 silly registry.get     age: '71',
1338 silly registry.get     connection: 'keep-alive',
1338 silly registry.get     'x-served-by': 'cache-jfk1034-JFK',
1338 silly registry.get     'x-cache': 'HIT',
1338 silly registry.get     'x-cache-hits': '4',
1338 silly registry.get     'x-timer': 'S1453574255.444953,VS0,VE0',
1338 silly registry.get     vary: 'Accept' } ]
1339 silly lockFile 80aa6a97-camelcase-1-0-2 camelcase@^1.0.2
1340 verbose about to build /usr/local/lib/node_modules/uglify-js/node_modules/yargs
1341 info /usr/local/lib/node_modules/uglify-js/node_modules/yargs unbuild
1342 verbose from cache /usr/local/lib/node_modules/uglify-js/node_modules/yargs/package.json
1343 info preuninstall yargs@3.10.0
1344 info uninstall yargs@3.10.0
1345 verbose false,/usr/local/lib/node_modules,/usr/local/lib/node_modules/uglify-js/node_modules unbuild yargs@3.10.0
1346 info postuninstall yargs@3.10.0
1347 verbose about to build /usr/local/lib/node_modules/uglify-js
1348 info /usr/local/lib/node_modules/uglify-js unbuild
1349 verbose from cache /usr/local/lib/node_modules/uglify-js/package.json
1350 info preuninstall uglify-js@2.6.1
1351 info uninstall uglify-js@2.6.1
1352 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild uglify-js@2.6.1
1353 verbose /usr/local/bin,[object Object] binRoot
1354 http 200 https://registry.npmjs.org/decamelize
1355 silly registry.get cb [ 200,
1355 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
1355 silly registry.get     etag: '"4P8GGUAZSP3O7T754ICN6U7IN"',
1355 silly registry.get     'content-type': 'application/json',
1355 silly registry.get     'cache-control': 'max-age=300',
1355 silly registry.get     'content-length': '6752',
1355 silly registry.get     'accept-ranges': 'bytes',
1355 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:35 GMT',
1355 silly registry.get     via: '1.1 varnish',
1355 silly registry.get     age: '126',
1355 silly registry.get     connection: 'keep-alive',
1355 silly registry.get     'x-served-by': 'cache-jfk1027-JFK',
1355 silly registry.get     'x-cache': 'HIT',
1355 silly registry.get     'x-cache-hits': '4',
1355 silly registry.get     'x-timer': 'S1453574255.453269,VS0,VE0',
1355 silly registry.get     vary: 'Accept' } ]
1356 http 200 https://registry.npmjs.org/cliui
1357 silly registry.get cb [ 200,
1357 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
1357 silly registry.get     etag: '"58ULZBTOK6IB181MZQF4NKI10"',
1357 silly registry.get     'content-type': 'application/json',
1357 silly registry.get     'cache-control': 'max-age=300',
1357 silly registry.get     'content-length': '18350',
1357 silly registry.get     'accept-ranges': 'bytes',
1357 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:35 GMT',
1357 silly registry.get     via: '1.1 varnish',
1357 silly registry.get     age: '2',
1357 silly registry.get     connection: 'keep-alive',
1357 silly registry.get     'x-served-by': 'cache-jfk1036-JFK',
1357 silly registry.get     'x-cache': 'HIT',
1357 silly registry.get     'x-cache-hits': '1',
1357 silly registry.get     'x-timer': 'S1453574255.451010,VS0,VE0',
1357 silly registry.get     vary: 'Accept' } ]
1358 http 200 https://registry.npmjs.org/window-size/0.1.0
1359 silly registry.get cb [ 200,
1359 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
1359 silly registry.get     etag: '"663MQE2QDQ87JZWCV2SZKKO24"',
1359 silly registry.get     'content-type': 'application/json',
1359 silly registry.get     'cache-control': 'max-age=300',
1359 silly registry.get     'content-length': '990',
1359 silly registry.get     'accept-ranges': 'bytes',
1359 silly registry.get     date: 'Sat, 23 Jan 2016 18:37:35 GMT',
1359 silly registry.get     via: '1.1 varnish',
1359 silly registry.get     age: '0',
1359 silly registry.get     connection: 'keep-alive',
1359 silly registry.get     'x-served-by': 'cache-jfk1036-JFK',
1359 silly registry.get     'x-cache': 'HIT',
1359 silly registry.get     'x-cache-hits': '1',
1359 silly registry.get     'x-timer': 'S1453574255.455544,VS0,VE80',
1359 silly registry.get     vary: 'Accept' } ]
1360 info postuninstall uglify-js@2.6.1
1361 silly lockFile 659e6240-decamelize-1-0-0 decamelize@^1.0.0
1362 silly lockFile 31274be7-cliui-2-1-0 cliui@^2.1.0
1363 silly lockFile f2f407fa-indow-size-window-size-0-1-0-tgz https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz
1364 verbose lock https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz /Users/Connor/.npm/f2f407fa-indow-size-window-size-0-1-0-tgz.lock
1365 verbose addRemoteTarball [ 'https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz',
1365 verbose addRemoteTarball   '5438cd2ea93b202efa3a19fe8887aee7c94f9c9d' ]
1366 info retry fetch attempt 1 at 13:37:35
1367 verbose fetch to= /Users/Connor/tmp/npm-20311/1453574255600-0.01928560435771942/tmp.tgz
1368 error error rolling back Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/uglify-js/node_modules/source-map'
1368 error error rolling back  uglify-js@2.6.1 { [Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/uglify-js/node_modules/source-map']
1368 error error rolling back   errno: 53,
1368 error error rolling back   code: 'ENOTEMPTY',
1368 error error rolling back   path: '/usr/local/lib/node_modules/uglify-js/node_modules/source-map' }
1369 error Error: No compatible version found: camelcase@'^1.0.2'
1369 error Valid install targets:
1369 error ["1.0.0","1.0.1","1.0.2","1.1.0","1.2.0","1.2.1","2.0.0","2.0.1"]
1369 error     at installTargetsError (/usr/local/lib/node_modules/npm/lib/cache.js:674:10)
1369 error     at /usr/local/lib/node_modules/npm/lib/cache.js:589:10
1369 error     at saved (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:138:7)
1369 error     at /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:218:7
1369 error     at Object.oncomplete (fs.js:297:15)
1370 error If you need help, you may report this log at:
1370 error     <http://github.com/isaacs/npm/issues>
1370 error or email it to:
1370 error     <npm-@googlegroups.com>
1371 error System Darwin 14.5.0
1372 error command "node" "/usr/local/bin/npm" "install" "-g" "grunt-cli" "uglify-js"
1373 error cwd /Users/Connor/Documents/workspace/cybertroll
1374 error node -v v0.8.18
1375 error npm -v 1.2.2
1376 verbose exit [ 1, true ]
